{"version":3,"sources":["webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/components/library/Section/TextOverImage/styles.scss.js","webpack:///./src/components/library/Section/TextOverImage/index.js","webpack:///./src/pages/who-we-are/why.js","webpack:///./src/components/library/SubNav/styles.scss.js","webpack:///./src/components/library/SubNav/data.js","webpack:///./src/components/library/SubNav/SubNav.js","webpack:///./src/components/library/Section/ImageWithTextBlock/styles.scss.js","webpack:///./src/components/library/Section/ImageWithTextBlock/index.js","webpack:///./src/components/library/Section/TextWithManyImages/styles.scss.js","webpack:///./src/components/library/Section/TextWithManyImages/index.js","webpack:///./src/components/library/Section/GiantTextBlock/styles.scss.js","webpack:///./src/components/library/Section/GiantTextBlock/index.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js"],"names":["LegoListStyles","styled","div","Base","Media","Width","Md","Root","Size","LegoList","blocks","map","block","index","className","key","image","ImgMatch","src","Name","Color","legoColor","title","text","TextOverImageStyle","Theme","Eggplant","TextOverImage","Image","ButtonText","ButtonDest","Header","Btn","Label","BgColor","Sky","TextColor","White","Destination","HeroProps","bg","Cream","color","Primary","playButton","playButtonBg","Ocean","gear","gearFill","Sunset","subNavColor","Nova","arrowColor","ThemeProps","PrimaryColor","SecondaryColor","TertiaryColor","OverflowHidden","GiantTextBlock","GiantText","Sm","WhoWhyPage","Layout","SplitHero","subNav","label","link","active","BasicSection","Background","noPaddingTop","noPaddingBottom","BorderBottomVertical","BorderTopVertical","CenteredTitle","Title","Class","noPaddingLeft","noPaddingRight","ImageWithTextBlock","Number","Paragraph","reversedOrder","wideWidth","topText","giantText","bottomText","BorderMiddle","Marquee","images","Shadow","Dino","Blush","TextWithManyImages","Text","Images","Section","pb","SplitLinks","message","to","themeProps","first","last","Container","Box","props","theme","Site","Nav","Flex","Link","a","Font","Transition","String","data","testNav","route","SubNav","width","px","pr","pl","as","activeClassName","defaultProps","ImageWithTextBlockStyles","Lg","BlockNumber","children","TextWithManyImagesStyle","Reversed","GiantTextBlockStyle","Grid","SiteWidth","buttonText","buttonDest","headerText","MarqueeStyle","BgLinear","hexToRGB","SquareFormat","MarqueeSlider","render","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Helmet","rel","type","href","ref","h","slider","this","React","Component"],"mappings":"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","file":"component---src-pages-who-we-are-why-js-bff4e90fa44684c2e8e4.js","sourcesContent":["// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important;\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({ blocks }) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n      return (\n        <div className=\"item\" key={index}>\n          {block.image && <ImgMatch src={block.image} />}\n          {!block.image && (\n            <Icon\n              Name=\"basicLego\"\n              Color={block.legoColor ? block.legoColor : false}\n            />\n          )}\n          <div className=\"h6\">{block.title}</div>\n          <p>{block.text}</p>\n        </div>\n      );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const TextOverImageStyle = styled.div`\n  text-align: center;\n  position: relative;\n  z-index: 1;\n  padding: calc(${Root.Size} * 2) 0 calc(${Root.Size} * 1.5) 0;\n\n  .h3 {\n    font-weight: 700;\n    max-width: calc(${Root.Size} * 10);\n    margin: 0 auto;\n    padding-bottom: calc(${Root.Size} / 4);\n  }\n\n  > div {\n    z-index: 2;\n    position: relative;\n  }\n\n  .background-image {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1;\n    height: 100%;\n    width: 100%;\n\n    &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: ${Theme.Color.Eggplant};\n      opacity: 0.3;\n      z-index: 2;\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n      z-index: 1;\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text Over Image Section Component:\n// This is a section for centered text on a fullwidth background image that\n// has an overlay over it\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\nimport { BasicInner } from 'components/library/Section/BasicSection';\nimport Btn from 'components/library/Btn';\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { TextOverImageStyle, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const TextOverImage = ({ Image, ButtonText, ButtonDest, Header }) => (\n  <TextOverImageStyle>\n    <div className=\"background-image\">\n      <ImgMatch src={Image} />\n    </div>\n    <BasicInner>\n      <div className=\"h3\">{Header}</div>\n      {ButtonText && ButtonDest && (\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Sky}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      )}\n    </BasicInner>\n  </TextOverImageStyle>\n);\n\nexport default TextOverImage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Why.js:\n// This is why portion of the who section of the site.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { Icon } from 'components/library/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport Section from 'components/library/Elements/Section';\nimport SplitLinks, { SplitLink } from 'components/library/SplitLinks';\nimport TextWithManyImages from 'components/library/Section/TextWithManyImages';\nimport Marquee from 'components/library/Section/Marquee';\nimport TextOverImage from 'components/library/Section/TextOverImage';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport GiantText from 'components/library/Section/GiantTextBlock';\nimport LegoList from 'components/library/Section/LegoList';\nimport ImageWithTextBlock from 'components/library/Section/ImageWithTextBlock';\nimport { FooterAngleSlice } from 'components/library/BackgroundSlice/FooterAngleSlice';\nimport { FooterCurveSlice } from 'components/library/BackgroundSlice/FooterCurveSlice';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\nimport { Box, Flex } from 'components/library/Elements';\nimport SubNav from 'components/library/SubNav';\nimport SplitHero from 'components/library/Hero/SplitHero';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Data\n// import ImgPlaceholder from './assets/placeholder.jpg';\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.Cream,\n  color: Theme.Color.Primary,\n  playButton: true,\n  playButtonBg: Theme.Color.Ocean,\n  gear: true,\n  gearFill: Theme.Color.Sunset,\n  subNavColor: Theme.Color.Nova,\n  arrowColor: Theme.Color.Nova,\n};\n\nconst ThemeProps = {\n  BgColor: Theme.Color.Cream,\n  PrimaryColor: 'unset',\n  SecondaryColor: Theme.Color.Primary,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst OverflowHidden = styled.div`\n  width: 100vw;\n  overflow: hidden;\n`;\n\nconst GiantTextBlock = styled(GiantText)`\n  &.wide-word {\n    .headline {\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        font-size: 12vw;\n      }\n    }\n  }\n`;\n\n// Render Page\nconst WhoWhyPage = () => {\n  return (\n    <Layout {...ThemeProps}>\n      <SplitHero\n        {...HeroProps}\n        subNav={[\n          { label: 'who', link: '/who-we-are/who' },\n          { label: 'why', active: true, link: '/who-we-are/why' },\n          { label: 'how', link: '/who-we-are/how' },\n          { label: 'careers', link: '/who-we-are/careers' },\n        ]}\n      >\n        <h2>We provide opportunities for creative expression</h2>\n        <h6>We are passionate specialists in STEM Education.</h6>\n      </SplitHero>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.White}\n        noPaddingTop\n        noPaddingBottom\n        BorderBottomVertical\n      >\n        <TextOverImage\n          Image=\"lego-bin.jpg\"\n          Header=\"Combining the elements of fun, challenge, and learning since 1997\"\n          ButtonText=\"Our Story\"\n          ButtonDest=\"/\"\n        />\n      </BasicSection>\n\n      <BasicSection BgColor={Theme.Color.Background} BorderTopVertical>\n        <BasicInner>\n          <CenteredTitle Title=\"Our Values\" Class=\"headline\">\n            <div className=\"absolute-image\">\n              <Icon Name=\"swoop\" />\n              <ImgMatch src=\"gears.png\" />\n            </div>\n          </CenteredTitle>\n        </BasicInner>\n      </BasicSection>\n\n      <OverflowHidden>\n        <BasicSection\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Sunset}\n          noPaddingTop\n          noPaddingBottom\n        >\n          <BasicInner noPaddingLeft noPaddingRight>\n            <ImageWithTextBlock\n              Image=\"boy-2.jpg\"\n              Header=\"Build problem-solving skills\"\n              Number=\"01\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            />\n            <ImageWithTextBlock\n              reversedOrder\n              Image=\"boy-1.jpg\"\n              Header=\"Provide an opportunity for creative expression\"\n              Number=\"06\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            >\n              <Icon Name=\"gear\" />\n            </ImageWithTextBlock>\n            <ImageWithTextBlock\n              Image=\"girls-1.jpg\"\n              Header=\"Foster a greater appreciation of how things work\"\n              Number=\"03\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            />\n          </BasicInner>\n        </BasicSection>\n      </OverflowHidden>\n\n      <OverflowHidden>\n        <BasicSection\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Sunset}\n        >\n          <BasicInner wideWidth>\n            <GiantTextBlock\n              className=\"wide-word\"\n              Number=\"04\"\n              topText=\"Encourage the qualities of\"\n              giantText=\"Inquisitiveness Self Reliance &amp; Self Confidence\"\n              bottomText=\"in children &amp; in everybody.\"\n            />\n            <div className=\"absolute-image\">\n              <ImgMatch src=\"gears.png\" />\n            </div>\n          </BasicInner>\n        </BasicSection>\n      </OverflowHidden>\n\n      <BasicSection BgColor={Theme.Color.Background} BorderMiddle>\n        <Marquee\n          images={[\n            'random-1.jpg',\n            'random-2.jpg',\n            'random-3.jpg',\n            'random-4.jpg',\n            'random-5.jpg',\n            'random-6.jpg',\n          ]}\n          Shadow\n        />\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Dino}\n        noPaddingTop\n      >\n        <BasicInner>\n          <LegoList\n            blocks={[\n              {\n                title: 'Creative Collaboration',\n                text:\n                  'A greater sense of understanding and connection between your staff, as they will now know how others play, and in turn, how they work best.',\n                legoColor: 'orange',\n              },\n              {\n                title: 'New Perspectives',\n                text:\n                  'A willingness to tackle problems from a play perspective, embracing failure as part of the process of finding the solution.',\n                legoColor: 'purple',\n              },\n              {\n                title: 'Staff Morale',\n                text:\n                  'A rejuvenated staff who rediscovers what they find fun about their job and their organization.',\n                legoColor: 'blue',\n              },\n            ]}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Blush}\n        TextColor={Theme.Color.Dino}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <BasicInner noPaddingRight>\n          <TextWithManyImages\n            Text=\"We do this in the context of fun-filled engineering and\n              architectural projects, activities that both the children and the\n              instructors enjoy.\"\n            Images={['kids-1.jpg', 'lego-head.png', 'boy-3.png']}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <Section bg={ThemeProps.BgColor} pb={0}>\n        <SplitLinks>\n          <SplitLink\n            title=\"Here ye, here ye.\"\n            message=\"Learn about Our Story &amp; where it all began.\"\n            // message={'Keep exploring programs in ' + countyStateString + '.'}\n            to=\"/\"\n            themeProps={ThemeProps}\n            first\n          />\n          <SplitLink\n            title=\"Keep reading.\"\n            message=\"Learn about how we utilize STEM Enrichment.\"\n            to=\"/\"\n            themeProps={ThemeProps}\n            last\n          />\n        </SplitLinks>\n      </Section>\n    </Layout>\n  );\n};\n\nexport default WhoWhyPage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubNav Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// Might want to move this out to where it is used so the button can\n// be re-used without specific positioning.\nexport const Container = styled(Box)`\n  margin: 0 auto;\n  max-width: ${props => props.theme.Root.Site.Width};\n  position: absolute;\n  top: calc(${props => props.theme.Root.Size} * -1.5);\n`;\n\nexport const Nav = styled(Flex)`\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nNav.Link = styled.a`\n  color: ${props => props.theme.Color.Nova};\n  cursor: pointer;\n  font-family: ${props => props.theme.Font.Header};\n  font-size: 1.5rem;\n  transition: ${props => props.theme.Base.Transition.String};\n\n  &:hover {\n    opacity: 0.7;\n    text-decoration: none;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Navigation Transformer Component:\n// This is to transform our Navigation data into usable data.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const data = {\n  // Primary Nav\n  testNav: [\n    {\n      route: '/',\n      label: 'Who',\n    },\n    {\n      route: '/',\n      label: 'What',\n    },\n    {\n      route: '/',\n      label: 'Why',\n    },\n    {\n      route: '/',\n      label: 'How',\n    },\n  ],\n};\n","// SubNav Component:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { Container, Nav } from './styles.scss';\n\n// Data\nimport { data } from './data';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SubNav = () => (\n  <Container width={1} px={1}>\n    <Box width={[1, 1, 1, 6 / 10]} pr={[0, 0, 2, 4, 10]} pl={[0, 0, 2, 6, 9]}>\n      <Nav as=\"nav\">\n        {data.testNav.map(link => (\n          <Nav.Link\n            to={link.route}\n            key={link.label}\n            activeClassName=\"subnav--active\"\n          >\n            {link.label}\n          </Nav.Link>\n        ))}\n      </Nav>\n    </Box>\n  </Container>\n);\n\nSubNav.defaultProps = {};\n\nexport default SubNav;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlockStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  position: relative;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: column-reverse;\n  }\n\n  .image,\n  .text {\n    flex: 1;\n  }\n\n  .ico-gear {\n    position: absolute;\n    height: 140%;\n    width: 100%;\n    top: -20%;\n    right: -50%;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      height: 130%;\n      top: -15%;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: calc(${Root.Size} * 3);\n      top: auto;\n      bottom: calc(${Root.Size} * -1.5);\n    }\n\n    svg {\n      height: 100%;\n      width: auto;\n      fill: ${Theme.Color.Nova};\n    }\n  }\n\n  .image {\n    margin-right: calc(${Root.Size} / 4);\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: 50vw;\n      max-height: calc(${Root.Size} * 6);\n      margin-right: 0;\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n    }\n  }\n\n  .text {\n    .container {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      padding: ${Root.Size} calc(${Root.Size} * 1.5);\n      max-width: calc(${Root.Size} * 10);\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        padding: calc(${Root.Size} * 0.5);\n      }\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        max-width: none;\n      }\n\n      .h3 {\n        font-weight: 700;\n        padding-bottom: calc(${Root.Size} / 3.5);\n      }\n\n      p {\n        color: ${Theme.Color.Dino};\n      }\n    }\n  }\n\n  ${props =>\n    props.reversedOrder\n      ? `\n        flex-direction: row-reverse;\n        .container {\n          margin: 0 auto;\n        }\n        .image {\n          margin-right: 0;\n          margin-left: calc(${Root.Size} / 4);\n          @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n            margin-left: 0;\n          }\n        }\n    `\n      : null};\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Image Section Block Component:\n// This is a section for two half width components, one of a rectangular\n// image and the other of a number, headline and text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { ImageWithTextBlockStyles, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlock = ({\n  reversedOrder,\n  Image,\n  Number,\n  Header,\n  Paragraph,\n  children,\n  ButtonText,\n  ButtonDest,\n}) => (\n  <ImageWithTextBlockStyles reversedOrder={reversedOrder}>\n    {children}\n    <div className=\"image\">\n      <ImgMatch src={Image} />\n    </div>\n    <div className=\"text\">\n      <div className=\"container\">\n        <BlockNumber className=\"h1\">{Number}</BlockNumber>\n        <div className=\"h3\">{Header}</div>\n        <p className=\"p-lg\">{Paragraph}</p>\n      </div>\n      {/*(ButtonText && ButtonDest) &&\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      */}\n    </div>\n  </ImageWithTextBlockStyles>\n);\n\nexport default ImageWithTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImagesStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => props.Reversed ? 'row-reverse' : 'row'};\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n  }\n\n  .text {\n    font-weight: 700;\n    flex: 2;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding-top: ${Root.Size};\n    padding-bottom: ${Root.Size}; \n    padding-right: calc(${Root.Size} * ${props => props.Reversed ? '0' : '1'});\n    padding-left: calc(${Root.Size} * ${props => props.Reversed ? '2' : '0'});\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      padding-top: calc(${Root.Size} / 2);\n      padding-bottom: calc(${Root.Size} / 2); \n      padding-right: calc(${Root.Size} ${props => props.Reversed ? '* 0' : '/ 2'});\n      padding-left: calc(${Root.Size} ${props => props.Reversed ? '* 1' : '0'});\n\n      &.h4 {\n        font-size: 1.75rem;\n      }\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding-top: calc(${Root.Size});\n      padding-bottom: calc(${Root.Size});\n      padding-right: calc(${Root.Size} ${props => props.Reversed ? '* 0' : '* 1'});\n      padding-left: calc(${Root.Size} ${props => props.Reversed ? '* 1' : '* 0'});\n      max-width: calc(${Theme.Base.Size.Lg} * 10);\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding-right: calc(${Theme.Base.Size.Lg} ${props => props.Reversed ? '* 0' : '/ 2.4'});\n      padding-left: calc(${Theme.Base.Size.Lg} ${props => props.Reversed ? '/ 2.4' : '* 0'});\n    }\n  }\n\n  .images {\n    flex: ${props => props.Reversed ? '3.75' : '3'};\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      flex: 3;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-${props => props.Reversed ? 'left' : 'right'}: calc(${Theme.Base.Size.Lg} * 0.75);\n      height: 50vw;\n    }\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      margin-${props => props.Reversed ? 'left' : 'right'}: calc(${Theme.Base.Size.Lg} / 2.4);\n    }\n\n\n    > .gatsby-image-wrapper {\n      display: inline-block;\n      padding-top: 66.66%;\n      width: 66.66%;\n      height: 100%;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding-top: 0;\n      }\n\n      > div {\n        position: absolute;\n        padding-bottom: 0 !important;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n    }\n\n    .column {\n      width: 33.33%;\n      padding-top: 66.66%;\n      margin-left: 4px;\n      height: 100%;\n      position: relative;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding-top: 0;\n      }\n\n      .gatsby-image-wrapper {\n        width: 100%;\n        position: absolute !important;\n        top: 0;\n        left: 0;\n        height: calc(50% - 2px);\n\n        &:first-of-type {\n          margin-bottom: 4px;\n        }\n\n        &:last-of-type {\n          margin-top: 4px;\n          top: calc(50% - 2px);\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Many Images Section Component:\n// This is a section for two half width components, one of three square\n// imaged and the other of text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport { TextWithManyImagesStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImages = ({ Images, Text, Reversed }) => (\n  <TextWithManyImagesStyle Reversed={Reversed}>\n    <div className=\"text h4\">{Text}</div>\n    <div className=\"images\">\n      <ImgMatch src={Images[0]} />\n      <div className=\"column\">\n        <ImgMatch src={Images[1]} />\n        <ImgMatch src={Images[2]} />\n      </div>\n    </div>\n  </TextWithManyImagesStyle>\n);\n\nexport default TextWithManyImages;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlockStyle = styled.div`\n  text-align: center;\n  font-weight: 700;\n  margin: 0 auto;\n  position: relative;\n  max-width: calc(${Root.Size} * 15);\n  @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n    max-width: calc(${Root.Size} * 12);\n  }\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    max-width: calc(${Root.Size} * 11);\n  }\n\n  .h1-alt {\n    font-size: 5rem;\n  }\n\n  .headline {\n    color: ${Theme.Color.Eggplant};\n    padding: calc(${Root.Size} / 4) 0;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 6rem;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n    }\n  }\n\n  ~ .absolute-image {\n    position: absolute;\n    top: calc(${Root.Size} * -4.5);\n    width: 20%;\n    left: calc(${Root.Size} * -1);\n    height: auto;\n    transform: rotate(260deg);\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      left: calc(${Root.Size} * 0.5);\n    }\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      top: calc(${Root.Size} * -2.5);\n    }\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      display: none;\n    }\n  }\n\n  .btn .btn-inner {\n    margin-top: calc(${Root.Size} / 3);\n  }\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Giant Text Block Component:\n// This is a section for giant text sandwiched by smaller text, an optional button and an optional number\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { GiantTextBlockStyle, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlock = ({\n  giantText,\n  topText,\n  bottomText,\n  buttonText,\n  buttonDest,\n  headerText,\n  Number,\n  className,\n  children,\n}) => (\n  <GiantTextBlockStyle className={className}>\n    {children}\n    {Number && <BlockNumber className=\"h1\">{Number}</BlockNumber>}\n    {headerText && <BlockNumber className=\"h1-alt\">{headerText}</BlockNumber>}\n    {topText && <div className=\"h4\">{topText}</div>}\n    {giantText && <div className=\"headline txt-clr-eggplant\">{giantText}</div>}\n    {bottomText && <div className=\"h4\">{bottomText}</div>}\n    {buttonText && buttonDest && (\n      <Btn\n        Label={buttonText}\n        BgColor={Theme.Color.Dino}\n        TextColor={Theme.Color.White}\n        Destination={buttonDest}\n      />\n    )}\n  </GiantTextBlockStyle>\n);\n\nexport default GiantTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props =>\n    props.BgLinear\n      ? `\n    background: linear-gradient( to top, ` +\n        props.BgLinear +\n        ` 75%, ${Theme.Color.Background} 75% );\n  `\n      : null};\n\n  .slick-slider {\n    ${props =>\n      props.Shadow\n        ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(\n          Theme.Color.Eggplant,\n          0.2\n        )});\n      }\n    `\n        : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props =>\n          props.SquareFormat\n            ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        `\n            : `\n          padding-top: 140%;\n        `};\n\n        img {\n          ${props =>\n            props.SquareFormat\n              ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          `\n              : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Md +\n            (Base.Media.Width.Lg - Base.Media.Width.Md) / 2,\n          settings: {\n            slidesToShow: 3,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Sm +\n            (Base.Media.Width.Md - Base.Media.Width.Sm) / 2,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle SquareFormat={SquareFormat} Shadow={Shadow} BgLinear={BgLinear}>\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;\n"],"sourceRoot":""}