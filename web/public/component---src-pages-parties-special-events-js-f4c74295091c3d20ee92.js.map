{"version":3,"sources":["webpack:///./src/components/library/SplitLinks/styles.scss.js","webpack:///./src/components/library/SplitLinks/SplitLinks.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/components/library/SubNav/styles.scss.js","webpack:///./src/components/library/SubNav/data.js","webpack:///./src/components/library/SubNav/SubNav.js","webpack:///./src/sections/SpecialEventsSplitLinks/SpecialEventsSplitLinks.js","webpack:///./src/pages/parties/special-events.js","webpack:///./src/components/library/Section/ImageWithTextBlock/styles.scss.js","webpack:///./src/components/library/Section/ImageWithTextBlock/index.js","webpack:///./src/components/library/Section/GiantTextBlock/styles.scss.js","webpack:///./src/components/library/Section/GiantTextBlock/index.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js"],"names":["CourseFooter","styled","Flex","Explore","LinkContainer","p","borderColor","Root","Size","Base","Media","Width","Md","Lg","first","last","Theme","Transition","String","arrowColor","SplitLink","title","message","to","themeProps","width","TertiaryColor","className","Name","as","fontWeight","lineHeight","color","SecondaryColor","defaultProps","SplitLinks","children","LegoListStyles","div","LegoList","blocks","map","block","index","key","image","ImgMatch","src","Color","legoColor","text","Container","Box","props","theme","Site","Nav","Link","a","Nova","Font","Header","data","testNav","route","label","SubNav","px","pr","pl","link","activeClassName","HostProgramSplitLinks","pageContext","stateName","countyName","costCodeName","Section","bg","BgColor","HeroProps","Ocean","White","playButton","playButtonBg","gear","gearFill","Dino","subNavColor","ThemeProps","PrimaryColor","Primary","WhoWhyPage","Layout","SplitHero","subNav","active","Btn","Label","TextColor","BasicSection","CenteredTitle","Title","Class","PaddingBottom","Sunset","noPaddingTop","noPaddingBottom","noPaddingLeft","noPaddingRight","ImageWithTextBlock","Image","Paragraph","reversedOrder","Background","Marquee","images","SquareFormat","Shadow","SpecialEventsSplitLinks","ImageWithTextBlockStyles","BlockNumber","Blush","Number","ButtonText","ButtonDest","GiantTextBlockStyle","Eggplant","Grid","SiteWidth","Sm","GiantTextBlock","giantText","topText","bottomText","buttonText","buttonDest","headerText","Destination","MarqueeStyle","BgLinear","hexToRGB","MarqueeSlider","render","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Helmet","rel","type","href","ref","h","slider","this","React","Component"],"mappings":"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","file":"component---src-pages-parties-special-events-js-f4c74295091c3d20ee92.js","sourcesContent":["// <SplitLinks /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const CourseFooter = styled(Flex)`\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-align: left;\n`;\n\nCourseFooter.Explore = styled(Flex)`\n  text-align: left;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const LinkContainer = styled(Flex)`\n  align-items: center;\n  flex-direction: row;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  border-right: none;\n  border-bottom: 1px dashed ${p => p.borderColor};\n  padding: calc(${Root.Size} * 0.7) calc(${Root.Size} / 2) calc(${Root.Size});\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: row;\n    justify-content: flex-end;\n    border-right: 1px dashed ${p => p.borderColor};\n    border-bottom: none;\n    padding: 0 calc(${Root.Size} * 1.5);\n  }\n\n  @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n    padding: 0 calc(${Root.Size} * 2);\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  .arrow {\n    background: rgba(0, 0, 0, 0);\n\n    span {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      width: calc(${Root.Size} * 1);\n      height: calc(${Root.Size} * 2);\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        justify-content: ${p =>\n          p.first ? 'flex-start' : p.last ? 'flex-end' : 'center'};\n      }\n    }\n  }\n\n  svg {\n    transition: ${Theme.Base.Transition.String};\n    transform: rotate(180deg) translateX(0);\n    stroke: ${p => p.arrowColor};\n  }\n\n  &:hover {\n    svg {\n      transform: rotate(180deg) translateX(-40%);\n    }\n  }\n\n  &:active {\n  }\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    svg {\n      transform: rotate(0deg) translateX(0);\n    }\n\n    &:hover {\n      svg {\n        transform: rotate(0deg) translateX(-40%);\n      }\n    }\n  }\n\n  &:last-child {\n    border-right: none;\n    border-bottom: none;\n    flex-direction: row;\n    justify-content: space-between;\n\n    @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: flex-start;\n    }\n\n    svg {\n      transform: rotate(180deg) translateX(0);\n    }\n\n    &:hover {\n      svg {\n        transform: rotate(180deg) translateX(-40%);\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <SplitLinks /> component:\n// Pre-footer animated arrow split links\n// todo: naming, stroke color prop\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\nimport { Icon } from 'components/library/Icons';\n\n// Styles\nimport { CourseFooter, LinkContainer } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SplitLink = ({ title, message, first, last, to, themeProps }) => (\n  <LinkContainer\n    width={[1, 1, 1 / 2]}\n    first={first}\n    last={last}\n    borderColor={themeProps.TertiaryColor}\n    arrowColor={themeProps.TertiaryColor}\n  >\n    {first && (\n      <div className=\"arrow\">\n        <Icon Name=\"nextArrow\" />\n      </div>\n    )}\n    <Link to={to}>\n      <Text\n        as=\"span\"\n        className=\"h6\"\n        fontWeight=\"600\"\n        lineHeight={[1.5]}\n        color={themeProps.SecondaryColor}\n      >\n        {title}\n      </Text>\n      <Text\n        as=\"span\"\n        className=\"h4\"\n        fontWeight=\"600\"\n        lineHeight={[1.2, 1.4]}\n        color={themeProps.TertiaryColor}\n      >\n        {message}\n      </Text>\n    </Link>\n    {last && (\n      <div className=\"arrow\">\n        <Icon Name=\"nextArrow\" />\n      </div>\n    )}\n  </LinkContainer>\n);\n\nconst SplitLinks = ({ children }) => (\n  <CourseFooter>\n    <CourseFooter.Explore as=\"article\" width={1}>\n      {children}\n    </CourseFooter.Explore>\n  </CourseFooter>\n);\n\nSplitLink.defaultProps = {\n  title: 'Keep exploring',\n  message: 'Keep exploring our programs.',\n};\n\nexport default SplitLinks;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important;\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({ blocks }) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n      return (\n        <div className=\"item\" key={index}>\n          {block.image && <ImgMatch src={block.image} />}\n          {!block.image && (\n            <Icon\n              Name=\"basicLego\"\n              Color={block.legoColor ? block.legoColor : false}\n            />\n          )}\n          <div className=\"h6\">{block.title}</div>\n          <p>{block.text}</p>\n        </div>\n      );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubNav Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// Might want to move this out to where it is used so the button can\n// be re-used without specific positioning.\nexport const Container = styled(Box)`\n  margin: 0 auto;\n  max-width: ${props => props.theme.Root.Site.Width};\n  position: absolute;\n  top: calc(${props => props.theme.Root.Size} * -1.5);\n`;\n\nexport const Nav = styled(Flex)`\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nNav.Link = styled.a`\n  color: ${props => props.theme.Color.Nova};\n  cursor: pointer;\n  font-family: ${props => props.theme.Font.Header};\n  font-size: 1.5rem;\n  transition: ${props => props.theme.Base.Transition.String};\n\n  &:hover {\n    opacity: 0.7;\n    text-decoration: none;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Navigation Transformer Component:\n// This is to transform our Navigation data into usable data.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const data = {\n  // Primary Nav\n  testNav: [\n    {\n      route: '/',\n      label: 'Who',\n    },\n    {\n      route: '/',\n      label: 'What',\n    },\n    {\n      route: '/',\n      label: 'Why',\n    },\n    {\n      route: '/',\n      label: 'How',\n    },\n  ],\n};\n","// SubNav Component:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { Container, Nav } from './styles.scss';\n\n// Data\nimport { data } from './data';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SubNav = () => (\n  <Container width={1} px={1}>\n    <Box width={[1, 1, 1, 6 / 10]} pr={[0, 0, 2, 4, 10]} pl={[0, 0, 2, 6, 9]}>\n      <Nav as=\"nav\">\n        {data.testNav.map(link => (\n          <Nav.Link\n            to={link.route}\n            key={link.label}\n            activeClassName=\"subnav--active\"\n          >\n            {link.label}\n          </Nav.Link>\n        ))}\n      </Nav>\n    </Box>\n  </Container>\n);\n\nSubNav.defaultProps = {};\n\nexport default SubNav;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <CourseSplitLinks /> section:\n// todo: whats new link slug\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Section from 'components/library/Elements/Section';\nimport SplitLinks, { SplitLink } from 'components/library/SplitLinks';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst HostProgramSplitLinks = ({\n  pageContext,\n  themeProps,\n  stateName,\n  countyName,\n  costCodeName,\n}) => {\n  // // Build our slugified strings for pretty URLs.\n  // let stateSlug = slugify(stateName);\n  // let countySlug = slugify(countyName);\n  // let costCodeSlug = slugify(costCodeName);\n  // let programSlug = slugify(pageContext.course_type_name);\n\n  // // Our pretty URL\n  // let programsLink = `/programs/${stateSlug}/${costCodeSlug}/${countySlug}`;\n  // let locationLink = `/locations/${stateSlug}/${costCodeSlug}/${countySlug}`;\n\n  // // Check our County names if they contain 'County'\n  // const countyClean = countyName => {\n  //   if (\n  //     countyName.toLowerCase().includes('county') ||\n  //     countyName.toLowerCase().includes('district')\n  //   ) {\n  //     return countyName;\n  //   } else {\n  //     return countyName + ' County';\n  //   }\n  // };\n\n  // const countyStateString = costCodeName\n  //   ? costCodeName + ', ' + pageContext.locationMeta.state.name\n  //   : stateName;\n\n  return (\n    <Section bg={themeProps.BgColor}>\n      <SplitLinks>\n        <SplitLink\n          title=\"Adults need purposeful play too\"\n          message=\"View our team building opportunities\"\n          // message={'Keep exploring programs in ' + countyStateString + '.'}\n          to=\"/\"\n          themeProps={themeProps}\n          first\n        />\n        <SplitLink\n          title=\"Want to plan birthday?\"\n          message=\"Learn about our birthday parties\"\n          to=\"/\"\n          themeProps={themeProps}\n          last\n        />\n      </SplitLinks>\n    </Section>\n  );\n};\n\nexport default HostProgramSplitLinks;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// special-events.js:\n// This is the birthday parties page of parties\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\nimport ImgMatch from 'components/core/ImgMatch';\nimport Marquee from 'components/library/Section/Marquee';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport GiantTextBlock from 'components/library/Section/GiantTextBlock';\nimport LegoList from 'components/library/Section/LegoList';\nimport ImageWithTextBlock from 'components/library/Section/ImageWithTextBlock';\nimport { FooterAngleSlice } from 'components/library/BackgroundSlice/FooterAngleSlice';\nimport { FooterCurveSlice } from 'components/library/BackgroundSlice/FooterCurveSlice';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\nimport { Box, Flex } from 'components/library/Elements';\nimport SubNav from 'components/library/SubNav';\nimport SplitHero from 'components/library/Hero/SplitHero';\n\n// Sections\nimport SpecialEventsSplitLinks from 'sections/SpecialEventsSplitLinks';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Data\n// import ImgPlaceholder from './assets/placeholder.jpg';\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.Ocean,\n  color: Theme.Color.White,\n  playButton: true,\n  playButtonBg: Theme.Color.Nova,\n  gear: true,\n  gearFill: Theme.Color.Dino,\n  subNavColor: Theme.Color.White,\n};\n\nconst ThemeProps = {\n  BgColor: Theme.Color.Ocean,\n  PrimaryColor: Theme.Color.White,\n  SecondaryColor: Theme.Color.Dino,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst WhoWhyPage = () => {\n  return (\n    <Layout {...ThemeProps}>\n      <SplitHero\n        {...HeroProps}\n        subNav={[\n          { label: 'birthday parties', link: '/parties/birthday-parties' },\n          {\n            label: 'special events',\n            active: true,\n            link: '/parties/special-events',\n          },\n        ]}\n      >\n        <Box pr={[4, 8, 14]}>\n          <h2>Helping Kids and Adults Understand Through Play</h2>\n          <h6>\n            For the past 10 years, we have introduced play into Fortune 500\n            Companies Take Your Kids to Work Days.\n          </h6>\n          <Btn\n            Label=\"Request a Special Event\"\n            BgColor={Theme.Color.Nova}\n            TextColor={Theme.Color.White}\n          />\n        </Box>\n      </SplitHero>\n\n      <BasicSection BgColor={Theme.Color.White}>\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Special Events\"\n            Class=\"headline\"\n            PaddingBottom={`calc(${Root.Size} / 3.5)`}\n          ></CenteredTitle>\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Sunset}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <BasicInner noPaddingLeft noPaddingRight noPaddingBottom>\n          <ImageWithTextBlock\n            Image=\"kids-adult-playing.jpg\"\n            Header=\"Play at work\"\n            Paragraph=\"We have run our LEGO-Inspired STEM Activations for companies around the country, giving kids a chance to experience a fun-filled day at their parents' workplace.\"\n          />\n          <ImageWithTextBlock\n            reversedOrder\n            Image=\"kids-lego-boxes.jpg\"\n            Header=\"Engineers at heart\"\n            Paragraph=\"We are play engineers at heart, so we love helping kids to understand through play what their parents do at work, or enabling families to build something out of LEGO® materials that they once thought impossible.\"\n          ></ImageWithTextBlock>\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Sunset}\n      >\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Our Special Events Partners\"\n            Class=\"h3\"\n            TextColor={Theme.Color.Sunset}\n          />\n        </BasicInner>\n        <Marquee\n          images={[\n            'visa.png',\n            'microsoft.png',\n            'clorox.png',\n            'google.png',\n            'pixar.jpeg',\n          ]}\n          SquareFormat\n          Shadow\n        />\n      </BasicSection>\n\n      <SpecialEventsSplitLinks themeProps={ThemeProps} />\n    </Layout>\n  );\n};\n\nexport default WhoWhyPage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlockStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  position: relative;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: column-reverse;\n  }\n\n  .image,\n  .text {\n    flex: 1;\n  }\n\n  .ico-gear {\n    position: absolute;\n    height: 140%;\n    width: 100%;\n    top: -20%;\n    right: -50%;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      height: 130%;\n      top: -15%;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: calc(${Root.Size} * 3);\n      top: auto;\n      bottom: calc(${Root.Size} * -1.5);\n    }\n\n    svg {\n      height: 100%;\n      width: auto;\n      fill: ${Theme.Color.Nova};\n    }\n  }\n\n  .image {\n    margin-right: calc(${Root.Size} / 4);\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: 50vw;\n      max-height: calc(${Root.Size} * 6);\n      margin-right: 0;\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n    }\n  }\n\n  .text {\n    .container {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      padding: ${Root.Size} calc(${Root.Size} * 1.5);\n      max-width: calc(${Root.Size} * 10);\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        padding: calc(${Root.Size} * 0.5);\n      }\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        max-width: none;\n      }\n\n      .h3 {\n        font-weight: 700;\n        padding-bottom: calc(${Root.Size} / 3.5);\n      }\n\n      p {\n        color: ${Theme.Color.Dino};\n      }\n    }\n  }\n\n  ${props =>\n    props.reversedOrder\n      ? `\n        flex-direction: row-reverse;\n        .container {\n          margin: 0 auto;\n        }\n        .image {\n          margin-right: 0;\n          margin-left: calc(${Root.Size} / 4);\n          @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n            margin-left: 0;\n          }\n        }\n    `\n      : null};\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Image Section Block Component:\n// This is a section for two half width components, one of a rectangular\n// image and the other of a number, headline and text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { ImageWithTextBlockStyles, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlock = ({\n  reversedOrder,\n  Image,\n  Number,\n  Header,\n  Paragraph,\n  children,\n  ButtonText,\n  ButtonDest,\n}) => (\n  <ImageWithTextBlockStyles reversedOrder={reversedOrder}>\n    {children}\n    <div className=\"image\">\n      <ImgMatch src={Image} />\n    </div>\n    <div className=\"text\">\n      <div className=\"container\">\n        <BlockNumber className=\"h1\">{Number}</BlockNumber>\n        <div className=\"h3\">{Header}</div>\n        <p className=\"p-lg\">{Paragraph}</p>\n      </div>\n      {/*(ButtonText && ButtonDest) &&\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      */}\n    </div>\n  </ImageWithTextBlockStyles>\n);\n\nexport default ImageWithTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlockStyle = styled.div`\n  text-align: center;\n  font-weight: 700;\n  margin: 0 auto;\n  position: relative;\n  max-width: calc(${Root.Size} * 15);\n  @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n    max-width: calc(${Root.Size} * 12);\n  }\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    max-width: calc(${Root.Size} * 11);\n  }\n\n  .h1-alt {\n    font-size: 5rem;\n  }\n\n  .headline {\n    color: ${Theme.Color.Eggplant};\n    padding: calc(${Root.Size} / 4) 0;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 6rem;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n    }\n  }\n\n  ~ .absolute-image {\n    position: absolute;\n    top: calc(${Root.Size} * -4.5);\n    width: 20%;\n    left: calc(${Root.Size} * -1);\n    height: auto;\n    transform: rotate(260deg);\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      left: calc(${Root.Size} * 0.5);\n    }\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      top: calc(${Root.Size} * -2.5);\n    }\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      display: none;\n    }\n  }\n\n  .btn .btn-inner {\n    margin-top: calc(${Root.Size} / 3);\n  }\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Giant Text Block Component:\n// This is a section for giant text sandwiched by smaller text, an optional button and an optional number\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { GiantTextBlockStyle, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlock = ({\n  giantText,\n  topText,\n  bottomText,\n  buttonText,\n  buttonDest,\n  headerText,\n  Number,\n  className,\n  children,\n}) => (\n  <GiantTextBlockStyle className={className}>\n    {children}\n    {Number && <BlockNumber className=\"h1\">{Number}</BlockNumber>}\n    {headerText && <BlockNumber className=\"h1-alt\">{headerText}</BlockNumber>}\n    {topText && <div className=\"h4\">{topText}</div>}\n    {giantText && <div className=\"headline txt-clr-eggplant\">{giantText}</div>}\n    {bottomText && <div className=\"h4\">{bottomText}</div>}\n    {buttonText && buttonDest && (\n      <Btn\n        Label={buttonText}\n        BgColor={Theme.Color.Dino}\n        TextColor={Theme.Color.White}\n        Destination={buttonDest}\n      />\n    )}\n  </GiantTextBlockStyle>\n);\n\nexport default GiantTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props =>\n    props.BgLinear\n      ? `\n    background: linear-gradient( to top, ` +\n        props.BgLinear +\n        ` 75%, ${Theme.Color.Background} 75% );\n  `\n      : null};\n\n  .slick-slider {\n    ${props =>\n      props.Shadow\n        ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(\n          Theme.Color.Eggplant,\n          0.2\n        )});\n      }\n    `\n        : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props =>\n          props.SquareFormat\n            ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        `\n            : `\n          padding-top: 140%;\n        `};\n\n        img {\n          ${props =>\n            props.SquareFormat\n              ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          `\n              : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Md +\n            (Base.Media.Width.Lg - Base.Media.Width.Md) / 2,\n          settings: {\n            slidesToShow: 3,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Sm +\n            (Base.Media.Width.Md - Base.Media.Width.Sm) / 2,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle SquareFormat={SquareFormat} Shadow={Shadow} BgLinear={BgLinear}>\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;\n"],"sourceRoot":""}