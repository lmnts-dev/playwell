{"version":3,"sources":["webpack:///./src/components/library/Section/EdgeImageWithText/styles.scss.js","webpack:///./src/components/library/Section/EdgeImageWithText/index.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/components/library/ImageAccordian/styles.scss.js","webpack:///./src/components/library/ImageAccordian/index.js","webpack:///./src/components/library/Section/ImageAccordianFeature/styles.scss.js","webpack:///./src/components/library/Section/ImageAccordianFeature/index.js","webpack:///./src/components/library/Section/ImageWithTextBlock/styles.scss.js","webpack:///./src/components/library/Section/ImageWithTextBlock/index.js","webpack:///./src/components/library/Section/SimpleTextWithImage/styles.scss.js","webpack:///./src/components/library/Section/SimpleTextWithImage/index.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js","webpack:///./src/components/library/Section/EdgeSlider/styles.scss.js","webpack:///./src/components/library/Section/EdgeSlider/index.js","webpack:///./src/components/library/Section/SplitTextBoxes/styles.scss.js","webpack:///./src/components/library/Section/SplitTextBoxes/index.js","webpack:///./src/pages/who-we-are/how.js"],"names":["EdgeImageWithTextStyle","styled","div","props","Reversed","Base","Media","Width","Md","Root","Size","Theme","Grid","SiteWidth","p","Reverse","Color","Deepsea","Galaxy","Lg","Sm","LightText","White","Sunset","CaptionColor","EdgeImageWithText","Image","Caption","Header","Paragraph","Paragraph2","ButtonText","ButtonDest","Name","className","Btn","Label","BgColor","Nova","TextColor","Destination","ImgMatch","objectFit","objectPosition","src","defaultProps","LegoListStyles","LegoList","blocks","map","block","index","key","image","legoColor","title","text","ImageAccordianStyle","ImageAccordian","type","ImageAccordianFeatureStyle","Clay","ImageAccordianFeature","Links","Accordians","wideWidth","link","href","dest","label","accordian","header","paragraph","FooterAngleSlice","bgColor","Background","ImageWithTextBlockStyles","Dino","reversedOrder","BlockNumber","Blush","ImageWithTextBlock","Number","children","SimpleTextWithImageStyle","SimpleTextWithImage","Eggplant","MarqueeStyle","BgLinear","Shadow","hexToRGB","SquareFormat","MarqueeSlider","render","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Helmet","rel","ref","h","slider","this","React","Component","Marquee","images","EdgeSliderStyle","EdgeSliderSlider","EdgeSlider","titles","caption","SplitTextBoxesStyle","SplitTextBoxes","FirstBlock","SecondBlock","buttonDest","buttonText","ThemeProps","Cream","PrimaryColor","SecondaryColor","Primary","TertiaryColor","HeroProps","bg","Lilac","color","playButton","playButtonBg","gear","gearStroke","arrowColor","OverflowHidden","WhoHowPage","Layout","SplitHero","subNav","active","BasicSection","BorderTop","CenteredTitle","MaxWidth","Title","Class","noPaddingTop","noPaddingBottom","CurveAndAngle","CurveColor","AngleColor","AbsoluteImages","width","right","bottom","noPaddingLeft","noPaddingRight","Section","pb","SplitLinks","message","to","themeProps","first","last"],"mappings":"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","file":"component---src-pages-who-we-are-how-js-8995711a4522d57e2565.js","sourcesContent":["// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const EdgeImageWithTextStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Reversed ? 'row-reverse' : 'row')};\n  align-items: center;\n  position: relative;\n  \n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n  }\n\n  .ico-swoop {\n    position: absolute;\n    height: calc(100% + calc(${Root.Size} * 2));\n    ${props => (props.Reversed ? 'left' : 'right')}: calc(calc(50vw - calc(${\n  Theme.Base.Grid.SiteWidth\n} / 2)) * -1);\n    transform: scale(${props => (props.Reversed ? '-1' : '1')});\n    top: calc(${Root.Size} * -1);\n    width: calc(50vw - calc(${Theme.Base.Grid.SiteWidth} / 4));\n    ${p => p.Reverse && 'transform: rotate(180deg) translateX(0);'}\n    svg {\n      height: 100%;\n      width: 100%;\n      path {\n        fill: ${props =>\n          props.Reversed ? Theme.Color.Deepsea : Theme.Color.Galaxy};\n      }\n    }\n\n    @media (max-width: ${Theme.Base.Grid.SiteWidth}) {\n      height: calc(100% + calc(${Root.Size}));\n      top: calc(${Root.Size} * -0.5);\n      width: auto;\n      ${props => (props.Reversed ? 'left' : 'right')}: 0;\n      svg {\n        width: auto;\n      }\n    }\n\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      height: 80%;\n      top: 10%;\n    }\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      display: none;\n    }\n  }\n\n  .text,\n  .image {\n    flex: 1;\n  }\n\n  .text {\n    max-width: calc(${Root.Size} * 7);\n    margin-${props => (props.Reversed ? 'left' : 'right')}: calc(${Root.Size});\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      max-width: calc(${Root.Size} * 13);\n      text-align: center;\n      margin: 0 auto;\n    }\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      margin-${props => (props.Reversed ? 'left' : 'right')}: calc(${\n  Root.Size\n} / 2);\n    }\n\n    .h2,\n    .h6 {\n      font-weight: 700;\n\n      &.txt-clr-sunset {\n        color: ${props =>\n          props.LightText ? Theme.Color.White : Theme.Color.Sunset};\n      }\n    }\n\n    .h2 {\n      color: ${p => p.CaptionColor};\n      /* padding: calc(${Root.Size} / 6) 0; */\n    }\n  }\n\n  .image {\n    height: calc(${Root.Size} * 9);\n    margin-${props => (props.Reversed ? 'left' : 'right')}: calc(${\n  Root.Size\n} / 2);\n    flex-shrink: 20;\n    position: relative;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 100%;\n      margin-left: 0;\n      margin-right: 0;\n      padding-top: calc(${Theme.Base.Size.Lg} / 2);\n    }\n\n    .ico-swoop {\n      display: none;\n      ${p => (p.Reverse ? 'left: -3px;' : 'right: 0;')}\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        display: block;\n        width: 50vw;\n        height: 100%;\n        z-index: 1;\n        svg {\n          width: 100%;\n        }\n      }\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        width: auto;\n        ${props => (props.Reversed ? 'right' : 'left')}: 50%;\n        ${props => (props.Reversed ? 'left' : 'right')}: -25%;\n      }\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n      z-index: 2;\n      position: relative;\n\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        width: 50vw;\n        min-width: calc(${Theme.Base.Size.Lg} * 5);\n      }\n      > div {\n        height: 100%;\n        width: auto !important;\n        padding-bottom: 0 !important;\n      }\n    }\n  }\n`;\n\nexport default EdgeImageWithTextStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Edge Image with Text Section Component:\n// This is a section for two half width components, one of a png\n// image (with an svg behind it that touches the edge) and the other of a block of text elements\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport EdgeImageWithTextStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const EdgeImageWithText = ({\n  Image,\n  Caption,\n  CaptionColor,\n  Header,\n  Paragraph,\n  Paragraph2,\n  ButtonText,\n  ButtonDest,\n  Reversed,\n  LightText,\n}) => (\n  <EdgeImageWithTextStyle Reversed={Reversed} LightText={LightText}>\n    <Icon Name=\"swoop\" />\n    <div className=\"text\">\n      <div className=\"h6\">{Caption}</div>\n      <div className=\"h2 txt-clr-sunset\">{Header}</div>\n      <p className=\"p-lg\">{Paragraph}</p>\n      {Paragraph2 && <p className=\"p-lg\">{Paragraph2}</p>}\n      {ButtonText && ButtonDest && (\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      )}\n    </div>\n    <div className=\"image\">\n      <ImgMatch\n        objectFit=\"contain\"\n        objectPosition={Reversed ? '0% 50%' : '100% 50%'}\n        src={Image}\n      />\n      <Icon Name=\"swoop\" />\n    </div>\n  </EdgeImageWithTextStyle>\n);\n\nEdgeImageWithText.defaultProps = {\n  CaptionColor: Theme.Color.Nova,\n};\n\nexport default EdgeImageWithText;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important;\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({ blocks }) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n      return (\n        <div className=\"item\" key={index}>\n          {block.image && <ImgMatch src={block.image} />}\n          {!block.image && (\n            <Icon\n              Name=\"basicLego\"\n              Color={block.legoColor ? block.legoColor : false}\n            />\n          )}\n          <div className=\"h6\">{block.title}</div>\n          <p>{block.text}</p>\n        </div>\n      );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst ImageAccordianStyle = styled.div`\n  color: ${Theme.Color.White};\n\n  .text {\n    background-color: ${Theme.Color.Nova};\n    padding: calc(${Root.Size} / 2);\n    position: relative;\n    border-top-left-radius: calc(${Root.Size} / 8);\n    border-top-right-radius: calc(${Root.Size} / 8);\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size} / 3);\n    }\n\n    .h5 {\n      font-weight: 700;\n      line-height: 0.8 !important;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        font-size: 20px;\n      }\n    }\n\n    p {\n      padding-bottom: 0;\n      max-height: 0;\n      overflow: hidden;\n      transition-duration: 0.25s;\n    }\n\n    .ico,\n    input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: calc(${Root.Size} / 2);\n      width: calc(${Root.Size} / 2);\n      margin: calc(${Root.Size} / 3);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        margin: calc(${Root.Size} / 4);\n      }\n    }\n\n    .ico {\n      pointer-events: none;\n      background-color: ${Theme.Color.Nova};\n      transition-duration: 0.25s;\n\n      g {\n        fill: ${Theme.Color.White};\n      }\n    }\n\n    input:checked ~ .ico {\n      transform: rotate(90deg);\n    }\n\n    input:checked ~ p {\n      max-height: 1000px;\n      padding-top: calc(${Root.Size} / 5);\n    }\n  }\n\n  .image {\n    padding-top: 160%;\n    position: relative;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      flex: 100;\n      padding-top: 40%;\n    }\n\n    .gatsby-image-wrapper {\n      position: absolute !important;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n  }\n`;\n\nexport default ImageAccordianStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Image Accordian Component:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n//Components\nimport { Icon } from 'components/library/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport ImageAccordianStyle from './styles.scss';\n\nconst ImageAccordian = ({ Header, Paragraph, Image }) => (\n  <ImageAccordianStyle className=\"image-accordian\">\n    <div className=\"text\">\n      <input type=\"checkbox\" />\n      <Icon Name=\"carat\" className=\"ico ico-carat\" />\n      <div className=\"h5\">{Header}</div>\n      <p>{Paragraph}</p>\n    </div>\n    <div className=\"image\">\n      <ImgMatch src={Image} />\n    </div>\n  </ImageAccordianStyle>\n);\n\nexport default ImageAccordian;\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageAccordianFeatureStyle = styled.div`\n  ul {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding-bottom: calc(${Root.Size} / 3);\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      display: block;\n      text-align: center;\n    }\n\n    li {\n      font-weight: 700;\n      padding: calc(${Root.Size} / 6);\n      white-space: nowrap;\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        padding: calc(${Root.Size} / 6) 0;\n      }\n\n      &:first-of-type {\n        padding-left: 0;\n      }\n\n      &:last-of-type {\n        padding-right: 0;\n      }\n\n      a {\n        color: ${Theme.Color.Clay};\n        @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n          font-size: 1rem;\n        }\n\n        &:visited {\n          color: ${Theme.Color.Clay};\n        }\n      }\n    }\n  }\n\n  .container {\n    display: flex;\n    flex-direction: row;\n    position: relative;\n    width: 100%;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      display: block;\n    }\n\n    .image-accordian {\n      flex: 1;\n\n      &:nth-of-type(2) {\n        margin: 0 calc(${Root.Size} / 2);\n        @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n          margin: calc(${Root.Size} / 4) 0;\n        }\n      }\n    }\n  }\n\n  .footer-angle-slice {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100vw;\n    height: 20vw;\n  }\n`;\n\nexport default ImageAccordianFeatureStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Simple Text With Iamge Section Component:\n// This is a section for two half width components, one of a png\n// image and the other of a block of text elements\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\nimport { FooterAngleSlice } from 'components/library/BackgroundSlice/FooterAngleSlice';\nimport ImageAccordian from 'components/library/ImageAccordian';\n\n// Styles\nimport ImageAccordianFeatureStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageAccordianFeature = ({ Links, Accordians }) => (\n  <ImageAccordianFeatureStyle>\n    <BasicInner wideWidth>\n      <ul>\n        {Links.map((link, index) => {\n          return (\n            <li key={index}>\n              <a className=\"h6\" href={link.dest}>\n                {link.label}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"container\">\n        {Accordians.map((accordian, index) => {\n          return (\n            <ImageAccordian\n              Header={accordian.header}\n              Paragraph={accordian.paragraph}\n              Image={accordian.image}\n              key={index}\n            />\n          );\n        })}\n      </div>\n    </BasicInner>\n    <FooterAngleSlice bgColor={Theme.Color.Background} />\n  </ImageAccordianFeatureStyle>\n);\n\nexport default ImageAccordianFeature;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlockStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  position: relative;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: column-reverse;\n  }\n\n  .image,\n  .text {\n    flex: 1;\n  }\n\n  .ico-gear {\n    position: absolute;\n    height: 140%;\n    width: 100%;\n    top: -20%;\n    right: -50%;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      height: 130%;\n      top: -15%;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: calc(${Root.Size} * 3);\n      top: auto;\n      bottom: calc(${Root.Size} * -1.5);\n    }\n\n    svg {\n      height: 100%;\n      width: auto;\n      fill: ${Theme.Color.Nova};\n    }\n  }\n\n  .image {\n    margin-right: calc(${Root.Size} / 4);\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: 50vw;\n      max-height: calc(${Root.Size} * 6);\n      margin-right: 0;\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n    }\n  }\n\n  .text {\n    .container {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      padding: ${Root.Size} calc(${Root.Size} * 1.5);\n      max-width: calc(${Root.Size} * 10);\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        padding: calc(${Root.Size} * 0.5);\n      }\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        max-width: none;\n      }\n\n      .h3 {\n        font-weight: 700;\n        padding-bottom: calc(${Root.Size} / 3.5);\n      }\n\n      p {\n        color: ${Theme.Color.Dino};\n      }\n    }\n  }\n\n  ${props =>\n    props.reversedOrder\n      ? `\n        flex-direction: row-reverse;\n        .container {\n          margin: 0 auto;\n        }\n        .image {\n          margin-right: 0;\n          margin-left: calc(${Root.Size} / 4);\n          @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n            margin-left: 0;\n          }\n        }\n    `\n      : null};\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Image Section Block Component:\n// This is a section for two half width components, one of a rectangular\n// image and the other of a number, headline and text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { ImageWithTextBlockStyles, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlock = ({\n  reversedOrder,\n  Image,\n  Number,\n  Header,\n  Paragraph,\n  children,\n  ButtonText,\n  ButtonDest,\n}) => (\n  <ImageWithTextBlockStyles reversedOrder={reversedOrder}>\n    {children}\n    <div className=\"image\">\n      <ImgMatch src={Image} />\n    </div>\n    <div className=\"text\">\n      <div className=\"container\">\n        <BlockNumber className=\"h1\">{Number}</BlockNumber>\n        <div className=\"h3\">{Header}</div>\n        <p className=\"p-lg\">{Paragraph}</p>\n      </div>\n      {/*(ButtonText && ButtonDest) &&\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      */}\n    </div>\n  </ImageWithTextBlockStyles>\n);\n\nexport default ImageWithTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SimpleTextWithImageStyle = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n  }\n\n  .image,\n  .text {\n    flex: 1;\n  }\n\n  .image {\n    padding-left: calc(${Root.Size});\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      max-width: calc(${Root.Size} * 13);\n      padding-left: 0;\n      margin: 0 auto;\n      width: 40%;\n      min-width: calc(${Root.Size} * 6);\n      padding-top: calc(${Theme.Base.Size.Lg} / 2);\n    }\n  }\n\n  .text {\n    padding-right: calc(${Root.Size});\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding-right: 0;\n      text-align: center;\n    }\n\n    > * {\n      max-width: calc(${Root.Size} * 7.5);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        max-width: calc(${Root.Size} * 13);\n        text-align: center;\n        margin: 0 auto;\n      }\n    }\n  }\n\n  .h6,\n  .h2 {\n    font-weight: 700;\n  }\n\n  .h2 {\n    color: ${Theme.Color.Sunset};\n  /*  padding: calc(${Root.Size} / 5) 0; */\n  }\n`;\n\nexport default SimpleTextWithImageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Simple Text With Iamge Section Component:\n// This is a section for two half width components, one of a png\n// image and the other of a block of text elements\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleTextWithImageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SimpleTextWithImage = ({\n  Image,\n  Caption,\n  Header,\n  Paragraph,\n  ButtonText,\n  ButtonDest,\n  className,\n}) => (\n  <SimpleTextWithImageStyle className={className}>\n    <div className=\"text\">\n      <div className=\"h6\">{Caption}</div>\n      <div className=\"h2\">{Header}</div>\n      <p className=\"p-lg\">{Paragraph}</p>\n      {ButtonText && ButtonDest && (\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Eggplant}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      )}\n    </div>\n    <div className=\"image\">\n      <ImgMatch src={Image} objectFit=\"contain\" />\n    </div>\n  </SimpleTextWithImageStyle>\n);\n\nexport default SimpleTextWithImage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props =>\n    props.BgLinear\n      ? `\n    background: linear-gradient( to top, ` +\n        props.BgLinear +\n        ` 75%, ${Theme.Color.Background} 75% );\n  `\n      : null};\n\n  .slick-slider {\n    ${props =>\n      props.Shadow\n        ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(\n          Theme.Color.Eggplant,\n          0.2\n        )});\n      }\n    `\n        : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props =>\n          props.SquareFormat\n            ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        `\n            : `\n          padding-top: 140%;\n        `};\n\n        img {\n          ${props =>\n            props.SquareFormat\n              ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          `\n              : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Md +\n            (Base.Media.Width.Lg - Base.Media.Width.Md) / 2,\n          settings: {\n            slidesToShow: 3,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Sm +\n            (Base.Media.Width.Md - Base.Media.Width.Sm) / 2,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle SquareFormat={SquareFormat} Shadow={Shadow} BgLinear={BgLinear}>\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst EdgeSliderStyle = styled.div`\n  .h5,\n  .h6,\n  .h3 {\n    font-weight: 700;\n  }\n\n  .h5 {\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 17.6px;\n      white-space: nowrap;\n    }\n  }\n\n  .h3 {\n    padding-top: calc(${Root.Size} / 6);\n    color: ${Theme.Color.Sunset};\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      margin-bottom: calc(${Theme.Base.Size.Lg});\n    }\n  }\n\n  .h6, .h3 {\n    margin-right: calc(${Root.Size} * 3.25);\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      margin-right: calc(${Theme.Base.Size.Lg} / 2);\n    }\n  }\n\n  .slick-slider {\n    padding-top: calc(${Root.Size} / 2);\n    filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      filter: drop-shadow(0px 8px 20px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n    }\n    position: relative;\n\n    .slick-list {\n      overflow: visible;\n    }\n\n    .slick-arrow {\n      position: absolute;\n      top: calc(${Root.Size} / -2);\n      left: auto;\n      right: calc(${Root.Size} / 2);\n      border-radius: 50%;\n      height: calc(${Root.Size});\n      width: calc(${Root.Size});\n      border: 1px solid ${Theme.Color.Dino};\n      transition-duration: .5s;\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        left: 0;\n        right: auto;\n      }\n\n      &.slick-disabled {\n        opacity: .2;\n        cursor: default;\n\n        &:before {\n          opacity: 1;\n        }\n      }\n\n      &:before {\n        height: calc(${Root.Size} / 3);\n        width: calc(${Root.Size} / 3);\n        border: 1.5px solid ${Theme.Color.Dino};\n        content: \"\";\n        position: absolute;\n        top: calc(${Root.Size} / 3.5);\n        left: calc(${Root.Size} / 2.5);\n        transform: rotate(45deg);\n      }\n\n      &.slick-prev {\n        right: calc(${Root.Size} * 1.75);\n        &:before {\n          border-right-color: transparent;\n          border-top-color: transparent;\n        }\n      }\n\n      &.slick-next {\n\n        &:before {\n          left: calc(${Root.Size} / 4.5);\n          border-left-color: transparent;\n          border-bottom-color: transparent;\n        }\n        @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n          left: calc(${Root.Size} * 1.25);\n        }\n      }\n    }\n\n    .item {\n      text-align: center;\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        display: block !important;\n        padding-top: 140%;\n        height: 0 !important;\n        border-radius: calc(${Root.Size} / 8);\n        margin-top calc(${Root.Size} / 4);\n\n        img {\n          border-radius: calc(${Root.Size} / 8);\n        }\n      }\n    }\n  }\n`;\n\nexport default EdgeSliderStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// EdgeSlider.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport EdgeSliderStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass EdgeSliderSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 1000,\n      autoplay: false,\n      slidesToShow: 3.8,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: false,\n      arrows: true,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 3.2,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Sm +\n            (Base.Media.Width.Md - Base.Media.Width.Sm) / 2,\n          settings: {\n            slidesToShow: 2.6,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst EdgeSlider = ({ images, titles, caption, title }) => (\n  <EdgeSliderStyle>\n    <div className=\"h6\">{caption}</div>\n    <div className=\"h3\">{title}</div>\n    <EdgeSliderSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <div className=\"h5\">{titles[index]}</div>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </EdgeSliderSlider>\n  </EdgeSliderStyle>\n);\n\nexport default EdgeSlider;\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SplitTextBoxesStyle = styled.div`\n  width: 100%;\n  background: linear-gradient(\n    to right,\n    ${Theme.Color.Eggplant} 50%,\n    ${Theme.Color.Sunset} 50%\n  );\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    background: linear-gradient(\n      to bottom,\n      ${Theme.Color.Eggplant} 50%,\n      ${Theme.Color.Sunset} 50%\n    );\n  }\n\n  .basic-inner {\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      display: block;\n    }\n\n    .container {\n      flex: 1;\n      padding: calc(${Root.Size} * 2) 0;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: calc(${Root.Size}) 0;\n      }\n\n      &:first-of-type {\n        padding-right: calc(${Root.Size} * 2);\n        @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n          padding-right: 0;\n        }\n      }\n\n      &:last-of-type {\n        padding-left: calc(${Root.Size} * 2);\n        @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n          padding-left: 0;\n        }\n      }\n\n      .h6,\n      .h3 {\n        font-weight: 700;\n      }\n\n      .h3 {\n        padding: calc(${Root.Size} / 8) 0;\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Giant Text Block Component:\n// This is a section for giant text sandwiched by smaller text, an optional button and an optional number\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { BasicInner } from 'components/library/Section/BasicSection';\n\n// Styles\nimport { SplitTextBoxesStyle, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SplitTextBoxes = ({ FirstBlock, SecondBlock }) => (\n  <SplitTextBoxesStyle>\n    <BasicInner>\n      <div className=\"container\">\n        <div className=\"h6\">{FirstBlock.caption}</div>\n        <div className=\"h3\">{FirstBlock.header}</div>\n        <p className=\"p-lg\">{FirstBlock.paragraph}</p>\n        {FirstBlock.buttonDest && FirstBlock.buttonText && (\n          <Btn\n            Label={FirstBlock.buttonText}\n            BgColor={Theme.Color.Nova}\n            TextColor={Theme.Color.White}\n            Destination={FirstBlock.buttonDest}\n          />\n        )}\n      </div>\n      <div className=\"container\">\n        <div className=\"h6\">{SecondBlock.caption}</div>\n        <div className=\"h3\">{SecondBlock.header}</div>\n        <p className=\"p-lg\">{SecondBlock.paragraph}</p>\n        {SecondBlock.buttonDest && SecondBlock.buttonText && (\n          <Btn\n            Label={SecondBlock.buttonText}\n            BgColor={Theme.Color.Nova}\n            TextColor={Theme.Color.White}\n            Destination={SecondBlock.buttonDest}\n          />\n        )}\n      </div>\n    </BasicInner>\n  </SplitTextBoxesStyle>\n);\n\nexport default SplitTextBoxes;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// How.js:\n// This is why portion of the who section of the site.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { Icon } from 'components/library/Icons';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport ImageWithTextBlock from 'components/library/Section/ImageWithTextBlock';\nimport EdgeImageWithText from 'components/library/Section/EdgeImageWithText';\nimport EdgeSlider from 'components/library/Section/EdgeSlider';\nimport Marquee from 'components/library/Section/Marquee';\nimport Section from 'components/library/Elements/Section';\nimport SplitLinks, { SplitLink } from 'components/library/SplitLinks';\nimport ImageAccordianFeature from 'components/library/Section/ImageAccordianFeature';\nimport CurveAndAngle from 'components/library/Section/CurveAndAngle';\nimport SplitTextBoxes from 'components/library/Section/SplitTextBoxes';\nimport LegoList from 'components/library/Section/LegoList';\nimport SimpleTextWithImage from 'components/library/Section/SimpleTextWithImage';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\nimport SplitHero from 'components/library/Hero/SplitHero';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Data\n// import ImgPlaceholder from './assets/placeholder.jpg';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Props\nconst ThemeProps = {\n  BgColor: Theme.Color.Cream,\n  PrimaryColor: Theme.Color.White,\n  SecondaryColor: Theme.Color.Primary,\n  TertiaryColor: Theme.Color.Primary,\n};\n\nconst HeroProps = {\n  bg: Theme.Color.Lilac,\n  color: Theme.Color.White,\n  playButton: true,\n  playButtonBg: Theme.Color.Nova,\n  gear: true,\n  gearStroke: Theme.Color.White,\n  arrowColor: Theme.Color.White,\n};\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst OverflowHidden = styled.div`\n  width: 100vw;\n  overflow: hidden;\n`;\n\n// Render Page\nconst WhoHowPage = () => {\n  return (\n    <Layout {...ThemeProps}>\n      <SplitHero\n        {...HeroProps}\n        subNav={[\n          { label: 'who', link: '/who-we-are/who' },\n          { label: 'why', link: '/who-we-are/why' },\n          { label: 'how', active: true, link: '/who-we-are/how' },\n          { label: 'careers', link: '/who-we-are/careers' },\n        ]}\n      >\n        <h2>How STEM Enrichment p aves the way for our beliefs</h2>\n        <h6>Lorem ipsum dolor sit amet, consectetur a.</h6>\n      </SplitHero>\n\n      <BasicSection\n        BgColor={Theme.Color.Lilac}\n        TextColor={Theme.Color.White}\n        BorderTop={Theme.Color.White}\n      >\n        <BasicInner>\n          <CenteredTitle\n            MaxWidth=\"500px\"\n            Title=\"Lorem ipsum dolar sit amet, consectetur a.\"\n            Class=\"h3\"\n            TextColor={Theme.Color.White}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Lilac}\n        TextColor={Theme.Color.White}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <BasicInner>\n          <LegoList\n            blocks={[\n              {\n                title: 'Creative Collaboration',\n                text:\n                  'A greater sense of understanding and connection between your staff, as they will now know how others play, and in turn, how they work best.',\n                legoColor: 'orange',\n              },\n              {\n                title: 'New Perspectives',\n                text:\n                  'A willingness to tackle problems from a play perspective, embracing failure as part of the process of finding the solution.',\n                legoColor: 'purple',\n              },\n              {\n                title: 'Staff Morale',\n                text:\n                  'A rejuvenated staff who rediscovers what they find fun about their job and their organization.',\n                legoColor: 'blue',\n              },\n            ]}\n          />\n        </BasicInner>\n      </BasicSection>\n      <BasicSection noPaddingTop noPaddingBottom BgColor={Theme.Color.Lilac}>\n        <CurveAndAngle\n          CurveColor={Theme.Color.Dino}\n          AngleColor={Theme.Color.Background}\n          AbsoluteImages={[\n            { src: 'gears.png', width: '25vw', right: '2vw', bottom: '0' },\n          ]}\n        />\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Dino}\n        noPaddingTop\n      >\n        <BasicInner>\n          <SimpleTextWithImage\n            Caption=\"Our Impact on STEM Comprehension\"\n            Header=\"Children Learn While Playing\"\n            Paragraph=\"Our assessment measured three goals including: students\n            knowledge of STEM terms or concepts, ability to generalize\n            information, and increasing positive feelings towards STEM\n            subjects. For example, the definition of gravity or friction, or\n            that when two gears interlock their teeth its called meshing.\"\n            Image=\"graph.png\"\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection BgColor={Theme.Color.Blush} TextColor={Theme.Color.Nova}>\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Our Programs\"\n            Class=\"headline\"\n            TextColor={Theme.Color.Nova}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Blush}\n        TextColor={Theme.Color.Clay}\n        noPaddingTop\n      >\n        <ImageAccordianFeature\n          Links={[\n            { link: '/', label: 'Robotics' },\n            { link: '/', label: 'Intro to STEM' },\n            { link: '/', label: 'Gaming' },\n            { link: '/', label: 'Advanced Engineering' },\n            { link: '/', label: 'Engineering Themes' },\n          ]}\n          Accordians={[\n            {\n              header: 'Worshops',\n              paragraph:\n                'Play-Well LEGO@-inspired programs can be tailored to your needs. We offer workshops for Girl Scouts, Homeschool Groups, Boy Scouts, In-school field trips and more.',\n              image: 'girl-3.jpg',\n            },\n            {\n              header: 'Classes',\n              paragraph:\n                'What can you do with over 20,000 pieces of LEGO®? In our Engineering with LEGO® enrichment programs kids take on real-life engineering challenges allowing them to see STEM in action. Your child will explore concepts in physics, architecture, and mechanical engineering. Our students find inventive solutions in a fun-filled context that supports the growth of young minds through hands-on, minds-on learning.',\n              image: 'girl-2.jpg',\n            },\n            {\n              header: 'Camps',\n              paragraph:\n                \"We'll help unleash your child's inner engineer in our STEM summer camps. They'll have so much fun in our LEGO-inspired summer camps that they won't even realize how much they're learning!\",\n              image: 'girl-1.jpg',\n            },\n          ]}\n        />\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Blush}\n        noPaddingTop\n      >\n        <BasicInner>\n          <CenteredTitle Title=\"Our Process\" Class=\"headline\" />\n        </BasicInner>\n      </BasicSection>\n\n      <OverflowHidden>\n        <BasicSection\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Sunset}\n          noPaddingTop\n        >\n          <BasicInner noPaddingLeft noPaddingRight>\n            <ImageWithTextBlock\n              Image=\"boy-2.jpg\"\n              Header=\"Build problem-solving skills\"\n              Number=\"01\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            />\n            <ImageWithTextBlock\n              reversedOrder\n              Image=\"boy-1.jpg\"\n              Header=\"Provide an opportunity for creative expression\"\n              Number=\"06\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            >\n              <Icon Name=\"gear\" />\n            </ImageWithTextBlock>\n            <ImageWithTextBlock\n              Image=\"girls-1.jpg\"\n              Header=\"Foster a greater appreciation of how things work\"\n              Number=\"03\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            />\n          </BasicInner>\n        </BasicSection>\n      </OverflowHidden>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        BorderTop={Theme.Color.Clay}\n        noPaddingTop\n      />\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        BgLinear={Theme.Color.White}\n        TextColor={Theme.Color.Dino}\n      >\n        <BasicInner noPaddingRight>\n          <EdgeSlider\n            images={[\n              'random-1.jpg',\n              'random-2.jpg',\n              'random-3.jpg',\n              'random-4.jpg',\n              'random-5.jpg',\n            ]}\n            titles={[\n              'Intro Into STEM',\n              'Robotics',\n              'Engineering',\n              'Gaming',\n              'Building',\n            ]}\n            caption=\"It's not always one size fits all\"\n            title=\"Our Curriculums\"\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Dino}\n      >\n        <BasicInner>\n          <LegoList\n            blocks={[\n              {\n                title: 'Benefit Two',\n                text:\n                  'Through LEGO® inspired classes sparking “Aha!” moments, we help kids grasp fundamental principles of engineering and physics.',\n                image: 'graph.png',\n              },\n              {\n                title: 'Benefit Two',\n                text:\n                  'Through LEGO® inspired classes sparking “Aha!” moments, we help kids grasp fundamental principles of engineering and physics.',\n                image: 'graph.png',\n              },\n              {\n                title: 'Benefit Two',\n                text:\n                  'Through LEGO® inspired classes sparking “Aha!” moments, we help kids grasp fundamental principles of engineering and physics.',\n                image: 'graph.png',\n              },\n            ]}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <OverflowHidden>\n        <BasicSection\n          noPaddingRight\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Dino}\n          noPaddingBottom\n        >\n          <BasicInner noPaddingRight>\n            <EdgeImageWithText\n              Caption=\"Would you like to Play with us?\"\n              Header=\"Purposeful Play is for Adults too\"\n              Image=\"gears.png\"\n              Paragraph=\"Partnering with Play-Well for your company could bring new waves of innovation and problem solving to your team an opportunity to bring educational activities to your event, or any way you need to play.\"\n              ButtonText=\"Get In Touch\"\n              ButtonDest=\"/\"\n            />\n          </BasicInner>\n          <Marquee\n            images={[\n              'google.png',\n              'clorox.png',\n              'pixar.jpeg',\n              'microsoft.png',\n              'visa.png',\n            ]}\n            SquareFormat\n          />\n        </BasicSection>\n      </OverflowHidden>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.White}\n      >\n        <SplitTextBoxes\n          FirstBlock={{\n            caption: 'Playing anywhere',\n            header: 'Find a program near you',\n            buttonDest: '/',\n            buttonText: 'Expore Programs',\n            paragraph:\n              \"Our assessments measured three goals including: student's knowledge of STEM terms or concepts, ability to generalize information, and increasing positive feeling towards STEM subjects.\",\n          }}\n          SecondBlock={{\n            caption: 'Do it Yourself',\n            header: 'Host Your Own Program',\n            buttonDest: '/',\n            buttonText: 'Learn How',\n            paragraph:\n              \"Our assessments measured three goals including: student's knowledge of STEM terms or concepts, ability to generalize information, and increasing positive feeling towards STEM subjects.\",\n          }}\n        />\n      </BasicSection>\n\n      <Section bg={ThemeProps.BgColor} pb={0}>\n        <SplitLinks>\n          <SplitLink\n            title=\"Keep reading.\"\n            message=\"Learn about Our Values &amp; why we do what we do.\"\n            // message={'Keep exploring programs in ' + countyStateString + '.'}\n            to=\"/\"\n            themeProps={ThemeProps}\n            first\n          />\n          <SplitLink\n            title=\"Here ye, here ye.\"\n            message=\"Check out our News &amp; Press page.\"\n            to=\"/\"\n            themeProps={ThemeProps}\n            last\n          />\n        </SplitLinks>\n      </Section>\n    </Layout>\n  );\n};\n\nexport default WhoHowPage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}