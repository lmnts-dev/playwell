{"version":3,"sources":["webpack:///./src/sections/LocationHero/styles.scss.js","webpack:///./src/templates/Location/styles.scss.js","webpack:///./src/sections/LocationHero/LocationHero.js","webpack:///./src/sections/LocationCoordinators/styles.scss.js","webpack:///./src/sections/LocationCoordinators/LocationCoordinators.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/Block.js","webpack:///./src/sections/LocationSplitSection/LocationSplitSection.js","webpack:///./src/sections/LocationPrograms/LocationPrograms.js","webpack:///./src/sections/Quote/styles.scss.js","webpack:///./src/sections/LocationEvents/styles.scss.js","webpack:///./src/sections/Quote/Quote.js","webpack:///./src/sections/LocationIntro/styles.scss.js","webpack:///./src/sections/LocationIntro/LocationIntro.js","webpack:///./src/sections/LocationPlayZone/styles.scss.js","webpack:///./src/sections/LocationPlayZone/LocationPlayZone.js","webpack:///./src/templates/Location/index.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/components/library/Accordion/styles.scss.js","webpack:///./src/components/library/Accordion/Accordion.js","webpack:///./src/components/library/Spacer/styles.scss.js","webpack:///./src/components/library/Spacer/Spacer.js","webpack:///./src/components/library/Spacer/Centered/styles.scss.js","webpack:///./src/components/library/Spacer/Centered/Centered.js"],"names":["Hero","styled","Box","Theme","Color","Background","Root","Nav","Size","Inner","Base","Grid","SiteWidth","Gutter","Right","Left","Media","Width","Md","Tags","ul","Deepsea","Rem","Lg","Sunset","Primary","Heading","h2","Nova","Flex","Line","span","Scroll","White","Positioner","div","Indent","X","Decorator","LocationHero","cities","countyName","pageContext","programsSlug","isCounty","slugify","parentState","name","toLowerCase","cost_code_name","isCostCode","className","ImgMatch","src","AltText","width","px","to","includes","mr","mb","display","Btn","Destination","Label","BgColor","TextColor","Blush","Title","Dino","Sm","Article","Info","Figure","figure","Radius","Details","Name","Contact","LocationCoordinators","countyState","Section","textAlign","flexWrap","pr","pb","managers","map","manager","Accordion","key","node","id","title","state","fontSize","href","email","SplitSectionStyle","props","Site","SplitSection","children","BlockStyle","flex","AlignItems","Style","css","JustifyContent","BgTint","maxWidth","Padding","Block","BgMatch","BgQuery","BgAlt","ImgQuery","LocationSplitSection","Nightsky","as","color","LocationPrograms","fontWeight","mt","QuoteContainer","hexToRGB","Top","Quote","Text","defaultProps","Intro","ReadingWidth","LocationIntro","bg","pt","Container","Overflow","Image","LocationPlayZone","indent","ThemeProps","PrimaryColor","SecondaryColor","TertiaryColor","LocationDetail","Layout","fullWidth","LegoList","blocks","text","legoColor","LegoListStyles","block","index","image","AccordionContainer","Icon","p","chevronColor","button","colorActive","Content","borderColor","useState","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","content","useRef","onClick","current","scrollHeight","ref","style","maxHeight","Sunlight","Spacer","Centered"],"mappings":"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","file":"component---src-templates-location-index-js-6c25602c452c2cffac66.js","sourcesContent":["// <LocationHero /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Hero = styled(Box)`\n  background: ${Theme.Color.Background};\n  padding-top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 2);\n  padding-bottom: calc(${Theme.Root.Size} * 1.5);\n  text-align: left;\n  overflow: hidden;\n  position: relative;\n`;\n\nHero.Inner = styled(Box)`\n  width: 100%;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  margin: 0 auto;\n  position: relative;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n  overflow-x: visible;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n  }\n`;\n\nHero.Tags = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: calc(${Theme.Root.Size} / 8);\n\n  li {\n    color: ${Theme.Color.Deepsea};\n    text-transform: uppercase;\n    letter-spacing: calc(${Theme.Root.Size} * 0.05);\n    font-weight: 500;\n    font-size: 0.8rem;\n    padding: 0 calc(${Theme.Root.Rem} * 0);\n    margin-bottom: calc(${Theme.Root.Rem} * 0.8);\n\n    @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 0.9rem;\n      /* padding: 0 calc(${Theme.Root.Rem} * 0); */\n    }\n\n    &:after {\n      content: '—';\n      color: ${Theme.Color.Sunset};\n      margin: 0 calc(${Theme.Root.Size} / 6);\n    }\n\n    &:last-child {\n      \n      &:after {\n        content: '';\n      }\n    }\n\n    a {\n      color: ${Theme.Color.Primary};\n    }\n  }\n`;\n\nHero.Heading = styled.h2`\n  color: ${Theme.Color.Primary};\n\n  span {\n    color: ${Theme.Color.Nova};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Location Detail Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Spacer = styled(Flex)`\n  position: relative;\n  justify-content: center;\n`;\n\nSpacer.Line = styled.span`\n  width: 0;\n  height: 100px;\n  position: absolute;\n  bottom: -50px;\n  border-left: 1px dashed ${Theme.Color.Primary};\n  z-index: 9;\n`;\n\nexport const Scroll = styled(Box)`\n  align-self: flex-end;\n  text-align: left;\n  position: relative;\n  width: 100%;\n  height: 0;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  margin: 0 auto;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n  /* top: calc(${Theme.Root.Size} * -2); */\n  z-index: 9;\n\n  span {\n    color: ${Theme.Color.White};\n    font-size: 1rem;\n    font-weight: bold;\n    display: block;\n    margin-bottom: calc(${Theme.Root.Size} * 0.1);\n  }\n`;\n\nScroll.Positioner = styled.div`\n  width: fit-content;\n  text-align: center;\n  position: relative;\n  bottom: 100px;\n  padding-left: ${Root.Grid.Indent.X};\n`;\n\nScroll.Line = styled.div`\n  display: block;\n  width: 0;\n  height: 160px;\n  margin: 0 auto;\n\n  &:after {\n    content: \"\\\\2023\";\n    position: absolute;\n    bottom: 0;\n    left: calc(50% - 9px);\n    transform: rotate(90deg) translateY(18%);\n    transform-origin: 0% 100%;\n    color: ${Theme.Color.Nova};\n    font-size: 31px;\n  }\n\n  &:before {\n    position: absolute;\n    top: calc(${Theme.Base.Size.Lg} / 3);\n    bottom: 0;\n    width: 1px;\n    content: '';\n    background-image: linear-gradient(\n      ${Theme.Color.Nova} 40%,\n      rgba(255, 255, 255, 0) 0%\n    );\n    background-position: right;\n    background-size: 1px 10px;\n    background-repeat: repeat-y;\n  }\n`;\n\nexport const Decorator = styled(Box)`\n  /* overflow: hidden; */\n  z-index: 9;\n\n  .decorator__hero {\n    position: absolute;\n    top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1);\n\n    &--top {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1);\n      right: -100px;\n      width: 140px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        right: -120px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        right: -170px;\n        width: 340px;\n      }\n    }\n\n    &--bottom {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 3.3);\n      right: -40px;\n      width: 120px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        right: -70px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        right: -30px;\n        width: 310px;\n      }\n    }\n  }\n\n  .decorator__footer {\n    position: absolute;\n    /* top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1); */\n\n    &--top {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * -2.5);\n      left: -95px;\n      width: 140px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        left: -120px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        left: -25px;\n        width: 180px;\n      }\n    }\n\n    &--bottom {\n      left: 50%;\n      width: 400px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n\n        width: 400px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n\n        width: 400px;\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationCoordinators /> section:\n// Location detail template coordinator accordion\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\n\n// Styles\nimport { Hero } from './styles.scss';\nimport { Decorator } from '../../templates/Location/styles.scss';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationHero = ({ cities, pageContext }) => {\n  // Check our County names if they contain 'County'\n  const countyClean = countyName => {\n    if (countyName.toLowerCase().includes('county')) {\n      return countyName;\n    } else {\n      return countyName + ' County';\n    }\n  };\n\n  // Create page name\n  const contextualPageName = () => {\n    if (pageContext != false) {\n      if (pageContext.isCounty == true) {\n        return (\n          countyClean(pageContext.name) + ', ' + pageContext.parentState.name\n        );\n      } else if (pageContext.isCostCode == true) {\n        return pageContext.cost_code_name + ', ' + pageContext.parentState.name;\n      } else {\n        return pageContext.name;\n      }\n    } else {\n      return 'a place near you';\n    }\n  };\n\n  // Create slugs\n  const programsSlug =\n    pageContext.isCounty == true\n      ? slugify(pageContext.parentState.name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.cost_code_name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.name.toLowerCase())\n      : pageContext.isCostCode == true\n      ? slugify(pageContext.parentState.name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.cost_code_name.toLowerCase())\n      : slugify(pageContext.name.toLowerCase());\n\n  return (\n    <Hero>\n      <Decorator>\n        <div className=\"decorator__hero decorator__hero--top\">\n          <ImgMatch src=\"cloud-big.png\" AltText=\"Cloud\" />\n        </div>\n\n        <div className=\"decorator__hero decorator__hero--bottom\">\n          <ImgMatch src=\"cloud-big.png\" AltText=\"Cloud\" />\n        </div>\n      </Decorator>\n      <Hero.Inner>\n        <Box width={1} px={Root.Grid.Indent.X}>\n          <Hero.Tags>\n            <li>\n              <Link to={'/'}>Robotics</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Intro to STEM</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Gaming</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Advanced Engineering</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Engineering Themes</Link>\n            </li>\n          </Hero.Tags>\n        </Box>\n        <Box width={1} px={Root.Grid.Indent.X}>\n          <Hero.Heading>\n            STEM Education &amp;\n            <br />\n            Engineering in <span>{contextualPageName()}</span>\n          </Hero.Heading>\n          <Box mr={1} mb={[1, 0]} display=\"inline-block\">\n            <Btn\n              Destination={'/programs/' + programsSlug}\n              Label=\"View Programs\"\n              BgColor={Theme.Color.Nova}\n              TextColor={Theme.Color.White}\n            />\n          </Box>\n          <Box display=\"inline-block\">\n            <Btn\n              Destination=\"/#coordinators\"\n              Label=\"Contact Manager\"\n              BgColor={Theme.Color.Blush}\n              TextColor={Theme.Color.Primary}\n            />\n          </Box>\n        </Box>\n      </Hero.Inner>\n    </Hero>\n  );\n};\n\nexport default LocationHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Homepage Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Title = styled(Box)`\n  span {\n    color: ${Theme.Color.Dino};\n    font-weight: 600;\n\n    @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n      position: sticky;\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1);\n    }\n  }\n`;\n\nexport const Article = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  background: ${Theme.Color.White};\n  padding: calc(${Root.Size} / 2);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    padding: calc(${Root.Size} / 3);\n  }\n`;\n\nArticle.Info = styled.div`\n  display: flex;\n  padding-left: calc(${Root.Size} / 2);\n  width: 75%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    padding-left: calc(${Root.Size} / 3);\n    width: 85%;\n  }\n`;\n\nArticle.Figure = styled.figure`\n  margin: 0;\n  width: 25%;\n  height: 25%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    width: 15%;\n    height: 15%;\n  }\n\n  .gatsby-image-wrapper {\n    border-radius: calc(${Root.Radius} * 6);\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nArticle.Info.Details = styled.div`\n  color: ${Theme.Color.Nova};\n  display: block;\n  font-weight: 500;\n  margin-bottom: calc(${Root.Size} / 4);\n  width: 100%;\n  text-transform: capitalize;\n\n  span {\n    color: ${Theme.Color.Dino};\n    margin-left: calc(${Root.Size} / 2);\n  }\n`;\n\nArticle.Info.Name = styled.div`\n  color: ${Theme.Color.Deepsea};\n  display: block;\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin-top: calc(${Root.Size} / 1);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    margin-top: 0;\n  }\n`;\n\nArticle.Info.Contact = styled.div`\n  align-self: flex-end;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${Theme.Color.Nova};\n  font-weight: 500;\n  margin-top: calc(${Root.Size} / 1);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    flex-direction: row;\n  }\n\n  span {\n    margin-bottom: calc(${Root.Size} / 3);\n    display: block;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n      margin-bottom: 0;\n    }\n\n    a {\n      color: ${Theme.Color.Nova};\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationCoordinators /> section:\n// Location detail template coordinator accordion\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\nimport Accordion from 'components/library/Accordion';\n\n// Styles\nimport { Title, Article } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationCoordinators = ({ pageContext }) => {\n  // County / State conditional\n  const countyState = pageContext.isCounty\n    ? pageContext.name + ', ' + pageContext.parentState.name\n    : pageContext.name;\n\n  return (\n    <Section textAlign=\"left\">\n      {/* todo: make styled components */}\n      <Flex flexWrap=\"wrap\">\n        <Title\n          width={[1, 1, 1 / 2, 4 / 10]}\n          pr={[0, 0, 0, 'calc(var(--Size) * 2)']}\n          pb={'var(--Size)'}\n        >\n          <span className=\"h2\">\n            Coordinators in {countyState}\n          </span>\n        </Title>\n        <Box width={[1, 1, 1 / 2, 6 / 10]}>\n          {pageContext.managers.map(manager => (\n            <Accordion key={manager.node.id} title={manager.node.cost_code_name}>\n              <Article>\n                <Article.Figure>\n                  <ImgMatch\n                    src=\"avatar-yoda.jpg\"\n                    AltText=\"PlayWell program state coordinator\"\n                  />\n                </Article.Figure>\n                <Article.Info>\n                  <Flex flexWrap=\"wrap\">\n                    <Article.Info.Details>\n                      {manager.node.state}\n                      {/* <span>{manager.node.cost_code}</span> */}\n                    </Article.Info.Details>\n                    <Article.Info.Name fontSize=\"1.6rem\">\n                      {manager.node.manager}\n                    </Article.Info.Name>\n                    <Article.Info.Contact>\n                      <span>\n                        <a href={'mailto:' + manager.node.email}>{manager.node.email}</a>\n                      </span>\n                      {/* <span>\n                        <a href={'tel:' + manager.node.cell_number}>{manager.node.cell_number}</a>\n                      </span>\n                      <span>\n                        <a href=\"/\">More</a>\n                      </span> */}\n                    </Article.Info.Contact>\n                  </Flex>\n                </Article.Info>\n              </Article>\n            </Accordion>\n          ))}\n        </Box>\n      </Flex>\n    </Section>\n  );\n};\n\nexport default LocationCoordinators;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  flex-wrap: wrap;\n  justify-content: center;\n  position: relative;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-wrap: nowrap;\n  }\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      width: 100%;\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        width: ${props =>\n          props.Flex\n            ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n            : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n        /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n        ${props =>\n          props.Flex\n            ? null\n            : 'padding-left: calc(' +\n              Root.Grid.Gutter.Left +\n              ' + ' +\n              Root.Size +\n              ')'}\n      }\n    }\n\n    &:last-child {\n      width: 100%;\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        width: ${props =>\n          props.Flex\n            ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n            : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n        /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n        ${props =>\n          props.Flex\n            ? null\n            : 'padding-left: calc(' +\n              Root.Grid.Gutter.Left +\n              ' + ' +\n              Root.Size +\n              ')'}\n      }\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 100%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n  ${props => (props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;')}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ');'\n      : null}\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// LocationSplitSections.js:\n// Location detail page split sections\n// todo: clean up, typography\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst LocationSplitSection = () => (\n  <>\n    <SplitSection Flex=\"row\">\n      <Block\n        Style=\"centered\"\n        BgColor={Theme.Color.White}\n        BgMatch=\"do-it-yourself.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        Width={0.5}\n        JustifyContent=\"center\"\n      />\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <Text as=\"h6\" color=\"Galaxy\">\n          Do it yourself\n        </Text>\n        <Text as=\"h2\" color=\"Sunset\">\n          Host Your Own Program\n        </Text>{' '}\n        <Text as=\"p\" className=\"p-lg\" color=\"Galaxy\">\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n      </Block>\n    </SplitSection>\n\n    <SplitSection Flex=\"row-reverse\">\n      <Block\n        Style=\"centered\"\n        BgColor={Theme.Color.White}\n        BgMatch=\"power-of-play.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        Width={0.5}\n      />\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <Text as=\"h6\" color=\"Galaxy\">\n          Playing since 1997\n        </Text>\n        <Text as=\"h2\" color=\"Sunset\">\n          Creativity, confidence &amp; collaboration.\n        </Text>{' '}\n        <Text as=\"p\" className=\"p-lg\" color=\"Galaxy\">\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n      </Block>\n    </SplitSection>\n  </>\n);\n\nexport default LocationSplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// LocationSplitSections.js:\n// Location detail page split sections\n// todo: clean up <components />, typography\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst LocationPrograms = () => (\n  <>\n    <SplitSection Flex=\"row\">\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.Primary}\n        TextColor={Theme.Color.White}\n      >\n        <Text as=\"span\" fontSize={[1, 2, 2]} fontWeight={700} mb={1}>\n          Playing anywhere\n        </Text>\n        <Text as=\"h2\">Find a program near you</Text>{' '}\n        <Text as=\"p\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n          Our assessments measured three goals including: student's knowledge of\n          STEM terms or concepts, ability to generalize information, and\n          increasing positve feeling towards STEM subjects.\n        </Text>\n        <Btn\n          Label=\"Explore Programs\"\n          Destination=\"/menu\"\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n        />\n      </Block>\n      <Block\n        Padding={[4, 2, 4, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.Sunset}\n        TextColor={Theme.Color.White}\n      >\n        <Text as=\"span\" fontSize={[1, 2, 2]} fontWeight={700} mb={1}>\n          Do it yourself\n        </Text>\n        <Text as=\"h2\">Host Your Own Program</Text>{' '}\n        <Text as=\"p\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n        <Btn\n          Label=\"Learn How\"\n          Destination=\"/menu\"\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n        />\n      </Block>\n    </SplitSection>\n  </>\n);\n\nexport default LocationPrograms;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Quote styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const QuoteContainer = styled(Section)``;\n\nQuoteContainer.Quote = styled(Text)`\n  position: relative;\n  font-weight: 600;\n\n  &:before {\n    content: '\"';\n    color: ${Theme.Color.Primary};\n    font-size: 3rem;\n    position: absolute;\n    top: -40px;\n    left: -10px;\n\n    @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n      left: -20px;\n    }\n  }\n\n  &:after {\n    content: '\"';\n    color: ${Theme.Color.Primary};\n    font-size: 3rem;\n    position: absolute;\n    bottom: -60px;\n    right: -10px;\n\n    @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n      right: -20px;\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LocationEvents styles:\n// Location template events section styling\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Events = styled(Box)`\n  display: flex;\n  flex-wrap: wrap;\n  background: ${Theme.Color.Background};\n  border-top: 1px solid ${hexToRGB(Theme.Color.Nova, 0.3)};\n  padding-top: calc(${Root.Grid.Gutter.Top} * 4);\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Quote /> section:\n// Full width quote section\n// todo: break quote down into a component\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Styles\nimport { QuoteContainer } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Quote = ({ color, children }) => {\n  // Render page\n  return (\n    <QuoteContainer>\n      <Box px={['10%', '14%', '16%', '20%']}>\n        <QuoteContainer.Quote className=\"h2\" color={color}>\n          {children}\n        </QuoteContainer.Quote>\n      </Box>\n    </QuoteContainer>\n  );\n};\n\nQuote.defaultProps = {\n  color: 'Sunset',\n};\n\nexport default Quote;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationIntro /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Intro = styled(Section)``;\n\nIntro.Inner = styled(Flex)`\n  flex-direction: column;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  max-width: ${Theme.Base.Grid.ReadingWidth};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationIntro /> section:\n// Location detail template introduction\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Text } from 'components/library/Elements';\n\n// Styles\nimport { Intro } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationIntro = ({ pageContext }) => {\n  const countyState = pageContext.isCounty\n    ? pageContext.name + ', ' + pageContext.parentState.name + \"'s\"\n    : pageContext.name + \"'s\";\n\n  return (\n    <Intro bg=\"Cream\" textAlign=\"center\">\n      <Intro.Inner pt={[2, 2, 4, 4]} pb={[1, 1, 2, 2]}>\n        <Text as=\"p\" color=\"Nova\" className=\"lead\">\n          {countyState} Leading STEM Education &amp; Engineering Programs\n        </Text>\n        <Text as=\"p\" color=\"Galaxy\" className=\"lead\">\n          Ut vehicula dictum tristique. Cras at sem nec risus sollicitudin\n          varius. Proin ultrices metus arcu, ut lacinia libero ornare eget.\n          Morbi orci mi, scelerisque a justo quis, euismod sollicitudin dui.\n          Duis convallis magna eget eleifend tempor. Ut non lobortis metus.\n          Donec sit amet vulputate risus. Vivamus et lacinia ante.\n        </Text>\n      </Intro.Inner>\n    </Intro>\n  );\n};\n\nexport default LocationIntro;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationPlayCenter /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled(Section)`\n  position: relative;\n`;\n\nContainer.Overflow = styled.div`\n  overflow: hidden;\n`;\n\nContainer.Image = styled.div`\n  width: 547px;\n  overflow: hidden;\n  position: absolute;\n  right: 0;\n  top: -300px;\n\n  .img {\n    width: 587px;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationPlayCenter /> section:\n// Location detail template Play Center callout\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport Section from 'components/library/Elements/Section';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationPlayZone = () => (\n  <Container textAlign=\"left\" pt={[8, 8, 12, 12]} indent>\n    <Container.Image>\n      <ImgMatch src=\"lego-ladder.png\" AltText=\"Cloud\" />\n    </Container.Image>\n    <Box width={[1, 6 / 10, 1 / 2, 4 / 10]}>\n      <Text className=\"h6\" as=\"span\" color=\"Galaxy\" fontWeight={700} mb={1}>\n        Do it yourself\n      </Text>\n      <Text as=\"h2\" color=\"Sunset\">\n        Build Your Own World of Opportunity\n      </Text>\n      <Text as=\"p\" color=\"Galaxy\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n        Bring your kid over or bring out your inner kid with some of our online\n        activities to feed your imagination.\n      </Text>\n      <Btn\n        Label=\"Play Zone\"\n        Destination=\"/menu\"\n        BgColor={Theme.Color.Primary}\n        TextColor={Theme.Color.White}\n      />\n    </Box>\n  </Container>\n);\n\nexport default LocationPlayZone;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Location detail template:\n// This is the data template for the Locations Detail page\n// todo: Use <Spacer in place of <Scroll && add props to <Spacer\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport ImgMatch from 'components/core/ImgMatch';\nimport Section from 'components/library/Elements/Section';\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport SpacerCentered from 'components/library/Spacer/Centered';\nimport Spacer from 'components/library/Spacer';\nimport LegoList from 'components/library/Section/LegoList';\n\n// Sections\nimport LocationHero from 'sections/LocationHero';\nimport LocationCoordinators from 'sections/LocationCoordinators';\nimport LocationSplitSection from 'sections/LocationSplitSection';\nimport LocationPrograms from 'sections/LocationPrograms';\nimport LocationEvents from 'sections/LocationEvents';\nimport Quote from 'sections/Quote';\nimport LocationIntro from 'sections/LocationIntro';\nimport LocationPlayZone from 'sections/LocationPlayZone';\n\n// Styles\nimport { Hero, Intro, Scroll, Decorator } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Props\nconst ThemeProps = {\n  BgColor: Theme.Color.Background,\n  PrimaryColor: Theme.Color.Dino,\n  SecondaryColor: Theme.Color.Primary,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Render Page\nconst LocationDetail = ({ pageContext }) => {\n  // For Debugging Purposes only\n  // console.log(pageContext);\n  // console.log(pageContext.managers.manager);\n\n  // Build Page\n  return (\n    <Layout {...ThemeProps}>\n      <LocationHero pageContext={pageContext} />\n\n      <Section pt={0} pb={0} fullWidth>\n        <ImgMatch\n          src=\"locations-hero.jpg\"\n          AltText=\"STEM Education &amp; Engineering in\"\n        />\n      </Section>\n\n      <SpacerCentered />\n\n      <LocationIntro pageContext={pageContext} />\n      <LocationSplitSection />\n      <LocationCoordinators pageContext={pageContext} id=\"coordinators\" />\n\n      {/* <LocationEvents /> */}\n\n      <Section bg=\"White\">\n        <LegoList\n          blocks={[\n            {\n              title: 'Creative Collaboration',\n              text:\n                'A greater sense of understanding and connection between your staff, as they will now know how others play, and in turn, how they work best.',\n              legoColor: 'orange',\n            },\n            {\n              title: 'New Perspectives',\n              text:\n                'A willingness to tackle problems from a play perspective, embracing failure as part of the process of finding the solution.',\n              legoColor: 'purple',\n            },\n            {\n              title: 'Staff Morale',\n              text:\n                'A rejuvenated staff who rediscovers what they find fun about their job and their organization.',\n              legoColor: 'blue',\n            },\n          ]}\n        />\n      </Section>\n\n      <Quote color=\"Sunset\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla viverra\n        enim sed magna vestibulum, nec imperdiet orci egestas. Sed in magna\n        sapien.\n      </Quote>\n\n      <LocationPrograms />\n\n      <Scroll>\n        <Scroll.Positioner>\n          <span>Play</span>\n          <Scroll.Line />\n        </Scroll.Positioner>\n      </Scroll>\n\n      <Decorator\n        css={css`\n          position: relative;\n        `}\n      >\n        <div className=\"decorator__footer decorator__footer--top\">\n          <ImgMatch src=\"cloud-small.png\" AltText=\"Cloud\" />\n        </div>\n      </Decorator>\n\n      <LocationPlayZone />\n\n      {/* <Decorator>\n      <div className=\"decorator__footer decorator__footer--bottom\">\n        <ImgMatch src=\"volcano.png\" AltText=\"Cloud\" />\n      </div>\n    </Decorator> */}\n    </Layout>\n  );\n};\n\nexport default LocationDetail;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({\n  blocks,\n}) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            {block.image && <ImgMatch src={block.image} />}\n            {!block.image && <Icon Name=\"basicLego\" Color={ block.legoColor ? block.legoColor : false } />}\n            <div className=\"h6\">{block.title}</div>\n            <p>{block.text}</p>\n          </div>\n        );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Accordion /> Styles:\n// Accordion component styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\nimport { Icon } from 'components/library/Icons';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nAccordionContainer.Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .rotate {\n    transform: rotate(90deg);\n  }\n`;\n\nAccordionContainer.Icon = styled(Icon)`\n  margin-left: auto;\n  transition: transform 0.3s ease;\n\n  svg {\n    fill: ${p => p.chevronColor};\n  }\n`;\n\nAccordionContainer.Accordion = styled.button`\n  align-items: center;\n  background: transparent;\n  color: ${p => p.color};\n  cursor: pointer;\n  display: flex;\n  border: none;\n  outline: none;\n  padding: calc(${Root.Size} / 3) calc(${Root.Size} / 4);\n  transition: background-color 0.6s ease;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    padding: calc(${Root.Size} / 2) calc(${Root.Size} / 3);\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &.active {\n    color: ${p => p.colorActive};\n  }\n`;\n\nAccordionContainer.Content = styled(Box)`\n  overflow: hidden;\n  transition: max-height 0.6s ease;\n  border-bottom: 1px solid ${p => p.borderColor};\n`;\n\nAccordionContainer.Content.Inner = styled.div`\n  border-radius: calc(${Root.Radius} / 3);\n  margin-bottom: calc(${Root.Size} / 3 );\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Accordion /> component:\n// Accordion with empty children for custom laouts\n// todo: style props for border, text,\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState, useRef } from 'react';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\n\n// Styles\nimport { AccordionContainer } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Accordion = ({\n  children,\n  title,\n  chevronColor,\n  color,\n  borderColor,\n  colorActive,\n}) => {\n  // Accordion hooks\n  const [setActive, setActiveState] = useState('');\n  const [setHeight, setHeightState] = useState('0px');\n  const [setRotate, setRotateState] = useState('accordion-icon');\n\n  // Reference the accordion content height\n  const content = useRef(null);\n\n  // Toggle classes / height\n  function toggleAccordion() {\n    setActiveState(setActive === '' ? 'active' : '');\n    setHeightState(\n      setActive === 'active' ? '0px' : `${content.current.scrollHeight}px`\n    );\n    setRotateState(\n      setActive === 'active' ? 'accordion-icon' : 'accordion-icon rotate'\n    );\n  }\n\n  return (\n    <AccordionContainer>\n      <AccordionContainer.Inner>\n        <AccordionContainer.Accordion\n          className={`${setActive}`}\n          onClick={toggleAccordion}\n          color={color}\n          colorActive={colorActive}\n        >\n          <Text as=\"span\" fontWeight={500} fontSize=\"1.6rem\">\n            {title}\n          </Text>\n          <AccordionContainer.Icon\n            Name=\"carat\"\n            className={`${setRotate}`}\n            chevronColor={chevronColor}\n          />\n        </AccordionContainer.Accordion>\n        <AccordionContainer.Content\n          ref={content}\n          style={{ maxHeight: `${setHeight}` }}\n          borderColor={borderColor}\n        >\n          <AccordionContainer.Content.Inner>\n            {children}\n          </AccordionContainer.Content.Inner>\n        </AccordionContainer.Content>\n      </AccordionContainer.Inner>\n    </AccordionContainer>\n  );\n};\n\nAccordion.defaultProps = {\n  chevronColor: Theme.Color.Nova,\n  color: hexToRGB(Theme.Color.Dino, 0.7),\n  colorActive: Theme.Color.Dino,\n  borderColor: hexToRGB(Theme.Color.Sunlight, 0.5),\n};\n\nexport default Accordion;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Spacer Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled.div`\n  align-self: flex-end;\n  text-align: left;\n  position: relative;\n  width: 100%;\n  height: 0;\n  top: calc(${Theme.Root.Size} * -2);\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-left: ${props => (props.indent ? `calc(${Root.Size} * 1)` : '0')};\n  }\n\n  @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n    padding-left: ${props => (props.indent ? `calc(${Root.Size} * 2.5)` : '0')};\n  }\n\n  span {\n    color: ${Theme.Color.Dino};\n    font-size: 1rem;\n    font-weight: 700 !important;\n    display: block;\n    margin-bottom: calc(${Theme.Root.Size} * 0.1);\n  }\n`;\n\nContainer.Inner = styled(Box)`\n  width: 100%;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  /* height: 0; */\n  margin: 0 auto;\n  overflow-x: visible;\n  position: relative;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-right: calc(${Root.Grid.Gutter.Right} + ${Root.Size} * 0.25);\n    padding-left: calc(${Root.Grid.Gutter.Right} + ${Root.Size} * 0.25);\n  }\n\n  @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n    padding-right: calc(${Root.Grid.Gutter.Right} + ${Root.Size} * 1);\n    padding-left: calc(${Root.Grid.Gutter.Right} + ${Root.Size} * 1);\n  }\n`;\n\nContainer.Positioner = styled.div`\n  width: fit-content;\n  text-align: center;\n  position: relative;\n  bottom: 160px;\n  z-index: 9;\n  @media (max-width: ${Theme.Base.Grid.SiteWidth}) {\n    bottom: 10vw;\n  }\n  @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n    bottom: 0;\n  }\n`;\n\nContainer.Line = styled.div`\n  display: block;\n  width: 0;\n  height: 160px;\n  margin: 0 auto;\n  @media (max-width: ${Theme.Base.Grid.SiteWidth}) {\n    height: 10vw;\n  }\n\n  &:after {\n    content: \"\\\\2023\";\n    position: absolute;\n    bottom: 0;\n    left: calc(50% - 9px);\n    transform: rotate(90deg) translateY(18%);\n    transform-origin: 0% 100%;\n    color: ${Theme.Color.Nova};\n    font-size: 31px;\n  }\n\n  &:before {\n    position: absolute;\n    top: calc(${Theme.Base.Size.Lg} / 3);\n    bottom: 0;\n    width: 1px;\n    content: '';\n    background-image: linear-gradient(\n      ${Theme.Color.Nova} 40%,\n      rgba(255, 255, 255, 0) 0%\n    );\n    background-position: right;\n    background-size: 1px 10px;\n    background-repeat: repeat-y;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Spacer /> Component:\n// Vertical dashed spacer\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Spacer = ({ children, indent }) => (\n  <Container indent={indent}>\n    <Container.Inner>\n      <Container.Positioner>\n        <span>{children}</span>\n        <Container.Line />\n      </Container.Positioner>\n    </Container.Inner>\n  </Container>\n);\n\nSpacer.defaultProps = {};\n\nexport default Spacer;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SpacerCentered Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled(Flex)`\n  position: relative;\n  justify-content: center;\n`;\n\nContainer.Line = styled.div`\n  display: block;\n  margin: 0 auto;\n  position: absolute;\n  bottom: -50px;\n  width: 0;\n  height: 120px;\n  z-index: 9;\n\n  &:before {\n    position: absolute;\n    top: calc(${Theme.Base.Size.Lg} / 3);\n    bottom: 0;\n    width: 1px;\n    content: '';\n    background-image: linear-gradient(\n      ${Theme.Color.Primary} 40%,\n      rgba(255, 255, 255, 0) 0%\n    );\n    background-position: right;\n    background-size: 1px 10px;\n    background-repeat: repeat-y;\n  }\n\n  /* &:after {\n    content: '\\\\2023';\n    position: absolute;\n    bottom: 0;\n    left: calc(50% - 9px);\n    transform: rotate(90deg) translateY(18%);\n    transform-origin: 0% 100%;\n    color: ${Theme.Color.Nova};\n    font-size: 31px;\n  } */\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <SpacerCentered /> Component:\n// Vertical centered dashed spacer\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Centered = () => (\n  <Container>\n    <Container.Line />\n  </Container>\n);\n\nexport default Centered;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}