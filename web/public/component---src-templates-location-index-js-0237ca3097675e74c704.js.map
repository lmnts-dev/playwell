{"version":3,"sources":["webpack:///./src/components/library/Spacer/Centered/styles.scss.js","webpack:///./src/components/library/Spacer/Centered/Centered.js","webpack:///./src/sections/LocationHero/styles.scss.js","webpack:///./src/templates/Location/styles.scss.js","webpack:///./src/sections/LocationHero/LocationHero.js","webpack:///./src/sections/LocationCoordinators/styles.scss.js","webpack:///./src/sections/LocationCoordinators/LocationCoordinators.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/Block.js","webpack:///./src/sections/LocationSplitSection/LocationSplitSection.js","webpack:///./src/sections/LocationPrograms/LocationPrograms.js","webpack:///./src/sections/Quote/styles.scss.js","webpack:///./src/sections/LocationEvents/styles.scss.js","webpack:///./src/sections/Quote/Quote.js","webpack:///./src/sections/LocationIntro/styles.scss.js","webpack:///./src/sections/LocationIntro/LocationIntro.js","webpack:///./src/templates/Location/index.js","webpack:///./src/helpers/slugify.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/components/library/Accordion/styles.scss.js","webpack:///./src/components/library/Accordion/Accordion.js","webpack:///./src/sections/LocationPlayZone/styles.scss.js","webpack:///./src/sections/LocationPlayZone/LocationPlayZone.js"],"names":["Container","styled","Flex","Line","span","Theme","Color","Primary","Centered","defaultProps","Hero","Box","Background","Root","Nav","Size","Inner","Base","Grid","SiteWidth","Gutter","Right","Left","Media","Width","Md","Tags","ul","Deepsea","Rem","Lg","Sunset","Heading","h2","Nova","Scroll","White","Positioner","div","Indent","X","p","theme","Decorator","LocationHero","cities","countyName","pageContext","programsSlug","isCounty","slugify","parentState","name","toLowerCase","cost_code_name","isCostCode","className","ImgMatch","src","AltText","width","px","to","includes","mr","display","Btn","Destination","Label","BgColor","TextColor","Blush","Article","Sm","Info","Figure","figure","Radius","Details","Dino","Name","Contact","LocationCoordinators","countyState","Section","textAlign","flexWrap","pr","pb","as","color","managers","map","manager","Accordion","key","node","id","title","state","cost_code","fontSize","href","email","cell_number","SplitSectionStyle","props","Site","SplitSection","children","BlockStyle","flex","AlignItems","Style","css","JustifyContent","BgTint","maxWidth","Padding","Block","BgMatch","BgQuery","BgAlt","ImgQuery","LocationSplitSection","Nightsky","fontWeight","mb","mt","LocationPrograms","QuoteContainer","hexToRGB","Top","Quote","Text","Intro","ReadingWidth","LocationIntro","bg","pt","ThemeProps","PrimaryColor","SecondaryColor","TertiaryColor","LocationDetail","Layout","fullWidth","LegoList","blocks","text","LocationPlayZone","string","a","RegExp","split","join","toString","replace","c","charAt","indexOf","LegoListStyles","block","index","image","legoColor","AccordionContainer","Icon","chevronColor","button","colorActive","Content","borderColor","useState","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","content","useRef","onClick","current","scrollHeight","ref","style","maxHeight","Sunlight","Overflow","Image","indent"],"mappings":"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","file":"component---src-templates-location-index-js-0237ca3097675e74c704.js","sourcesContent":["// SpacerCentered Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled(Flex)`\n  position: relative;\n  justify-content: center;\n`;\n\nContainer.Line = styled.span`\n  width: 0;\n  height: 100px;\n  position: absolute;\n  bottom: -50px;\n  border-left: 1px dashed ${Theme.Color.Primary};\n  z-index: 9;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <SpacerCentered /> Component:\n// Vertical centered dashed spacer\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Centered = () => (\n  <Container>\n    <Container.Line />\n  </Container>\n);\n\nCentered.defaultProps = {};\n\nexport default Centered;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationHero /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Hero = styled(Box)`\n  background: ${Theme.Color.Background};\n  padding-top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 2);\n  padding-bottom: calc(${Theme.Root.Size} * 1.5);\n  text-align: left;\n  overflow: hidden;\n  position: relative;\n`;\n\nHero.Inner = styled(Box)`\n  width: 100%;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  margin: 0 auto;\n  position: relative;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n  overflow-x: visible;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n  }\n`;\n\nHero.Tags = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: calc(${Theme.Root.Size} / 8);\n\n  li {\n    color: ${Theme.Color.Deepsea};\n    text-transform: uppercase;\n    letter-spacing: calc(${Theme.Root.Size} * 0.05);\n    font-weight: 500;\n    font-size: 0.8rem;\n    padding: 0 calc(${Theme.Root.Rem} * 0);\n    margin-bottom: calc(${Theme.Root.Rem} * 0.8);\n\n    @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 0.9rem;\n      /* padding: 0 calc(${Theme.Root.Rem} * 0); */\n    }\n\n    &:after {\n      content: '—';\n      color: ${Theme.Color.Sunset};\n      margin: 0 calc(${Theme.Root.Size} / 6);\n    }\n\n    &:last-child {\n      \n      &:after {\n        content: '';\n      }\n    }\n\n    a {\n      color: ${Theme.Color.Primary};\n    }\n  }\n`;\n\nHero.Heading = styled.h2`\n  color: ${Theme.Color.Primary};\n\n  span {\n    color: ${Theme.Color.Nova};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Location Detail Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Spacer = styled(Flex)`\n  position: relative;\n  justify-content: center;\n`;\n\nSpacer.Line = styled.span`\n  width: 0;\n  height: 100px;\n  position: absolute;\n  bottom: -50px;\n  border-left: 1px dashed ${Theme.Color.Primary};\n  z-index: 9;\n`;\n\nexport const Scroll = styled(Box)`\n  align-self: flex-end;\n  text-align: left;\n  position: relative;\n  width: 100%;\n  height: 0;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  margin: 0 auto;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n  /* top: calc(${Theme.Root.Size} * -2); */\n  z-index: 9;\n\n  span {\n    color: ${Theme.Color.White};\n    font-size: 1rem;\n    font-weight: bold;\n    display: block;\n    margin-bottom: calc(${Theme.Root.Size} * 0.1);\n  }\n`;\n\nScroll.Positioner = styled.div`\n  width: fit-content;\n  text-align: center;\n  position: relative;\n  bottom: 100px;\n  padding-left: ${Root.Grid.Indent.X};\n`;\n\nScroll.Line = styled.div`\n  border-left: 1px dashed ${p => p.theme.Color.Nova};\n  display: block;\n  width: 0;\n  height: 160px;\n  margin: 0 auto;\n`;\n\nexport const Decorator = styled(Box)`\n  /* overflow: hidden; */\n  z-index: 9;\n\n  .decorator__hero {\n    position: absolute;\n    top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1);\n\n    &--top {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1);\n      right: -100px;\n      width: 140px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        right: -120px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        right: -170px;\n        width: 340px;\n      }\n    }\n\n    &--bottom {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 3.3);\n      right: -40px;\n      width: 120px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        right: -70px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        right: -30px;\n        width: 310px;\n      }\n    }\n  }\n\n  .decorator__footer {\n    position: absolute;\n    /* top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1); */\n\n    &--top {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * -2.5);\n      left: -95px;\n      width: 140px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        left: -120px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        left: -25px;\n        width: 180px;\n      }\n    }\n\n    &--bottom {\n      left: 50%;\n      width: 400px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n\n        width: 400px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n\n        width: 400px;\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationCoordinators /> section:\n// Location detail template coordinator accordion\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\n\n// Styles\nimport { Hero } from './styles.scss';\nimport { Decorator } from '../../templates/Location/styles.scss';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationHero = ({ cities, pageContext }) => {\n  // Check our County names if they contain 'County'\n  const countyClean = countyName => {\n    if (countyName.toLowerCase().includes('county')) {\n      return countyName;\n    } else {\n      return countyName + ' County';\n    }\n  };\n\n  // Create page name\n  const contextualPageName = () => {\n    if (pageContext != false) {\n      if (pageContext.isCounty == true) {\n        return (\n          countyClean(pageContext.name) + ', ' + pageContext.parentState.name\n        );\n      } else if (pageContext.isCostCode == true) {\n        return pageContext.cost_code_name + ', ' + pageContext.parentState.name;\n      } else {\n        return pageContext.name;\n      }\n    } else {\n      return 'a place near you';\n    }\n  };\n\n  // Create slugs\n  const programsSlug =\n    pageContext.isCounty == true\n      ? slugify(pageContext.parentState.name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.cost_code_name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.name.toLowerCase())\n      : pageContext.isCostCode == true\n      ? slugify(pageContext.parentState.name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.cost_code_name.toLowerCase())\n      : slugify(pageContext.name.toLowerCase());\n\n  return (\n    <Hero>\n      <Decorator>\n        <div className=\"decorator__hero decorator__hero--top\">\n          <ImgMatch src=\"cloud-big.png\" AltText=\"Cloud\" />\n        </div>\n\n        <div className=\"decorator__hero decorator__hero--bottom\">\n          <ImgMatch src=\"cloud-big.png\" AltText=\"Cloud\" />\n        </div>\n      </Decorator>\n      <Hero.Inner>\n        <Box width={1} px={Root.Grid.Indent.X}>\n          <Hero.Tags>\n            <li>\n              <Link to={'/'}>Robotics</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Intro to STEM</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Gaming</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Advanced Engineering</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Engineering Themes</Link>\n            </li>\n          </Hero.Tags>\n        </Box>\n        <Box width={1} px={Root.Grid.Indent.X}>\n          <Hero.Heading>\n            STEM Education &amp;\n            <br />\n            Engineering in <span>{contextualPageName()}</span>\n          </Hero.Heading>\n          <Box mr={1} display=\"inline-block\">\n            <Btn\n              Destination={'/programs/' + programsSlug}\n              Label=\"View Programs\"\n              BgColor={Theme.Color.Nova}\n              TextColor={Theme.Color.White}\n            />\n          </Box>\n          <Box display=\"inline-block\">\n            <Btn\n              Destination=\"/#coordinators\"\n              Label=\"Contact Manager\"\n              BgColor={Theme.Color.Blush}\n              TextColor={Theme.Color.Primary}\n            />\n          </Box>\n        </Box>\n      </Hero.Inner>\n    </Hero>\n  );\n};\n\nexport default LocationHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Homepage Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Article = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  background: ${Theme.Color.White};\n  padding: calc(${Root.Size} / 2);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    padding: calc(${Root.Size} / 3);\n  }\n`;\n\nArticle.Info = styled.div`\n  display: flex;\n  padding-left: calc(${Root.Size} / 2);\n  width: 75%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    padding-left: calc(${Root.Size} / 3);\n    width: 85%;\n  }\n`;\n\nArticle.Figure = styled.figure`\n  margin: 0;\n  width: 25%;\n  height: 25%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    width: 15%;\n    height: 15%;\n  }\n\n  .gatsby-image-wrapper {\n    border-radius: calc(${Root.Radius} * 6);\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nArticle.Info.Details = styled.div`\n  color: ${Theme.Color.Nova};\n  display: block;\n  font-weight: 500;\n  margin-bottom: calc(${Root.Size} / 4);\n  width: 100%;\n  text-transform: capitalize;\n\n  span {\n    color: ${Theme.Color.Dino};\n    margin-left: calc(${Root.Size} / 2);\n  }\n`;\n\nArticle.Info.Name = styled.div`\n  color: ${Theme.Color.Deepsea};\n  display: block;\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin-top: calc(${Root.Size} / 1);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    margin-top: 0;\n  }\n`;\n\nArticle.Info.Contact = styled.div`\n  align-self: flex-end;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${Theme.Color.Nova};\n  font-weight: 500;\n  margin-top: calc(${Root.Size} / 1);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    flex-direction: row;\n  }\n\n  span {\n    margin-bottom: calc(${Root.Size} / 3);\n    display: block;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n      margin-bottom: 0;\n    }\n\n    a {\n      color: ${Theme.Color.Nova};\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationCoordinators /> section:\n// Location detail template coordinator accordion\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\nimport Accordion from 'components/library/Accordion';\n\n// Styles\nimport { Article } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationCoordinators = ({ pageContext }) => {\n  // County / State conditional\n  const countyState = pageContext.isCounty\n    ? pageContext.name + ', ' + pageContext.parentState.name\n    : pageContext.name;\n\n  return (\n    <Section textAlign=\"left\">\n      {/* todo: make styled components */}\n      <Flex flexWrap=\"wrap\">\n        <Box\n          width={[1, 1, 1 / 2, 4 / 10]}\n          pr={[0, 0, 0, 'calc(var(--Size) * 2)']}\n          pb={'var(--Size)'}\n        >\n          <Text as=\"h2\" color=\"Dino\">\n            Coordinators in {countyState}\n          </Text>\n        </Box>\n        <Box width={[1, 1, 1 / 2, 6 / 10]}>\n          {pageContext.managers.map(manager => (\n            <Accordion key={manager.node.id} title={manager.node.cost_code_name}>\n              <Article>\n                <Article.Figure>\n                  <ImgMatch\n                    src=\"avatar-yoda.jpg\"\n                    AltText=\"PlayWell program state coordinator\"\n                  />\n                </Article.Figure>\n                <Article.Info>\n                  <Flex flexWrap=\"wrap\">\n                    <Article.Info.Details>\n                      {manager.node.state} <span>{manager.node.cost_code}</span>\n                    </Article.Info.Details>\n                    <Article.Info.Name fontSize=\"1.6rem\">\n                      {manager.node.manager}\n                    </Article.Info.Name>\n                    <Article.Info.Contact>\n                      <span>\n                        <a href={'mailto:' + manager.node.email}>{manager.node.email}</a>\n                      </span>\n                      <span>\n                        <a href={'tel:' + manager.node.cell_number}>{manager.node.cell_number}</a>\n                      </span>\n                      <span>\n                        <a href=\"/\">More</a>\n                      </span>\n                    </Article.Info.Contact>\n                  </Flex>\n                </Article.Info>\n              </Article>\n            </Accordion>\n          ))}\n        </Box>\n      </Flex>\n    </Section>\n  );\n};\n\nexport default LocationCoordinators;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: center;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// LocationSplitSections.js:\n// Location detail page split sections\n// todo: clean up, typography\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport SplitSection from 'components/library/Section/SplitSection';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst LocationSplitSection = () => (\n  <>\n    <SplitSection Flex=\"row-reverse\">\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <Text\n          as=\"span\"\n          color=\"Galaxy\"\n          fontSize={[1, 2, 2]}\n          fontWeight={700}\n          mb={1}\n        >\n          Do it yourself\n        </Text>\n        <Text as=\"h2\" color=\"Sunset\">\n          Host Your Own Program\n        </Text>{' '}\n        <Text as=\"p\" color=\"Galaxy\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n        <Btn\n          Label=\"View Our Menu\"\n          Destination=\"/menu\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n        />\n      </Block>\n      <Block\n        Style=\"centered\"\n        BgColor={Theme.Color.White}\n        BgMatch=\"placeholder.jpeg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        Width={0.5}\n      />\n    </SplitSection>\n\n    <SplitSection Flex=\"row\">\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <Text\n          as=\"span\"\n          color=\"Galaxy\"\n          fontSize={[1, 2, 2]}\n          fontWeight={700}\n          mb={1}\n        >\n          Playing since 1997\n        </Text>\n        <Text as=\"h2\" color=\"Sunset\">\n          Creativity, confidence &amp; collaboration.\n        </Text>{' '}\n        <Text as=\"p\" color=\"Galaxy\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n        <Btn\n          Label=\"View Our Menu\"\n          Destination=\"/menu\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n        />\n      </Block>\n      <Block\n        Style=\"centered\"\n        BgColor={Theme.Color.White}\n        BgMatch=\"placeholder.jpeg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        Width={0.5}\n      />\n    </SplitSection>\n  </>\n);\n\nexport default LocationSplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// LocationSplitSections.js:\n// Location detail page split sections\n// todo: clean up <components />, typography\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst LocationPrograms = () => (\n  <>\n    <SplitSection Flex=\"row\">\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.Primary}\n        TextColor={Theme.Color.White}\n      >\n        <Text as=\"span\" fontSize={[1, 2, 2]} fontWeight={700} mb={1}>\n          Playing anywhere\n        </Text>\n        <Text as=\"h2\">Find a program near you</Text>{' '}\n        <Text as=\"p\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n          Our assessments measured three goals including: student's knowledge of\n          STEM terms or concepts, ability to generalize information, and\n          increasing positve feeling towards STEM subjects.\n        </Text>\n        <Btn\n          Label=\"Explore Programs\"\n          Destination=\"/menu\"\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n        />\n      </Block>\n      <Block\n        Padding={[4, 2, 4, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.Sunset}\n        TextColor={Theme.Color.White}\n      >\n        <Text as=\"span\" fontSize={[1, 2, 2]} fontWeight={700} mb={1}>\n          Do it yourself\n        </Text>\n        <Text as=\"h2\">Host Your Own Program</Text>{' '}\n        <Text as=\"p\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n        <Btn\n          Label=\"Learn How\"\n          Destination=\"/menu\"\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n        />\n      </Block>\n    </SplitSection>\n  </>\n);\n\nexport default LocationPrograms;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Quote styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const QuoteContainer = styled(Section)``;\n\nQuoteContainer.Quote = styled(Text)`\n  position: relative;\n\n  &:before {\n    content: '\"';\n    color: ${Theme.Color.Primary};\n    font-size: 3rem;\n    position: absolute;\n    top: -40px;\n    left: -20px;\n\n    @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n    }\n  }\n\n  &:after {\n    content: '\"';\n    color: ${Theme.Color.Primary};\n    font-size: 3rem;\n    position: absolute;\n    bottom: -60px;\n    right: -20px;\n\n    @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LocationEvents styles:\n// Location template events section styling\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Events = styled(Box)`\n  display: flex;\n  flex-wrap: wrap;\n  background: ${Theme.Color.Background};\n  border-top: 1px solid ${hexToRGB(Theme.Color.Nova, 0.3)};\n  padding-top: calc(${Root.Grid.Gutter.Top} * 4);\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Quote /> section:\n// Full width quote section\n// todo: break quote down into a component\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Styles\nimport { QuoteContainer } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Quote = ({ color, children }) => {\n  // Render page\n  return (\n    <QuoteContainer>\n      <Box px={[0, '10%', '14%', '16%', '20%']}>\n        <QuoteContainer.Quote as=\"h2\" color={color} pb={0}>\n          {children}\n        </QuoteContainer.Quote>\n      </Box>\n    </QuoteContainer>\n  );\n};\n\nQuote.defaultProps = {\n  color: 'Sunset',\n};\n\nexport default Quote;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationIntro /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Intro = styled(Section)``;\n\nIntro.Inner = styled(Flex)`\n  flex-direction: column;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  max-width: ${Theme.Base.Grid.ReadingWidth};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationIntro /> section:\n// Location detail template introduction\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Text } from 'components/library/Elements';\n\n// Styles\nimport { Intro } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationIntro = ({ pageContext }) => {\n  const countyState = pageContext.isCounty\n    ? pageContext.name + ', ' + pageContext.parentState.name + \"'s\"\n    : pageContext.name + \"'s\";\n\n  return (\n    <Intro bg=\"Cream\" textAlign=\"center\">\n      <Intro.Inner pt={[2, 2, 4, 4]} pb={[1, 1, 2, 2]}>\n        <Text as=\"p\" color=\"Nova\" className=\"lead\">\n          {countyState} Leading STEM Education &amp; Engineering Programs\n        </Text>\n        <Text as=\"p\" color=\"Galaxy\" className=\"lead\">\n          Ut vehicula dictum tristique. Cras at sem nec risus sollicitudin\n          varius. Proin ultrices metus arcu, ut lacinia libero ornare eget.\n          Morbi orci mi, scelerisque a justo quis, euismod sollicitudin dui.\n          Duis convallis magna eget eleifend tempor. Ut non lobortis metus.\n          Donec sit amet vulputate risus. Vivamus et lacinia ante.\n        </Text>\n      </Intro.Inner>\n    </Intro>\n  );\n};\n\nexport default LocationIntro;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Location detail template:\n// This is the data template for the Locations Detail page\n// todo: Use <Spacer in place of <Scroll && add props to <Spacer\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport ImgMatch from 'components/core/ImgMatch';\nimport Section from 'components/library/Elements/Section';\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport SpacerCentered from 'components/library/Spacer/Centered';\n\n// Sections\nimport LocationHero from 'sections/LocationHero';\nimport LocationCoordinators from 'sections/LocationCoordinators';\nimport LocationSplitSection from 'sections/LocationSplitSection';\nimport LocationPrograms from 'sections/LocationPrograms';\nimport LocationEvents from 'sections/LocationEvents';\nimport Quote from 'sections/Quote';\nimport LocationIntro from 'sections/LocationIntro';\nimport LocationPlayZone from 'sections/LocationPlayZone';\n\nimport LegoList from 'components/library/Section/LegoList';\n\n// Styles\nimport { Hero, Spacer, Intro, Scroll, Decorator } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Props\nconst ThemeProps = {\n  BgColor: Theme.Color.Background,\n  PrimaryColor: Theme.Color.Dino,\n  SecondaryColor: Theme.Color.Primary,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Render Page\nconst LocationDetail = ({ pageContext }) => {\n  // For Debugging Purposes only\n  // console.log(pageContext);\n  // console.log(pageContext.managers.manager);\n\n  // Build Page\n  return (\n    <Layout {...ThemeProps}>\n      <LocationHero pageContext={pageContext} />\n\n      <Section pt={0} pb={0} fullWidth>\n        <ImgMatch\n          src=\"locations-hero.jpg\"\n          AltText=\"STEM Education &amp; Engineering in\"\n        />\n      </Section>\n\n      <SpacerCentered />\n\n      <LocationIntro pageContext={pageContext} />\n      <LocationSplitSection />\n      <LocationCoordinators pageContext={pageContext} id=\"coordinators\" />\n\n      {/* <LocationEvents /> */}\n\n      <Section bg=\"White\">\n        <LegoList\n          blocks={[\n            {\n              title: 'Creative Collaboration',\n              text:\n                'A greater sense of understanding and connection between your staff, as they will now know how others play, and in turn, how they work best.',\n            },\n            {\n              title: 'New Perspectives',\n              text:\n                'A willingness to tackle problems from a play perspective, embracing failure as part of the process of finding the solution.',\n            },\n            {\n              title: 'Creative Collaboration',\n              text:\n                'A rejuvenated staff who rediscovers what they find fun about their job and their organization.',\n            },\n          ]}\n        />\n      </Section>\n\n      <Quote color=\"Sunset\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla viverra\n        enim sed magna vestibulum, nec imperdiet orci egestas. Sed in magna\n        sapien.\n      </Quote>\n\n      <LocationPrograms />\n\n      <Scroll>\n        <Scroll.Positioner>\n          <span>Play</span>\n          <Scroll.Line />\n        </Scroll.Positioner>\n      </Scroll>\n\n      <Decorator\n        css={css`\n          position: relative;\n        `}\n      >\n        <div className=\"decorator__footer decorator__footer--top\">\n          <ImgMatch src=\"cloud-small.png\" AltText=\"Cloud\" />\n        </div>\n      </Decorator>\n\n      <LocationPlayZone />\n\n      {/* <Decorator>\n      <div className=\"decorator__footer decorator__footer--bottom\">\n        <ImgMatch src=\"volcano.png\" AltText=\"Cloud\" />\n      </div>\n    </Decorator> */}\n    </Layout>\n  );\n};\n\nexport default LocationDetail;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","//  Turn strings into slugs.\n\nconst slugify = string => {\n  const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœṕŕßśșțùúüûǘẃẍÿź·/_,:;';\n  const b = 'aaaaaaaaceeeeghiiiimnnnoooooprssstuuuuuwxyz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with ‘and’\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n};\n\nexport default slugify;\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({\n  blocks,\n}) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            {block.image && <ImgMatch src={block.image} />}\n            {!block.image && <Icon Name=\"basicLego\" Color={ block.legoColor ? block.legoColor : false } />}\n            <div className=\"h6\">{block.title}</div>\n            <p>{block.text}</p>\n          </div>\n        );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Accordion /> Styles:\n// Accordion component styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\nimport { Icon } from 'components/library/Icons';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nAccordionContainer.Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .rotate {\n    transform: rotate(90deg);\n  }\n`;\n\nAccordionContainer.Icon = styled(Icon)`\n  margin-left: auto;\n  transition: transform 0.3s ease;\n\n  svg {\n    fill: ${p => p.chevronColor};\n  }\n`;\n\nAccordionContainer.Accordion = styled.button`\n  align-items: center;\n  background: transparent;\n  color: ${p => p.color};\n  cursor: pointer;\n  display: flex;\n  border: none;\n  outline: none;\n  padding: calc(${Root.Size} / 3) calc(${Root.Size} / 4);\n  transition: background-color 0.6s ease;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    padding: calc(${Root.Size} / 2) calc(${Root.Size} / 3);\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &.active {\n    color: ${p => p.colorActive};\n  }\n`;\n\nAccordionContainer.Content = styled(Box)`\n  overflow: hidden;\n  transition: max-height 0.6s ease;\n  border-bottom: 1px solid ${p => p.borderColor};\n`;\n\nAccordionContainer.Content.Inner = styled.div`\n  border-radius: calc(${Root.Radius} / 3);\n  margin-bottom: calc(${Root.Size} / 3 );\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Accordion /> component:\n// Accordion with empty children for custom laouts\n// todo: style props for border, text,\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState, useRef } from 'react';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\n\n// Styles\nimport { AccordionContainer } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Accordion = ({\n  children,\n  title,\n  chevronColor,\n  color,\n  borderColor,\n  colorActive,\n}) => {\n  // Accordion hooks\n  const [setActive, setActiveState] = useState('');\n  const [setHeight, setHeightState] = useState('0px');\n  const [setRotate, setRotateState] = useState('accordion-icon');\n\n  // Reference the accordion content height\n  const content = useRef(null);\n\n  // Toggle classes / height\n  function toggleAccordion() {\n    setActiveState(setActive === '' ? 'active' : '');\n    setHeightState(\n      setActive === 'active' ? '0px' : `${content.current.scrollHeight}px`\n    );\n    setRotateState(\n      setActive === 'active' ? 'accordion-icon' : 'accordion-icon rotate'\n    );\n  }\n\n  return (\n    <AccordionContainer>\n      <AccordionContainer.Inner>\n        <AccordionContainer.Accordion\n          className={`${setActive}`}\n          onClick={toggleAccordion}\n          color={color}\n          colorActive={colorActive}\n        >\n          <Text as=\"span\" fontWeight={500} fontSize=\"1.6rem\">\n            {title}\n          </Text>\n          <AccordionContainer.Icon\n            Name=\"carat\"\n            className={`${setRotate}`}\n            chevronColor={chevronColor}\n          />\n        </AccordionContainer.Accordion>\n        <AccordionContainer.Content\n          ref={content}\n          style={{ maxHeight: `${setHeight}` }}\n          borderColor={borderColor}\n        >\n          <AccordionContainer.Content.Inner>\n            {children}\n          </AccordionContainer.Content.Inner>\n        </AccordionContainer.Content>\n      </AccordionContainer.Inner>\n    </AccordionContainer>\n  );\n};\n\nAccordion.defaultProps = {\n  chevronColor: Theme.Color.Nova,\n  color: hexToRGB(Theme.Color.Dino, 0.7),\n  colorActive: Theme.Color.Dino,\n  borderColor: hexToRGB(Theme.Color.Sunlight, 0.5),\n};\n\nexport default Accordion;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationPlayCenter /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled(Section)`\n  position: relative;\n`;\n\nContainer.Overflow = styled.div`\n  overflow: hidden;\n`;\n\nContainer.Image = styled.div`\n  width: 547px;\n  overflow: hidden;\n  position: absolute;\n  right: 0;\n  top: -300px;\n\n  .img {\n    width: 587px;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationPlayCenter /> section:\n// Location detail template Play Center callout\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport Section from 'components/library/Elements/Section';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationPlayZone = () => (\n  <Container textAlign=\"left\" pt={[8, 8, 12, 12]} indent>\n    <Container.Image>\n      <ImgMatch src=\"lego-ladder.png\" AltText=\"Cloud\" />\n    </Container.Image>\n    <Box width={[1, 6 / 10, 1 / 2, 4 / 10]}>\n      <Text className=\"h6\" as=\"span\" color=\"Galaxy\" fontWeight={700} mb={1}>\n        Do it yourself\n      </Text>\n      <Text as=\"h2\" color=\"Sunset\">\n        Build Your Own World of Opportunity\n      </Text>\n      <Text as=\"p\" color=\"Galaxy\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n        Bring your kid over or bring out your inner kid with some of our online\n        activities to feed your imagination.\n      </Text>\n      <Btn\n        Label=\"Play Zone\"\n        Destination=\"/menu\"\n        BgColor={Theme.Color.Primary}\n        TextColor={Theme.Color.White}\n      />\n    </Box>\n  </Container>\n);\n\nexport default LocationPlayZone;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}