{"version":3,"sources":["webpack:///./src/components/library/Section/PostCard/styles.scss.js","webpack:///./src/components/library/Section/PostCard/index.js","webpack:///./src/sections/OrganizationsHero/styles.scss.js","webpack:///./src/sections/OrganizationsHero/OrganizationsHero.js","webpack:///./src/sections/OrganizationsCulture/styles.scss.js","webpack:///./src/sections/OrganizationsCulture/OrganizationsCulture.js","webpack:///./src/pages/team-building/organizations.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/Block.js","webpack:///./src/components/library/Section/TextWithManyImages/styles.scss.js","webpack:///./src/components/library/Section/TextWithManyImages/index.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js"],"names":["PostCardStyle","styled","div","Theme","Base","Size","Lg","Color","Dino","Nova","Root","PostCard","title","tags","description","link","image","className","href","aria-label","ImgMatch","src","map","key","id","tag","Hero","Box","Background","Nav","Inner","Grid","SiteWidth","Gutter","Right","Left","Media","Width","Md","Tags","ul","Deepsea","Rem","Sunset","Primary","Heading","h2","HeroProps","bg","White","bgMatch","color","playButton","playButtonBg","Ocean","gear","reversed","wideImage","subNavColor","arrowColor","OrganizationsHero","SplitHero","subNav","label","active","Btn","Label","BgColor","TextColor","Destination","Container","OrganizationsCulture","SplitSection","Flex","Block","Style","BgMatch","BgAlt","JustifyContent","Padding","Nightsky","as","ThemeProps","PrimaryColor","SecondaryColor","TertiaryColor","OrganizationsPage","Layout","BasicSection","BorderTop","Clay","CenteredTitle","Title","Class","Marquee","images","SquareFormat","Shadow","Blush","noPaddingTop","noPaddingBottom","TextWithManyImages","Reversed","Text","Images","Section","pb","SplitLinks","message","to","themeProps","first","last","BlockStyle","props","flex","AlignItems","css","BgTint","maxWidth","children","BgQuery","AltText","ImgQuery","TextWithManyImagesStyle","MarqueeStyle","BgLinear","hexToRGB","Eggplant","MarqueeSlider","render","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Sm","Helmet","rel","type","ref","h","slider","this","React","Component","index","SplitSectionStyle","Site"],"mappings":"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","file":"component---src-pages-team-building-organizations-js-341e0c144ccf0b5beefa.js","sourcesContent":["// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst PostCardStyle = styled.div`\n  text-align: left;\n  padding: 0 calc(${Theme.Base.Size.Lg} / 8);\n  position: relative;\n\n  .gatsby-image-wrapper {\n    border-radius: calc(${Theme.Base.Size.Lg} / 8);\n    height: 0 !important;\n    padding-top: 50%;\n  }\n\n  .text {\n    display: block;\n    width: 100%;\n    padding: calc(${Theme.Base.Size.Lg} / 4) calc(${Theme.Base.Size.Lg} / 3)\n      calc(${Theme.Base.Size.Lg} / 2) calc(${Theme.Base.Size.Lg} / 3);\n    border-bottom-left-radius: calc(${Theme.Base.Size.Lg} / 8);\n    border-bottom-right-radius: calc(${Theme.Base.Size.Lg} / 8);\n    margin-bottom: calc(${Theme.Base.Size.Lg} * 0.75);\n    transition-duration: 0.25s;\n\n    &:hover {\n      text-decoration: none !important;\n    }\n\n    .h6 {\n      font-weight: 700;\n      margin-bottom: calc(${Theme.Base.Size.Lg} / 8);\n      color: ${Theme.Color.Dino};\n    }\n\n    p {\n      padding-bottom: 0;\n      color: ${Theme.Color.Dino};\n    }\n\n    ul {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n      flex-wrap: row;\n      margin-bottom: calc(${Theme.Base.Size.Lg} / 4);\n\n      li {\n        color: ${Theme.Color.Nova};\n        font-size: 0.8rem;\n        font-weight: 700;\n        margin-right: calc(${Root.Size} / 4);\n      }\n    }\n  }\n`;\n\nexport default PostCardStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// PostCard.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport PostCardStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n\n// The SubLevel Page Itself\nconst PostCard = ({ title, tags, description, image, link }) => (\n  <PostCardStyle className=\"post-card\">\n    <a className=\"image\" href={link} aria-label=\"View More\">\n      <ImgMatch src=\"boy-4.jpg\" />\n    </a>\n    <a href={link} aria-label=\"View More\" className=\"text\">\n      {tags &&\n        <ul>\n          {tags.map(tags => (\n            <li key={tags.id}>{tags.tag}</li>\n          ))}\n        </ul>\n      }\n      <div className=\"h6\">{title}</div>\n      <p>{description}</p>\n    </a>\n  </PostCardStyle>\n);\n\nexport default PostCard;\n","// <LocationHero /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Hero = styled(Box)`\n  background: ${Theme.Color.Background};\n  padding-top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 2);\n  padding-bottom: calc(${Theme.Root.Size} * 1.5);\n  text-align: left;\n  overflow: hidden;\n  position: relative;\n`;\n\nHero.Inner = styled(Box)`\n  width: 100%;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  margin: 0 auto;\n  position: relative;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n  overflow-x: visible;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n  }\n`;\n\nHero.Tags = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: calc(${Theme.Root.Size} / 8);\n\n  li {\n    color: ${Theme.Color.Deepsea};\n    text-transform: uppercase;\n    letter-spacing: calc(${Theme.Root.Size} * 0.05);\n    font-weight: 500;\n    font-size: 0.8rem;\n    padding: 0 calc(${Theme.Root.Rem} * 0);\n    margin-bottom: calc(${Theme.Root.Rem} * 0.8);\n\n    @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 0.9rem;\n      /* padding: 0 calc(${Theme.Root.Rem} * 0); */\n    }\n\n    &:after {\n      content: '—';\n      color: ${Theme.Color.Sunset};\n      margin: 0 calc(${Theme.Root.Size} / 6);\n    }\n\n    &:last-child {\n      \n      &:after {\n        content: '';\n      }\n    }\n\n    a {\n      color: ${Theme.Color.Primary};\n    }\n  }\n`;\n\nHero.Heading = styled.h2`\n  color: ${Theme.Color.Primary};\n\n  span {\n    color: ${Theme.Color.Nova};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <OrganizationsHero /> section:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport SplitHero from 'components/library/Hero/SplitHero';\n\n// Styles\nimport { Hero } from './styles.scss';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.White,\n  bgMatch: 'baby-biljetter.jpg',\n  color: Theme.Color.Primary,\n  playButton: false,\n  playButtonBg: Theme.Color.Ocean,\n  gear: false,\n  reversed: true,\n  wideImage: true,\n  subNavColor: Theme.Color.Nova,\n  arrowColor: Theme.Color.Nova,\n};\n\nconst OrganizationsHero = () => {\n  return (\n    <SplitHero\n      {...HeroProps}\n      subNav={[\n        { label: 'team building', link: '/team-building' },\n        {\n          label: 'organizations',\n          active: true,\n          link: '/team-building/organizations',\n        },\n        { label: 'sports teams', link: '/team-building/sports-teams' },\n        { label: 'non-profits', link: '/team-building/non-profits' },\n      ]}\n    >\n      <h2>Bring purposeful play to your organization</h2>\n      <h6 className=\"txt-clr-dino\">\n        We have partnered with boy scouts, girl scouts, and other organizations.\n      </h6>\n      <Btn\n        Label=\"Get In Touch\"\n        BgColor={Theme.Color.Nova}\n        TextColor={Theme.Color.White}\n        Size=\"large\"\n        Destination=\"/contact\"\n      />\n    </SplitHero>\n  );\n};\n\nexport default OrganizationsHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// AfterSchoolOverview Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled.div`\n  background-image: linear-gradient(\n    to right,\n    ${Theme.Color.Sunset} 50%,\n    rgba(255, 255, 255, 0) 0%\n  );\n  background-position: top;\n  background-size: 10px 1px;\n  background-repeat: repeat-x;\n  padding-top: 1px;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <OrganizationsCulture /> section:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport SplitSection from 'components/library/Section/SplitSection';\nimport Btn from 'components/library/Btn';\nimport Block from 'components/library/Block';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst OrganizationsCulture = () => {\n  return (\n    <Container>\n      <SplitSection Flex=\"row-reverse\">\n        <Block\n          Style=\"centered\"\n          BgColor={Theme.Color.White}\n          BgMatch=\"lady-group.jpg\"\n          BgAlt=\"Our Awesome Alt Tag\"\n          Width={0.5}\n          JustifyContent=\"center\"\n        />\n        <Block\n          Padding={[2, 2, 2, 2]}\n          Width={0.5}\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          <Text className=\"h6 heading-padding\" color=\"Galaxy\">\n            Establishing a culture of play\n          </Text>\n          <Text className=\"h2\" color=\"Sunset\">\n            Solve Problems and Explore\n          </Text>{' '}\n          <Text as=\"p\" className=\"p-lg\" color=\"Galaxy\">\n            There was a time when our play was our work. Remember when you were\n            a kid, and your imagination had no limits? Through play, you\n            expressed your creativity, solved problems, and explored the world.\n          </Text>\n          <Text as=\"p\" className=\"p-lg\" color=\"Galaxy\">\n            We believe that establishing a culture of play helps create that\n            environment. In our experience, organizations that play well create\n            the conditions for exploration, unconventional thinking, and\n            innovation. That culture of play allows for big risks and also\n            failure, as resiliency is a crucial part of the journey towards\n            success.\n          </Text>\n        </Block>\n      </SplitSection>\n    </Container>\n  );\n};\n\nexport default OrganizationsCulture;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Organizations page:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport Marquee from 'components/library/Section/Marquee';\nimport PostCard from 'components/library/Section/PostCard';\nimport Section from 'components/library/Elements/Section';\nimport TextWithManyImages from 'components/library/Section/TextWithManyImages';\nimport styled from 'styled-components';\nimport SplitLinks, { SplitLink } from 'components/library/SplitLinks';\nimport ImgMatch from 'components/core/ImgMatch';\n\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\n\n// Sections\nimport OrganizationsHero from 'sections/OrganizationsHero';\nimport OrganizationsCulture from 'sections/OrganizationsCulture';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Props\nconst ThemeProps = {\n  BgColor: Theme.Color.White,\n  PrimaryColor: Theme.Color.Primary,\n  SecondaryColor: Theme.Color.Dino,\n  TertiaryColor: Theme.Color.White,\n};\n\n\nconst StoriesFeature = styled.div`\n  padding: calc(${Theme.Base.Size.Lg}) 0;\n\n  .h3 {\n    font-weight: 700;\n    padding-bottom: calc(${Theme.Base.Size.Lg} / 1.5);\n  }\n\n  .stories-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    .post-card {\n      width: 47%;\n      padding: 0;\n    }\n  }\n`;\n\n\n// Render Page\nconst OrganizationsPage = () => {\n  // Use our hook's data as source\n  // const fetchedData = DataFetch();\n\n  return (\n    <Layout {...ThemeProps}>\n      <OrganizationsHero />\n      <OrganizationsCulture />\n\n      {/*<BasicSection BgColor={Theme.Color.Background} TextColor={Theme.Color.Dino}>\n        <BasicInner>\n          <StoriesFeature>\n            <div className=\"h3\">Organization Stories</div>\n            <div className=\"stories-container\">\n              {Stories.map(story => (\n                <PostCard \n                  key={story.index}\n                  link={story.link}\n                  tags={story.tags}\n                  description={story.detail}\n                  title={story.header}\n                />\n              ))}\n            </div>\n          </StoriesFeature>\n        </BasicInner>\n      </BasicSection>*/}\n\n      <BasicSection BgColor={Theme.Color.White} BorderTop={Theme.Color.Clay}>\n        <BasicInner>\n          <CenteredTitle\n            Title={null}\n            Class=\"h3\"\n            TextColor={Theme.Color.Sunset}\n          />\n        </BasicInner>\n        <Marquee\n          images={[\n            'visa.png',\n            'microsoft.png',\n            'clorox.png',\n            'google.png',\n            'pixar.jpeg',\n          ]}\n          SquareFormat\n          Shadow\n        />\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Blush}\n        TextColor={Theme.Color.Dino}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <TextWithManyImages\n          Reversed\n          Text=\"Our goal is to remind your staff that work can be fun and challenging at the same time.\"\n          Images={['kids-1.jpg', 'lego-head.png', 'boy-3.png']}\n        />\n      </BasicSection>\n\n      <Section bg={ThemeProps.BgColor} pb={0}>\n        <SplitLinks>\n          <SplitLink\n            title=\"Here ye, here ye.\"\n            message=\"Learn about Our Story &amp; where it all began.\"\n            // message={'Keep exploring programs in ' + countyStateString + '.'}\n            to=\"/\"\n            themeProps={ThemeProps}\n            first\n          />\n          <SplitLink\n            title=\"Keep reading.\"\n            message=\"Learn about how we utilize STEM Enrichment.\"\n            to=\"/\"\n            themeProps={ThemeProps}\n            last\n          />\n        </SplitLinks>\n      </Section>\n    </Layout>\n  );\n};\n\nexport default OrganizationsPage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n\n\nconst Stories = [\n  {\n    index: 0,\n    header: 'Building a Coral Reef out of Lego® materials',\n    link: '/',\n    detail:\n      'We have run our LEGO-Inspired STEM Play Activations for companies around the country.',\n    tags: [\n      {\n        id: 0,\n        tag: 'Engineering',\n      },\n      {\n        id: 1,\n        tag: 'Camp',\n      },\n      {\n        id: 2,\n        tag: 'Mechanics',\n      },\n      {\n        id: 3,\n        tag: 'Robotics',\n      },\n    ],\n  },\n  {\n    index: 1,\n    header: 'Building a Coral Reef out of Lego® materials',\n    link: '/',\n    detail:\n      'We have run our LEGO-Inspired STEM Play Activations for companies around the country.',\n    tags: [\n      {\n        id: 0,\n        tag: 'Engineering',\n      },\n      {\n        id: 1,\n        tag: 'Camp',\n      },\n      {\n        id: 2,\n        tag: 'Mechanics',\n      },\n      {\n        id: 3,\n        tag: 'Robotics',\n      },\n    ],\n  },\n];\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n  ${props => (props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;')}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ');'\n      : null}\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImagesStyle = styled.div`\n  position: relative;\n\n  .images, .text {\n    width: 50%;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      width: 100%;\n    }\n  }\n\n  .images {\n    margin-left: ${props => (props.Reversed ? '0' : '50%')};\n    display: flex;\n    flex-direction: row;\n    max-height: calc(${\n      Theme.Base.Grid.SiteWidth\n    } * .3333); //this is the height of the large image at site width\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      align-items: stretch;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-left: 0;\n      max-height: none;\n    }\n\n    .column {\n      padding-top: 66.66%;\n      width: 33.33%;\n      position: relative;\n      @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n        width: calc(${\n          Theme.Base.Grid.SiteWidth\n        } * .16666); //this is the width of the small images at site width\n        padding-top: calc(${Theme.Base.Grid.SiteWidth} * .3333);\n      }\n\n      .gatsby-image-wrapper {\n        position: absolute !important;\n        top: 0;\n        left: 4px;\n        width: calc(100% - 4px);\n        height: calc(50% - 2px);\n\n        &:last-of-type {\n          top: calc(50% + 2px);\n        }\n      }\n    }\n\n    > .gatsby-image-wrapper {\n      width: 66.66%;\n      padding-top: 66.66%;\n      height: 0 !important;\n      @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n        width: auto;\n        flex: 100;\n        padding-top: 0;\n        height: auto !important;\n      }\n    }\n  }\n\n  .basic-inner {\n    height: 100%;\n    position: absolute;\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      left: calc(50vw - (${Theme.Base.Grid.SiteWidth} / 2));\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      position: relative;\n    }\n\n    .text {\n      font-weight: 700;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      transform: translateX(${props => (props.Reversed ? '100%' : '0')});\n      padding-right: calc(${Root.Size} * ${props =>\n         props.Reversed ? '0' : '1'});\n      padding-left: calc(${Root.Size} * ${props =>\n         props.Reversed ? '1' : '0'});\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        padding-right: calc(${Root.Size} ${props =>\n         props.Reversed ? '* 0' : '/ 2'});\n        padding-left: calc(${Root.Size} ${props =>\n         props.Reversed ? '/ 2' : '* 0'});\n\n        &.h4 {\n          font-size: 1.75rem;\n        }\n      }\n\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: calc(${Root.Size} * 2) 0;\n        transform: translateX(0);\n      }\n    }\n  }\n\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Many Images Section Component:\n// This is a section for two half width components, one of three square\n// imaged and the other of text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport { TextWithManyImagesStyle } from './styles.scss';\nimport { BasicInner } from 'components/library/Section/BasicSection';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImages = ({ Images, Text, Reversed }) => (\n         <TextWithManyImagesStyle Reversed={Reversed}>\n           <BasicInner>\n             <div className=\"text h4\">{Text}</div>\n           </BasicInner>\n           <div className=\"images\">\n             <ImgMatch src={Images[0]} />\n             <div className=\"column\">\n               <ImgMatch src={Images[1]} />\n               <ImgMatch src={Images[2]} />\n             </div>\n           </div>\n         </TextWithManyImagesStyle>\n       );\n\nexport default TextWithManyImages;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props =>\n    props.BgLinear\n      ? `\n    background: linear-gradient( to top, ` +\n        props.BgLinear +\n        ` 75%, ${Theme.Color.Background} 75% );\n  `\n      : null};\n\n  .slick-slider {\n    ${props =>\n      props.Shadow\n        ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(\n          Theme.Color.Eggplant,\n          0.2\n        )});\n      }\n    `\n        : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props =>\n          props.SquareFormat\n            ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        `\n            : `\n          padding-top: 140%;\n        `};\n\n        img {\n          ${props =>\n            props.SquareFormat\n              ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          `\n              : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Md +\n            (Base.Media.Width.Lg - Base.Media.Width.Md) / 2,\n          settings: {\n            slidesToShow: 3,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Sm +\n            (Base.Media.Width.Md - Base.Media.Width.Sm) / 2,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle SquareFormat={SquareFormat} Shadow={Shadow} BgLinear={BgLinear}>\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  flex-wrap: wrap;\n  justify-content: center;\n  position: relative;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-wrap: nowrap;\n  }\n\n  .h1,\n  .h2 {\n    font-weight: 600;\n    padding-bottom: calc(${Root.Size} / 3.5);\n  }\n\n  p {\n    font-weight: 500;\n  }\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      width: 100%;\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        width: ${props =>\n          props.Flex\n            ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n            : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n        /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n        ${props =>\n          props.Flex\n            ? null\n            : 'padding-left: calc(' +\n              Root.Grid.Gutter.Left +\n              ' + ' +\n              Root.Size +\n              ')'}\n      }\n    }\n\n    &:last-child {\n      width: 100%;\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        width: ${props =>\n          props.Flex\n            ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n            : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n        /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n        ${props =>\n          props.Flex\n            ? null\n            : 'padding-left: calc(' +\n              Root.Grid.Gutter.Left +\n              ' + ' +\n              Root.Size +\n              ')'}\n      }\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 100%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}