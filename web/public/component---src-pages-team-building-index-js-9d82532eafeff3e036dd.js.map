{"version":3,"sources":["webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/Block.js","webpack:///./src/components/library/Forms/ContactForm/styles.scss.js","webpack:///./src/components/library/Forms/ContactForm/ContactForm.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/sections/TeamBuildingHero/styles.scss.js","webpack:///./src/sections/TeamBuildingHero/TeamBuildingHero.js","webpack:///./src/sections/TeamBuildingCulture/TeamBuildingCulture.js","webpack:///./src/sections/TeamBuildingSplitLinks/TeamBuildingSplitLinks.js","webpack:///./src/pages/team-building/index.js","webpack:///./src/components/library/Section/TextWithManyImages/styles.scss.js","webpack:///./src/components/library/Section/TextWithManyImages/index.js","webpack:///./src/sections/AfterSchoolContact/AfterSchoolContact.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/Section/CenterSlider/styles.scss.js","webpack:///./src/components/library/Section/CenterSlider/index.js"],"names":["BlockStyle","styled","div","props","Flex","flex","BgColor","TextColor","AlignItems","Style","css","JustifyContent","BgTint","Width","maxWidth","Theme","Base","Grid","SiteWidth","Padding","Root","Size","Block","children","className","BgMatch","BgQuery","BgAlt","ImgMatch","src","AltText","ImgQuery","Form","form","Transition","String","Color","Sunset","Blush","Dino","Primary","hexToRGB","Eggplant","Media","Sm","ContactForm","formName","title","footnote","name","method","data-netlify","data-netlify-honeypot","type","value","width","htmlFor","aria-label","id","placeholder","required","rows","pattern","maxLength","Name","States","map","state","Btn","Nova","White","Label","Destination","defaultProps","LegoListStyles","Md","LegoList","blocks","block","index","key","image","legoColor","text","Hero","Box","Background","Nav","Inner","Gutter","Right","Left","Tags","ul","Deepsea","Rem","Lg","Heading","h2","HeroProps","bg","bgMatch","color","playButton","playButtonBg","Ocean","gear","reversed","wideImage","subNavColor","arrowColor","TeamBuildingHero","SplitHero","subNav","label","active","link","TeamBuildingCulture","SplitSection","Nightsky","as","TeamBuildingSplitLinks","pageContext","themeProps","stateName","countyName","costCodeName","Section","pb","SplitLinks","message","to","first","last","ThemeProps","PrimaryColor","SecondaryColor","TertiaryColor","AbsoluteDecor","Site","OverflowHidden","TeamBuilding","Layout","BasicSection","BorderTop","Clay","CenteredTitle","Title","Class","CenterSlider","testimonials","quote","Marquee","images","SquareFormat","Shadow","noPaddingBottom","textAlign","m","fontWeight","CurveAndAngle","AngleColor","CurveColor","noPaddingTop","pt","TextWithManyImages","Reversed","Text","Images","TextWithManyImagesStyle","AfterSchoolContact","MarqueeStyle","BgLinear","MarqueeSlider","render","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Helmet","rel","href","ref","h","slider","this","React","Component","SplitSectionStyle","CenterSliderStyle","p","AsNavFor","nav1","nav2","componentDidMount","setState","slider1","slider2","noNavSlider","asNavFor","focusOnSelect","centerPadding","slides","testimonial","fade"],"mappings":"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","file":"component---src-pages-team-building-index-js-9d82532eafeff3e036dd.js","sourcesContent":["// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n  ${props => (props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;')}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ');'\n      : null}\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// ContactForm Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 100%;\n  max-width: calc(${Root.Size} * 12);\n\n  .radio-group {\n    .option-or {\n      padding: 0 25px;\n      font-weight: 500;\n    }\n\n    label {\n      font-weight: 500;\n      display: block;\n      line-height: 25px;\n      position: relative;\n      padding-left: 35px;\n      cursor: pointer;\n      user-select: none;\n      transition: ${Theme.Base.Transition.String};\n\n      /* On mouse-over, add a grey background color */\n      &:hover input ~ .checkmark {\n        background: radial-gradient(${Theme.Color.Sunset} 33%, ${Theme.Color.Blush} calc(33% + 1px));\n      }\n\n      input {\n        position: absolute;\n        opacity: 0;\n        cursor: pointer;\n        height: 25px;\n        width: 25px;\n        top: 0;\n        left: 0;\n\n        &:checked ~ .checkmark {\n          background-color: ${Theme.Color.Blush};\n\n          /* Show the indicator (dot/circle) when checked */\n          &:after {\n            display: block;\n          }\n        }\n      }\n\n      /* Create a custom radio button */\n      .checkmark {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 25px;\n        width: 25px;\n        background-color: ${Theme.Color.Blush};\n        border-radius: 50%;\n        pointer-events: none;\n\n        /* Create the indicator (the dot/circle - hidden when not checked) */\n        &:after {\n          content: '';\n          position: absolute;\n          display: none;\n        }\n      }\n\n      /* Style the indicator (dot/circle) */\n      .checkmark:after {\n        top: 6px;\n        left: 6px;\n        width: 13px;\n        height: 13px;\n        border-radius: 50%;\n        background: ${Theme.Color.Sunset};\n      }\n    }\n  }\n\n  legend {\n    color: ${Theme.Color.Dino};\n    font-weight: 600;\n    padding-bottom: calc(${Root.Size} * 1);\n    width: 100%;\n  }\n\n  fieldset {\n    border: none;\n    margin: 0 auto;\n    width: 100%;\n    max-width: calc(${Root.Size} * 11);\n\n    label {\n      display: none;\n    }\n\n    input,\n    textarea,\n    select {\n      background: ${Theme.Color.Blush};\n      color: ${Theme.Color.Primary};\n      font-size: 1.2rem;\n      font-weight: 500;\n      line-height: 2.5;\n      margin: 0;\n      padding: 0;\n      width: 100%;\n      padding: 0 calc(${Root.Size} / 2.5);\n\n      &:focus {\n        box-shadow: 0 0 15px 3px ${hexToRGB(Theme.Color.Eggplant, 0.2)};\n        box-shadow: 0 0 0 3px -moz-mac-focusring;\n        outline: none;\n      }\n\n      &::placeholder {\n        color: ${hexToRGB(Theme.Color.Primary, 0.4)};\n      }\n    }\n\n    input {\n      border-radius: 999px;\n      border: none;\n    }\n\n    textarea {\n      border-radius: 7px;\n      border: none;\n    }\n\n    select {\n      appearance: none;\n      box-sizing: border-box;\n      border: none;\n      border-radius: 999px;\n      cursor: pointer;\n      display: block;\n      margin: 0;\n      width: 100%;\n      max-width: 100%;\n      transition: ${Theme.Base.Transition.String};\n\n      option:first {\n        color: ${hexToRGB(Theme.Color.Primary, 0.4)};\n      }\n\n      &::-ms-expand {\n        display: none;\n      }\n\n      &:focus {\n        box-shadow: 0 0 15px 3px ${hexToRGB(Theme.Color.Eggplant, 0.2)};\n        box-shadow: 0 0 0 3px -moz-mac-focusring;\n        outline: none;\n      }\n\n      option {\n        font-weight: normal;\n      }\n    }\n\n    div,\n    .form-group {\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      padding-bottom: calc(${Root.Size} / 3);\n\n      &__box {\n        padding-bottom: calc(${Root.Size} / 3);\n\n        &:last-child {\n          padding-bottom: 0;\n          padding-left: 0;\n\n          @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n            padding-left: calc(${Root.Size} / 3);\n          }\n        }\n\n        @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n          padding-bottom: 0;\n        }\n\n        &--select {\n          position: relative;\n          display: flex;\n          align-items: center;\n\n          .carat {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-left: 1px solid ${hexToRGB(Theme.Color.Dino, 0.2)};\n            line-height: 1.6;\n            padding-left: calc(${Root.Size} / 6);\n            position: absolute;\n            right: calc(${Root.Size} / 4);\n\n            .ico-carat {\n              position: relative;\n              transform: rotate(90deg) scale(0.6);\n              transform-origin: center center;\n\n              polygon,\n              svg,\n              g {\n                fill: ${Theme.Color.Primary};\n              }\n            }\n          }\n        }\n      }\n\n      .form-heading {\n        display: block;\n        font-weight: 500;\n        padding-bottom: calc(${Root.Size} / 3.5);\n        text-align: left;\n        width: 100%;\n      }\n    }\n\n    .footnote {\n      padding-top: calc(${Root.Size} / 2);\n      padding-bottom: 0;\n\n      p {\n        color: ${Theme.Color.Dino};\n        padding: 0 5%;\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <ContactForm /> component:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Styles\nimport { Form } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ContactForm = ({ formName, title, footnote }) => (\n  <Form\n    name={formName}\n    method=\"post\"\n    data-netlify=\"true\"\n    data-netlify-honeypot=\"bot-field\"\n  >\n    <input type=\"hidden\" name=\"bot-field\" />\n    <input\n      type=\"hidden\"\n      name={formName}\n      value={formName}\n    />\n    <legend className=\"h3\">{title}</legend>\n    <fieldset>\n      <div className=\"form-group\">\n        <Box width={[1, 1 / 2, 4 / 10]} className=\"form-group__box\">\n          <label htmlFor=\"firstName\">\n            First Name:{' '}\n            <abbr title=\"required\" aria-label=\"required\">\n              *\n            </abbr>\n          </label>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            id=\"firstName\"\n            placeholder=\"First Name\"\n            required\n          />\n        </Box>\n\n        <Box width={[1, 1 / 2, 6 / 10]} className=\"form-group__box\">\n          <label htmlFor=\"lastName\">\n            Last Name:{' '}\n            <abbr title=\"required\" aria-label=\"required\">\n              *\n            </abbr>\n          </label>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            id=\"lastName\"\n            placeholder=\"Last name\"\n            required\n          />\n        </Box>\n      </div>\n\n      <div>\n        <label htmlFor=\"school\">School Name:</label>\n        <input\n          type=\"text\"\n          name=\"school\"\n          id=\"school\"\n          placeholder=\"School name\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"comments\">Comments, Questions, etc.: </label>\n        <textarea\n          name=\"comments\"\n          id=\"comments\"\n          rows=\"4\"\n          placeholder=\"Comments, questions, etc.\"\n        />\n      </div>\n\n      <Box width={1}>\n        <label htmlFor=\"email\">\n          Email:\n          <abbr title=\"required\" aria-label=\"required\">\n            *\n          </abbr>\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          placeholder=\"Your email\"\n          required\n        />\n      </Box>\n\n      <div className=\"form-group\">\n        <Box width={[1, 1 / 2, 4 / 10]} className=\"form-group__box\">\n          <label htmlFor=\"phone\">Phone:</label>\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            id=\"phone\"\n            placeholder=\"(___) ___-____\"\n            pattern=\"[0-9]{3} [0-9]{3} [0-9]{4}\"\n            maxLength=\"12\"\n          />\n        </Box>\n\n        <Box\n          width={[1, 1 / 2, 6 / 10]}\n          className=\"form-group__box form-group__box--select\"\n        >\n          <label htmlFor=\"eventType\">Type of Event:</label>\n          <select name=\"eventType\" id=\"eventType\">\n            <option value={null}>Type of Event</option>\n            <option value=\"summer-camps\">Summer Camps</option>\n            <option value=\"workshops\">Workshops</option>\n            <option value=\"classes\">Classes</option>\n          </select>\n          <span className=\"carat\">\n            <Icon Name=\"carat\" className=\"ico-carat\" />\n          </span>\n        </Box>\n      </div>\n\n      <div className=\"form-group\">\n        <Box width={[1, 1 / 2, 1 / 2]} className=\"form-group__box\">\n          <label htmlFor=\"city\">City:</label>\n          <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"City\" />\n        </Box>\n\n        <Box\n          width={[1, 1 / 2, 1 / 2]}\n          className=\"form-group__box form-group__box--select\"\n        >\n          <label htmlFor=\"state\">State:</label>\n          <select name=\"state\" id=\"state\">\n            <option value={null}>State</option>\n            {States.map(state => (\n             <option value={state}>{state}</option>\n            ))}\n          </select>\n          <span className=\"carat\">\n            <Icon Name=\"carat\" className=\"ico-carat\" />\n          </span>\n        </Box>\n      </div>\n\n      <div className=\"radio-group\">\n        <span className=\"p-lg form-heading\">\n          How would you like us to respond?\n        </span>\n\n        <label htmlFor=\"email-or-phone\">\n          email\n          <input type=\"radio\" name=\"email-or-phone\" value=\"email\" />\n          <span className=\"checkmark\" />\n        </label>\n\n        <span className=\"option-or\">OR</span>\n\n        <label htmlFor=\"email-or-phone\">\n          phone\n          <input type=\"radio\" name=\"email-or-phone\" value=\"phone\" />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n\n      <Btn\n        BgColor={Theme.Color.Nova}\n        TextColor={Theme.Color.White}\n        Label=\"Submit Request\"\n        Destination=\"/\"\n        Size=\"large\"\n      />\n\n      <div className=\"footnote\">\n        <p className=\"p-lg\">{footnote}</p>\n      </div>\n    </fieldset>\n  </Form>\n);\n\nContactForm.defaultProps = {};\n\nexport default ContactForm;\n\nconst States = [\n  'Alabama',\n  'Alaska',\n  'Arizona',\n  'Arkansas',\n  'California',\n  'Colorado',\n  'Connecticut',\n  'Delaware',\n  'Florida',\n  'Georgia',\n  'Hawaii',\n  'Idaho',\n  'Illinois',\n  'Indiana',\n  'Iowa',\n  'Kansas',\n  'Kentucky',\n  'Louisiana',\n  'Maine',\n  'Maryland',\n  'Massachusetts',\n  'Michigan',\n  'Minnesota',\n  'Mississippi',\n  'Missouri',\n  'Montana',\n  'Nebraska',\n  'Nevada',\n  'New Hampshire',\n  'New Jersey',\n  'New Mexico',\n  'New York',\n  'North Carolina',\n  'North Dakota',\n  'Ohio',\n  'Oklahoma',\n  'Oregon',\n  'Pennsylvania',\n  'Rhode Island',\n  'South Carolina',\n  'South Dakota',\n  'Tennessee',\n  'Texas',\n  'Utah',\n  'Vermont',\n  'Virginia',\n  'Washington',\n  'West Virginia',\n  'Wisconsin',\n  'Wyoming',\n];\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important;\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({ blocks }) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n      return (\n        <div className=\"item\" key={index}>\n          {block.image && <ImgMatch src={block.image} />}\n          {!block.image && (\n            <Icon\n              Name=\"basicLego\"\n              Color={block.legoColor ? block.legoColor : false}\n            />\n          )}\n          <div className=\"h6\">{block.title}</div>\n          <p>{block.text}</p>\n        </div>\n      );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationHero /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Hero = styled(Box)`\n  background: ${Theme.Color.Background};\n  padding-top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 2);\n  padding-bottom: calc(${Theme.Root.Size} * 1.5);\n  text-align: left;\n  overflow: hidden;\n  position: relative;\n`;\n\nHero.Inner = styled(Box)`\n  width: 100%;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  margin: 0 auto;\n  position: relative;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n  overflow-x: visible;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n  }\n`;\n\nHero.Tags = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: calc(${Theme.Root.Size} / 8);\n\n  li {\n    color: ${Theme.Color.Deepsea};\n    text-transform: uppercase;\n    letter-spacing: calc(${Theme.Root.Size} * 0.05);\n    font-weight: 500;\n    font-size: 0.8rem;\n    padding: 0 calc(${Theme.Root.Rem} * 0);\n    margin-bottom: calc(${Theme.Root.Rem} * 0.8);\n\n    @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 0.9rem;\n      /* padding: 0 calc(${Theme.Root.Rem} * 0); */\n    }\n\n    &:after {\n      content: '—';\n      color: ${Theme.Color.Sunset};\n      margin: 0 calc(${Theme.Root.Size} / 6);\n    }\n\n    &:last-child {\n      \n      &:after {\n        content: '';\n      }\n    }\n\n    a {\n      color: ${Theme.Color.Primary};\n    }\n  }\n`;\n\nHero.Heading = styled.h2`\n  color: ${Theme.Color.Primary};\n\n  span {\n    color: ${Theme.Color.Nova};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <TeamBuildingHero /> section:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport SplitHero from 'components/library/Hero/SplitHero';\n\n// Styles\nimport { Hero } from './styles.scss';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.White,\n  bgMatch: 'team-containers.jpg',\n  color: Theme.Color.Primary,\n  playButton: true,\n  playButtonBg: Theme.Color.Ocean,\n  gear: false,\n  reversed: true,\n  wideImage: true,\n  subNavColor: Theme.Color.Nova,\n  arrowColor: Theme.Color.Nova,\n};\n\nconst TeamBuildingHero = () => {\n  return (\n    <SplitHero\n      {...HeroProps}\n      subNav={[\n        { label: 'team building', active: true, link: '/team-building' },\n        { label: 'organizations', link: '/team-building/organizations' },\n        { label: 'sports teams', link: '/team-building/sports-teams' },\n        { label: 'non-profits', link: '/team-building/non-profits' },\n      ]}\n    >\n      <h2>Teams Come Together by Playing Well</h2>\n      <h6 className=\"txt-clr-dino\">\n        We believe that play reveals who you are, and who you are inspires your\n        work.\n      </h6>\n      <Btn\n        Label=\"Get in Touch\"\n        BgColor={Theme.Color.Nova}\n        TextColor={Theme.Color.White}\n        Size=\"large\"\n        Destination=\"/contact\"\n      />\n    </SplitHero>\n  );\n};\n\nexport default TeamBuildingHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <TeamBuildingCulture /> section:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport SplitSection from 'components/library/Section/SplitSection';\nimport Btn from 'components/library/Btn';\nimport Block from 'components/library/Block';\n\n// Styles\n// import { Container } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst TeamBuildingCulture = () => {\n  return (\n    <>\n      <SplitSection Flex=\"row-reverse\">\n        <Block\n          Style=\"centered\"\n          BgColor={Theme.Color.White}\n          BgMatch=\"adults-outdoor.jpg\"\n          BgAlt=\"Our Awesome Alt Tag\"\n          Width={0.5}\n          JustifyContent=\"center\"\n        />\n        <Block\n          Padding={[2, 2, 2, 2]}\n          Width={0.5}\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          <Text as=\"h6\" color=\"Galaxy\">\n            Establishing a culture of play\n          </Text>\n          <Text as=\"h2\" color=\"Sunset\">\n            Solve Problems and Explore\n          </Text>{' '}\n          <Text as=\"p\" className=\"p-lg\" color=\"Galaxy\">\n            There was a time when our play was our work. Remember when you were\n            a kid, and your imagination had no limits? Through play, you\n            expressed your creativity, solved problems, and explored the world.\n          </Text>\n          <Text as=\"p\" className=\"p-lg\" color=\"Galaxy\">\n            We believe that establishing a culture of play helps create that\n            environment. In our experience, organizations that play well create\n            the conditions for exploration, unconventional thinking, and\n            innovation. That culture of play allows for big risks and also\n            failure, as resiliency is a crucial part of the journey towards\n            success.\n          </Text>\n        </Block>\n      </SplitSection>\n    </>\n  );\n};\n\nexport default TeamBuildingCulture;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <TeamBuildingSplitLinks /> section:\n// todo: whats new link slug\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Section from 'components/library/Elements/Section';\nimport SplitLinks, { SplitLink } from 'components/library/SplitLinks';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst TeamBuildingSplitLinks = ({\n  pageContext,\n  themeProps,\n  stateName,\n  countyName,\n  costCodeName,\n}) => {\n  // // Build our slugified strings for pretty URLs.\n  // let stateSlug = slugify(stateName);\n  // let countySlug = slugify(countyName);\n  // let costCodeSlug = slugify(costCodeName);\n  // let programSlug = slugify(pageContext.course_type_name);\n\n  // // Our pretty URL\n  // let programsLink = `/programs/${stateSlug}/${costCodeSlug}/${countySlug}`;\n  // let locationLink = `/locations/${stateSlug}/${costCodeSlug}/${countySlug}`;\n\n  // // Check our County names if they contain 'County'\n  // const countyClean = countyName => {\n  //   if (\n  //     countyName.toLowerCase().includes('county') ||\n  //     countyName.toLowerCase().includes('district')\n  //   ) {\n  //     return countyName;\n  //   } else {\n  //     return countyName + ' County';\n  //   }\n  // };\n\n  // const countyStateString = costCodeName\n  //   ? costCodeName + ', ' + pageContext.locationMeta.state.name\n  //   : stateName;\n\n  return (\n    <Section bg={themeProps.BgColor} pb={0}>\n      <SplitLinks>\n        <SplitLink\n          title=\"Adults need purposeful play too\"\n          message=\"View our team building opportunites\"\n          // message={'Keep exploring programs in ' + countyStateString + '.'}\n          to={'/'}\n          themeProps={themeProps}\n          first\n        />\n        <SplitLink\n          title=\"Need help with a special event?\"\n          message=\"Learn about our partnerships\"\n          to={'/'}\n          themeProps={themeProps}\n          last\n        />\n      </SplitLinks>\n    </Section>\n  );\n};\n\nexport default TeamBuildingSplitLinks;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Index.js:\n// This is the landing page of the who section of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\nimport CenterSlider from 'components/library/Section/CenterSlider';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport Marquee from 'components/library/Section/Marquee';\nimport CurveAndAngle from 'components/library/Section/CurveAndAngle';\nimport { FooterCurveSlice } from 'components/library/BackgroundSlice/FooterCurveSlice';\nimport { FooterAngleSlice } from 'components/library/BackgroundSlice/FooterAngleSlice';\nimport ImgMatch from 'components/core/ImgMatch';\nimport LegoList from 'components/library/Section/LegoList';\nimport TextWithManyImages from 'components/library/Section/TextWithManyImages';\n\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\n\n// Sections\nimport TeamBuildingHero from 'sections/TeamBuildingHero';\nimport TeamBuildingCulture from 'sections/TeamBuildingCulture';\nimport TeamBuildingSplitLinks from 'sections/TeamBuildingSplitLinks';\nimport AfterSchoolContact from 'sections/AfterSchoolContact';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.White,\n  color: Theme.Color.Primary,\n  playButton: true,\n  playButtonBg: Theme.Color.Ocean,\n  gear: false,\n  reversed: true,\n  subNavColor: Theme.Color.Nova,\n  arrowColor: Theme.Color.Nova,\n};\n\nconst ThemeProps = {\n  BgColor: Theme.Color.Ocean,\n  PrimaryColor: Theme.Color.Primary,\n  SecondaryColor: Theme.Color.Dino,\n  TertiaryColor: Theme.Color.White,\n};\n\n// Data\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const AbsoluteDecor = styled.div`\n  position: absolute;\n  width: 100%;\n  z-index: 1;\n  height: 0 !important;\n  padding-top: 100%;\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n  max-width: ${Root.Site.Width};\n  @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n    padding-top: ${Root.Site.Width};\n    margin: 0 calc(50vw - calc(${Root.Site.Width} / 2));\n  }\n\n  .decor-container {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    z-index: 10;\n    height: auto;\n    \n\n    .ico {\n      width: 100%;\n      height: auto;\n    }\n\n\n    &.absolute-sailboat {\n      width: 45%;\n      left: auto;\n      right: -12%;\n      bottom: 3%;\n    }\n  }\n`;\n\nexport const OverflowHidden = styled.div`\n  overflow: hidden;\n`;\n\n// Render Page\nconst TeamBuilding = () => {\n  return (\n    <Layout {...ThemeProps}>\n      <TeamBuildingHero />\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        BorderTop={Theme.Color.Clay}\n      >\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Testimonials\"\n            Class=\"h2\"\n            TextColor={Theme.Color.Eggplant}\n          />\n          <CenterSlider\n            testimonials={[\n              {\n                name: 'Alisha',\n                quote:\n                  'I like Play-Well’s core belief in personal authenticity. There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'random-1.jpg',\n              },\n              {\n                name: 'Binh',\n                quote:\n                  'There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'random-2.jpg',\n              },\n              {\n                name: 'Kylie',\n                quote:\n                  'Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'random-3.jpg',\n              },\n              {\n                name: 'Matt',\n                quote:\n                  'I like Play-Well’s core belief in personal authenticity. There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'random-4.jpg',\n              },\n              {\n                name: 'Pete',\n                quote:\n                  'There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'random-5.jpg',\n              },\n              {\n                name: 'Meeko',\n                quote:\n                  'There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'random-6.jpg',\n              },\n            ]}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <TeamBuildingCulture />\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Sunset}\n        BorderTop={Theme.Color.Clay}\n      >\n        <BasicInner>\n          <CenteredTitle\n            Title={null}\n            Class=\"h3\"\n            TextColor={Theme.Color.Sunset}\n          />\n        </BasicInner>\n        <Marquee\n          images={[\n            'visa.png',\n            'microsoft.png',\n            'clorox.png',\n            'google.png',\n            'pixar.jpeg',\n          ]}\n          SquareFormat\n          Shadow\n        />\n      </BasicSection>\n\n      <OverflowHidden>\n        <BasicSection \n          noPaddingBottom \n          BgColor={Theme.Color.Background} \n          TextColor={Theme.Color.Eggplant}\n        >\n          <BasicInner>\n            <CenteredTitle Title=\"Well Supplied Fun\" Class=\"headline\" />\n            <Box textAlign=\"center\" width={'90%'} m={'0 auto'}>\n              <h3>\n                We bring tens of thousands of pieces of LEGO&reg;, a customized\n                organizational play challenge that fits your organization's\n                experienced organizational play facilitators who are all about all\n                all about play.\n              </h3>\n              <Text as=\"p\" className=\"h3\" fontWeight={600}>\n                You bring the people. Together, we solve problems through play.\n              </Text>\n            </Box>\n          </BasicInner>\n          <CurveAndAngle\n            AngleColor={Theme.Color.White}\n            CurveColor={Theme.Color.Ocean}\n          >\n            <AbsoluteDecor>\n              <div className=\"decor-container absolute-sailboat\">\n                <ImgMatch src=\"sailboat.png\" />\n              </div>\n            </AbsoluteDecor>\n          </CurveAndAngle>\n        </BasicSection>\n      </OverflowHidden>\n\n      <BasicSection \n        noPaddingTop\n        BgColor={Theme.Color.White} \n        TextColor={Theme.Color.Dino}\n      >\n        <BasicInner>\n          <CenteredTitle Title=\"The Outcome\" Class=\"headline\" />\n          <Box pt={Root.Size}>\n            <LegoList\n              blocks={[\n                {\n                  title: 'Creative Collaboration',\n                  text:\n                    'A greater sense of understanding and connection between your staff, as they will now know how others play, and in turn, how they work best.',\n                  legoColor: 'orange',\n                },\n                {\n                  title: 'New Perspectives',\n                  text:\n                    'A willingness to tackle problems from a play perspective, embracing failure as part of the process of finding the solution.',\n                  legoColor: 'purple',\n                },\n                {\n                  title: 'Staff Morale',\n                  text:\n                    'A rejuvenated staff who rediscovers what they find fun about their job and their organization.',\n                  legoColor: 'blue',\n                },\n              ]}\n            />\n          </Box>\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Blush}\n        TextColor={Theme.Color.Dino}\n        noPaddingTop\n        noPaddingBottom\n      >\n          <TextWithManyImages\n            Reversed\n            Text=\"Our goal is to remind your staff that work can be fun and challenging at the same time.\"\n            Images={['kids-1.jpg', 'lego-head.png', 'boy-3.png']}\n          />\n      </BasicSection>\n\n      <TeamBuildingSplitLinks themeProps={ThemeProps} />\n    </Layout>\n  );\n};\n\nexport default TeamBuilding;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImagesStyle = styled.div`\n  position: relative;\n\n  .images, .text {\n    width: 50%;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      width: 100%;\n    }\n  }\n\n  .images {\n    margin-left: ${props => (props.Reversed ? '0' : '50%')};\n    display: flex;\n    flex-direction: row;\n    max-height: calc(${\n      Theme.Base.Grid.SiteWidth\n    } * .3333); //this is the height of the large image at site width\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      align-items: stretch;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-left: 0;\n      max-height: none;\n    }\n\n    .column {\n      padding-top: 66.66%;\n      width: 33.33%;\n      position: relative;\n      @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n        width: calc(${\n          Theme.Base.Grid.SiteWidth\n        } * .16666); //this is the width of the small images at site width\n        padding-top: calc(${Theme.Base.Grid.SiteWidth} * .3333);\n      }\n\n      .gatsby-image-wrapper {\n        position: absolute !important;\n        top: 0;\n        left: 4px;\n        width: calc(100% - 4px);\n        height: calc(50% - 2px);\n\n        &:last-of-type {\n          top: calc(50% + 2px);\n        }\n      }\n    }\n\n    > .gatsby-image-wrapper {\n      width: 66.66%;\n      padding-top: 66.66%;\n      height: 0 !important;\n      @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n        width: auto;\n        flex: 100;\n        padding-top: 0;\n        height: auto !important;\n      }\n    }\n  }\n\n  .basic-inner {\n    height: 100%;\n    position: absolute;\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      left: calc(50vw - (${Theme.Base.Grid.SiteWidth} / 2));\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      position: relative;\n    }\n\n    .text {\n      font-weight: 700;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      transform: translateX(${props => (props.Reversed ? '100%' : '0')});\n      padding-right: calc(${Root.Size} * ${props =>\n         props.Reversed ? '0' : '1'});\n      padding-left: calc(${Root.Size} * ${props =>\n         props.Reversed ? '1' : '0'});\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        padding-right: calc(${Root.Size} ${props =>\n         props.Reversed ? '* 0' : '/ 2'});\n        padding-left: calc(${Root.Size} ${props =>\n         props.Reversed ? '/ 2' : '* 0'});\n\n        &.h4 {\n          font-size: 1.75rem;\n        }\n      }\n\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: calc(${Root.Size} * 2) 0;\n        transform: translateX(0);\n      }\n    }\n  }\n\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Many Images Section Component:\n// This is a section for two half width components, one of three square\n// imaged and the other of text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport { TextWithManyImagesStyle } from './styles.scss';\nimport { BasicInner } from 'components/library/Section/BasicSection';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImages = ({ Images, Text, Reversed }) => (\n         <TextWithManyImagesStyle Reversed={Reversed}>\n           <BasicInner>\n             <div className=\"text h4\">{Text}</div>\n           </BasicInner>\n           <div className=\"images\">\n             <ImgMatch src={Images[0]} />\n             <div className=\"column\">\n               <ImgMatch src={Images[1]} />\n               <ImgMatch src={Images[2]} />\n             </div>\n           </div>\n         </TextWithManyImagesStyle>\n       );\n\nexport default TextWithManyImages;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AfterSchoolContact /> section:\n// todo: form validation\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\nimport ContactForm from 'components/library/Forms/ContactForm';\n\n// Styles\n// import {  } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AfterSchoolContact = () => {\n  return (\n    <Section bg={Theme.Color.Background}>\n      <ContactForm\n        formName=\"after-school-contact\"\n        title=\"Bring our programs to your school\"\n        footnote=\"Once you've submitted your request, we will respond to your inquiry by email.\"\n      />\n    </Section>\n  );\n};\n\nexport default AfterSchoolContact;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props =>\n    props.BgLinear\n      ? `\n    background: linear-gradient( to top, ` +\n        props.BgLinear +\n        ` 75%, ${Theme.Color.Background} 75% );\n  `\n      : null};\n\n  .slick-slider {\n    ${props =>\n      props.Shadow\n        ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(\n          Theme.Color.Eggplant,\n          0.2\n        )});\n      }\n    `\n        : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props =>\n          props.SquareFormat\n            ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        `\n            : `\n          padding-top: 140%;\n        `};\n\n        img {\n          ${props =>\n            props.SquareFormat\n              ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          `\n              : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Md +\n            (Base.Media.Width.Lg - Base.Media.Width.Md) / 2,\n          settings: {\n            slidesToShow: 3,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Sm +\n            (Base.Media.Width.Md - Base.Media.Width.Sm) / 2,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle SquareFormat={SquareFormat} Shadow={Shadow} BgLinear={BgLinear}>\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  flex-wrap: wrap;\n  justify-content: center;\n  position: relative;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-wrap: nowrap;\n  }\n\n  .h1,\n  .h2 {\n    font-weight: 600;\n    padding-bottom: calc(${Root.Size} / 3.5);\n  }\n\n  p {\n    font-weight: 500;\n  }\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      width: 100%;\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        ${props =>\n          props.Flex\n            ? null\n            : `\n          padding-left: 95px;\n          padding-right: 95px;\n        `};\n      }\n\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        ${props =>\n          props.Flex\n            ? null\n            : `\n          padding-left: 45px;\n          padding-right: 45px;\n        `};\n      }\n\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        ${props =>\n          props.Flex\n            ? null\n            : `\n          padding-left: 25px;\n          padding-right: 25px;\n        `};\n      }\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        width: ${props =>\n          props.Flex\n            ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n            : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n        /* Add left padding to first block if it's a text\n        block depending on it's flex property: */\n        ${props =>\n          props.Flex\n            ? null\n            : 'padding-left: calc(' +\n              Root.Grid.Gutter.Left +\n              ' + ' +\n              Root.Size +\n              ')'}\n      }\n    }\n\n    &:last-child {\n      width: 100%;\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        ${props =>\n          !props.Flex\n            ? null\n            : `\n          padding-left: 95px;\n          padding-right: 95px;\n        `};\n      }\n\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        ${props =>\n          !props.Flex\n            ? null\n            : `\n          padding-left: 45px;\n          padding-right: 45px;\n        `};\n      }\n\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        ${props =>\n          !props.Flex\n            ? null\n            : `\n          padding-left: 25px;\n          padding-right: 25px;\n        `};\n      }\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        width: ${props =>\n          props.Flex\n            ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n            : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n        /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n        ${props =>\n          props.Flex\n            ? null\n            : 'padding-left: calc(' +\n              Root.Grid.Gutter.Left +\n              ' + ' +\n              Root.Size +\n              ')'}\n      }\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        max-width: none;\n      }\n\n      p {\n        @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n          max-width: none;\n        }\n      }\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 100%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CenterSliderStyle = styled.div`\n  color: ${p => p.Color};\n\n  .slick-slider {\n    padding: 0 15%;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      padding: 0 ${Root.Size};\n    }\n\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      padding: 0 !important;\n    }\n\n    &:first-of-type {\n      padding: 0 10%;\n\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        margin-top: calc(${Theme.Base.Size.Lg} / 2);\n      }\n\n      .slick-slide {\n        transition-duration: 0.25s;\n\n        &.slick-active {\n          opacity: 0.4;\n\n          &:hover {\n            opacity: 1;\n            filter: drop-shadow(\n              0px 5px 12px ${hexToRGB(Theme.Color.Eggplant, 0.3)}\n            );\n            cursor: pointer;\n          }\n        }\n\n        &.slick-center {\n          opacity: 1;\n          filter: drop-shadow(\n            0px 5px 12px ${hexToRGB(Theme.Color.Eggplant, 0.3)}\n          );\n        }\n      }\n    }\n\n    .nav-item {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      padding: calc(${Theme.Base.Size.Lg} / 2) 15%;\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} * 20);\n        height: 0;\n        padding-top: 100%;\n      }\n    }\n\n    .slick-arrow {\n      position: absolute;\n      top: 50%;\n      left: auto;\n      right: 0;\n      border-radius: 50%;\n      height: calc(${Root.Size} / 1.1);\n      width: calc(${Root.Size} / 1.1);\n      transition-duration: 0.5s;\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        top: calc(${Root.Size} / -3.5);\n      }\n\n      &:hover {\n        background-color: ${p => hexToRGB(p.Color, 0.1)};\n      }\n\n      &:before {\n        height: calc(${Root.Size} / 4);\n        width: calc(${Root.Size} / 4);\n        border: 1.5px solid ${p => p.Color};\n        content: '';\n        position: absolute;\n        top: calc(${Root.Size} / 3.5);\n        left: calc(${Root.Size} / 2.5);\n        transform: rotate(45deg);\n      }\n\n      &.slick-prev {\n        left: 0;\n        right: auto;\n        &:before {\n          border-right-color: transparent;\n          border-top-color: transparent;\n        }\n        @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n          left: calc(50% - calc(${Root.Size} * 1.5));\n        }\n      }\n\n      &.slick-next {\n        &:before {\n          left: calc(${Root.Size} / 4.5);\n          border-left-color: transparent;\n          border-bottom-color: transparent;\n        }\n        @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n          left: calc(50% + (${Root.Size} / 2));\n        }\n      }\n    }\n\n    .item {\n      text-align: center;\n\n      div.p-lg {\n        font-weight: 700;\n        padding-top: calc(${Root.Size} / 1.5);\n      }\n\n      p {\n        padding-bottom: 0;\n      }\n\n      .quote {\n        position: relative;\n        padding: calc(${Root.Size} / 3);\n\n        &:before,\n        &:after {\n          position: absolute;\n          font-size: 3.25rem;\n          font-family: 'Brown';\n        }\n\n        &:before {\n          left: 0;\n          top: calc(${Root.Size} / -4);\n          content: '”';\n        }\n\n        &:after {\n          content: '“';\n          right: 0;\n          bottom: calc(${Root.Size} / -1.5);\n        }\n      }\n    }\n  }\n`;\n\nexport default CenterSliderStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Center.js: using slick\n//\n// />\n\n// Core\nimport React, { Component } from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport CenterSliderStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass AsNavFor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nav1: null,\n      nav2: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      nav1: this.slider1,\n      nav2: this.slider2\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.props.noNavSlider && (\n          <Slider\n            asNavFor={this.state.nav1}\n            ref={slider => (this.slider2 = slider)}\n            slidesToShow={5}\n            slidesToScroll={1}\n            focusOnSelect={true}\n            centerPadding={0}\n            centerMode={true}\n          >\n            {this.props.slides.map((testimonial, index) => {\n              return (\n                <div className=\"nav-item\" key={index}>\n                  <ImgMatch src={testimonial.image} />\n                </div>\n              );\n            })}\n          </Slider>\n        )}\n        <Slider\n          asNavFor={this.state.nav2}\n          ref={slider => (this.slider1 = slider)}\n          arrows={this.props.noNavSlider}\n          slidesToShow={1}\n          slidesToScroll={1}\n          fade={true}\n        >\n          {this.props.slides.map((testimonial, index) => {\n            return (\n              <div className=\"item\" key={index}>\n                <p className=\"p-lg quote\">{testimonial.quote}</p>\n                <div className=\"p-lg\">{testimonial.name}</div>\n                <p>{testimonial.title}</p>\n              </div>\n            );\n          })}\n        </Slider>\n      </div>\n    );\n  }\n}\n\n\n\n// The SubLevel Page Itself\nconst CenterSlider = ({ testimonials, Color, noNavSlider }) => (\n  <CenterSliderStyle Color={Color}>\n    <AsNavFor slides={testimonials} noNavSlider={noNavSlider}/>\n  </CenterSliderStyle>\n);\n\nCenterSlider.defaultProps = {\n  Color: Theme.Color.Primary,\n};\n\nexport default CenterSlider;\n"],"sourceRoot":""}