{"version":3,"sources":["webpack:///./src/sections/SpecialEventsSplitLinks/SpecialEventsSplitLinks.js","webpack:///./src/pages/parties/special-events.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js","webpack:///./src/components/library/Forms/ContactForm/styles.scss.js","webpack:///./src/components/library/Forms/ContactForm/ContactForm.js","webpack:///./src/components/library/Section/ImageWithTextBlock/styles.scss.js","webpack:///./src/components/library/Section/ImageWithTextBlock/index.js"],"names":["HostProgramSplitLinks","pageContext","themeProps","stateName","countyName","costCodeName","Section","bg","BgColor","pb","SplitLinks","title","message","to","first","last","HeroProps","Theme","Color","Ocean","color","White","playButton","playButtonBg","Nova","gear","gearFill","Dino","subNavColor","ThemeProps","Background","PrimaryColor","SecondaryColor","TertiaryColor","Primary","SpecialEventsPage","Layout","SplitHero","subNav","label","link","active","pr","Btn","Label","TextColor","Size","BasicSection","CenteredTitle","Title","Class","PaddingBottom","Root","Sunset","noPaddingTop","noPaddingBottom","noPaddingLeft","noPaddingRight","ImageWithTextBlock","Image","Header","Paragraph","reversedOrder","py","Marquee","images","SquareFormat","Shadow","textAlign","ContactForm","formName","footnote","SpecialEventsSplitLinks","MarqueeStyle","styled","div","props","BgLinear","hexToRGB","Eggplant","Base","Media","Width","Md","MarqueeSlider","render","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Lg","Sm","Helmet","rel","type","href","ref","h","slider","this","children","React","Component","map","image","index","className","key","ImgMatch","src","Form","form","Transition","String","Blush","name","method","data-netlify","data-netlify-honeypot","value","width","htmlFor","aria-label","id","placeholder","required","rows","pattern","maxLength","Name","Destination","defaultProps","ImageWithTextBlockStyles","BlockNumber","Number","ButtonText","ButtonDest"],"mappings":"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","file":"component---src-pages-parties-special-events-js-e50f110e689cb850eccf.js","sourcesContent":["// <CourseSplitLinks /> section:\n// todo: whats new link slug\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Section from 'components/library/Elements/Section';\nimport SplitLinks, { SplitLink } from 'components/library/SplitLinks';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst HostProgramSplitLinks = ({\n  pageContext,\n  themeProps,\n  stateName,\n  countyName,\n  costCodeName,\n}) => {\n  // // Build our slugified strings for pretty URLs.\n  // let stateSlug = slugify(stateName);\n  // let countySlug = slugify(countyName);\n  // let costCodeSlug = slugify(costCodeName);\n  // let programSlug = slugify(pageContext.course_type_name);\n\n  // // Our pretty URL\n  // let programsLink = `/programs/${stateSlug}/${costCodeSlug}/${countySlug}`;\n  // let locationLink = `/locations/${stateSlug}/${costCodeSlug}/${countySlug}`;\n\n  // // Check our County names if they contain 'County'\n  // const countyClean = countyName => {\n  //   if (\n  //     countyName.toLowerCase().includes('county') ||\n  //     countyName.toLowerCase().includes('district')\n  //   ) {\n  //     return countyName;\n  //   } else {\n  //     return countyName + ' County';\n  //   }\n  // };\n\n  // const countyStateString = costCodeName\n  //   ? costCodeName + ', ' + pageContext.locationMeta.state.name\n  //   : stateName;\n\n  return (\n    <Section bg={themeProps.BgColor} pb={0}>\n      <SplitLinks>\n        <SplitLink\n          title=\"Adults need purposeful play too\"\n          message=\"View our team building opportunities\"\n          // message={'Keep exploring programs in ' + countyStateString + '.'}\n          to=\"/\"\n          themeProps={themeProps}\n          first\n        />\n        <SplitLink\n          title=\"Want to plan birthday?\"\n          message=\"Learn about our birthday parties\"\n          to=\"/\"\n          themeProps={themeProps}\n          last\n        />\n      </SplitLinks>\n    </Section>\n  );\n};\n\nexport default HostProgramSplitLinks;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// special-events.js:\n// This is the birthday parties page of parties\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport Btn from 'components/library/Btn';\nimport Marquee from 'components/library/Section/Marquee';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport ImageWithTextBlock from 'components/library/Section/ImageWithTextBlock';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\nimport { Box, Text } from 'components/library/Elements';\nimport SplitHero from 'components/library/Hero/SplitHero';\nimport ContactForm from 'components/library/Forms/ContactForm';\n\n// Sections\nimport SpecialEventsSplitLinks from 'sections/SpecialEventsSplitLinks';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Data\n// import ImgPlaceholder from './assets/placeholder.jpg';\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.Ocean,\n  color: Theme.Color.White,\n  playButton: false,\n  playButtonBg: Theme.Color.Nova,\n  gear: true,\n  gearFill: Theme.Color.Dino,\n  subNavColor: Theme.Color.White,\n};\n\nconst ThemeProps = {\n  BgColor: Theme.Color.Background,\n  PrimaryColor: Theme.Color.White,\n  SecondaryColor: Theme.Color.Dino,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst SpecialEventsPage = () => {\n  return (\n    <Layout {...ThemeProps}>\n      <SplitHero\n        {...HeroProps}\n        subNav={[\n          { label: 'birthday parties', link: '/parties/birthday-parties' },\n          {\n            label: 'special events',\n            active: true,\n            link: '/parties/special-events',\n          },\n        ]}\n      >\n        <Box pr={[4, 8, 14]}>\n          <h2>Helping Kids and Adults Understand Through Play</h2>\n          <h6>\n            For the past 10 years, we have introduced play into Fortune 500\n            Companies Take Your Kids to Work Days.\n          </h6>\n          <Btn\n            Label=\"Request a Special Event\"\n            BgColor={Theme.Color.Nova}\n            TextColor={Theme.Color.White}\n            Size=\"large\"\n          />\n        </Box>\n      </SplitHero>\n\n      <BasicSection BgColor={Theme.Color.White}>\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Special Events\"\n            Class=\"headline\"\n            PaddingBottom={`calc(${Root.Size} / 3.5)`}\n          ></CenteredTitle>\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Sunset}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <BasicInner noPaddingLeft noPaddingRight noPaddingBottom>\n          <ImageWithTextBlock\n            Image=\"kids-adult-playing.jpg\"\n            Header=\"Play at work\"\n            Paragraph=\"We have run our LEGO-Inspired STEM Activations for companies around the country, giving kids a chance to experience a fun-filled day at their parents' workplace.\"\n          />\n          <ImageWithTextBlock\n            reversedOrder\n            Image=\"kids-lego-boxes.jpg\"\n            Header=\"Engineers at heart\"\n            Paragraph=\"We are play engineers at heart, so we love helping kids to understand through play what their parents do at work, or enabling families to build something out of LEGO® materials that they once thought impossible.\"\n          ></ImageWithTextBlock>\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Sunset}\n      >\n        <BasicInner>\n          <Box py={2}>\n            <CenteredTitle\n              Title=\"Our Special Events Partners\"\n              Class=\"h3\"\n              TextColor={Theme.Color.Sunset}\n            />\n          </Box>\n        </BasicInner>\n        <Marquee\n          images={[\n            'visa.png',\n            'microsoft.png',\n            'clorox.png',\n            'google.png',\n            'pixar.jpeg',\n          ]}\n          SquareFormat\n          Shadow\n        />\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Dino}\n      >\n        <BasicInner>\n          <Box textAlign=\"center\">\n            <ContactForm\n              formName=\"special-events-contact\"\n              title=\"Want us to participate in your next special event?\"\n              footnote=\"Once you've submitted your request, you should receive an email with more info in 1-2 minutes. If you don't see it in your inbox, please check your spam promotions or spam folder.\"\n            />\n          </Box>\n        </BasicInner>\n      </BasicSection>\n\n      <SpecialEventsSplitLinks themeProps={ThemeProps} />\n    </Layout>\n  );\n};\n\nexport default SpecialEventsPage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props =>\n    props.BgLinear\n      ? `\n    background: linear-gradient( to top, ` +\n        props.BgLinear +\n        ` 75%, ${Theme.Color.Background} 75% );\n  `\n      : null};\n\n  .slick-slider {\n    ${props =>\n      props.Shadow\n        ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(\n          Theme.Color.Eggplant,\n          0.2\n        )});\n      }\n    `\n        : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props =>\n          props.SquareFormat\n            ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        `\n            : `\n          padding-top: 140%;\n        `};\n\n        img {\n          ${props =>\n            props.SquareFormat\n              ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          `\n              : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Md +\n            (Base.Media.Width.Lg - Base.Media.Width.Md) / 2,\n          settings: {\n            slidesToShow: 3,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Sm +\n            (Base.Media.Width.Md - Base.Media.Width.Sm) / 2,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle SquareFormat={SquareFormat} Shadow={Shadow} BgLinear={BgLinear}>\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;\n","// ContactForm Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 100%;\n  max-width: calc(${Root.Size} * 12);\n\n  .radio-group {\n    label {\n      font-weight: 500;\n      display: block;\n      position: relative;\n      padding-left: 35px;\n      margin-bottom: 12px;\n      cursor: pointer;\n      user-select: none;\n      transition: ${Theme.Base.Transition.String};\n\n      /* On mouse-over, add a grey background color */\n      &:hover input ~ .checkmark {\n        background-color: ${Theme.Color.Sunset};\n      }\n\n      input {\n        /* position: absolute;\n        opacity: 0;\n        cursor: pointer;\n        height: 0;\n        width: 0; */\n\n        &:checked ~ .checkmark {\n          background-color: ${Theme.Color.Blush};\n\n          /* Show the indicator (dot/circle) when checked */\n          &:after {\n            display: block;\n          }\n        }\n      }\n\n      /* Create a custom radio button */\n      .checkmark {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 25px;\n        width: 25px;\n        background-color: ${Theme.Color.Blush};\n        border-radius: 50%;\n\n        /* Create the indicator (the dot/circle - hidden when not checked) */\n        &:after {\n          content: '';\n          position: absolute;\n          display: none;\n        }\n      }\n\n      /* Style the indicator (dot/circle) */\n      .checkmark:after {\n        top: 6px;\n        left: 6px;\n        width: 13px;\n        height: 13px;\n        border-radius: 50%;\n        background: ${Theme.Color.Sunset};\n      }\n    }\n  }\n\n  legend {\n    color: ${Theme.Color.Dino};\n    font-weight: 600;\n    padding-bottom: calc(${Root.Size} * 1);\n    width: 100%;\n  }\n\n  fieldset {\n    border: none;\n    margin: 0 auto;\n    width: 100%;\n    max-width: calc(${Root.Size} * 11);\n\n    label {\n      display: none;\n    }\n\n    input,\n    textarea,\n    select {\n      background: ${Theme.Color.Blush};\n      color: ${Theme.Color.Primary};\n      font-size: 1.2rem;\n      font-weight: 500;\n      line-height: 2.5;\n      margin: 0;\n      padding: 0;\n      width: 100%;\n      padding: 0 calc(${Root.Size} / 2.5);\n\n      &:focus {\n        box-shadow: 0 0 20px 3px ${Theme.Color.Sunset};\n        box-shadow: 0 0 0 3px -moz-mac-focusring;\n        outline: none;\n      }\n\n      &::placeholder {\n        color: ${hexToRGB(Theme.Color.Primary, 0.4)};\n      }\n    }\n\n    input {\n      border-radius: 999px;\n      border: none;\n    }\n\n    textarea {\n      border-radius: 7px;\n      border: none;\n    }\n\n    select {\n      appearance: none;\n      box-sizing: border-box;\n      border: none;\n      border-radius: 999px;\n      cursor: pointer;\n      display: block;\n      margin: 0;\n      width: 100%;\n      max-width: 100%;\n      transition: ${Theme.Base.Transition.String};\n\n      option:first {\n        color: ${hexToRGB(Theme.Color.Primary, 0.4)};\n      }\n\n      &::-ms-expand {\n        display: none;\n      }\n\n      &:focus {\n        box-shadow: 0 0 20px 3px ${Theme.Color.Sunset};\n        box-shadow: 0 0 0 3px -moz-mac-focusring;\n        outline: none;\n      }\n\n      option {\n        font-weight: normal;\n      }\n    }\n\n    div,\n    .form-group {\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      padding-bottom: calc(${Root.Size} / 3);\n\n      &__box {\n        padding-bottom: calc(${Root.Size} / 3);\n\n        &:last-child {\n          padding-bottom: 0;\n          padding-left: 0;\n\n          @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n            padding-left: calc(${Root.Size} / 3);\n          }\n        }\n\n        @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n          padding-bottom: 0;\n        }\n\n        &--select {\n          position: relative;\n          display: flex;\n          align-items: center;\n\n          .carat {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-left: 1px solid ${hexToRGB(Theme.Color.Dino, 0.2)};\n            line-height: 1.6;\n            padding-left: calc(${Root.Size} / 6);\n            position: absolute;\n            right: calc(${Root.Size} / 4);\n\n            .ico-carat {\n              position: relative;\n              transform: rotate(90deg) scale(0.6);\n              transform-origin: center center;\n\n              polygon,\n              svg,\n              g {\n                fill: ${Theme.Color.Primary};\n              }\n            }\n          }\n        }\n      }\n\n      .form-heading {\n        display: block;\n        font-weight: 500;\n        padding-bottom: calc(${Root.Size} / 3.5);\n        text-align: left;\n        width: 100%;\n      }\n    }\n\n    .footnote {\n      padding-top: calc(${Root.Size} / 2);\n      padding-bottom: 0;\n\n      p {\n        color: ${Theme.Color.Dino};\n        padding: 0 5%;\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <ContactForm /> component:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Styles\nimport { Form } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ContactForm = ({ formName, title, footnote }) => (\n  <Form\n    name={formName}\n    method=\"post\"\n    data-netlify=\"true\"\n    data-netlify-honeypot=\"bot-field\"\n  >\n    <input type=\"hidden\" name=\"bot-field\" />\n    <input\n      type=\"hidden\"\n      name={formName}\n      value={formName}\n    />\n    <legend className=\"h3\">{title}</legend>\n    <fieldset>\n      <div className=\"form-group\">\n        <Box width={[1, 1 / 2, 4 / 10]} className=\"form-group__box\">\n          <label htmlFor=\"firstName\">\n            First Name:{' '}\n            <abbr title=\"required\" aria-label=\"required\">\n              *\n            </abbr>\n          </label>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            id=\"firstName\"\n            placeholder=\"First Name\"\n            required\n          />\n        </Box>\n\n        <Box width={[1, 1 / 2, 6 / 10]} className=\"form-group__box\">\n          <label htmlFor=\"lastName\">\n            Last Name:{' '}\n            <abbr title=\"required\" aria-label=\"required\">\n              *\n            </abbr>\n          </label>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            id=\"lastName\"\n            placeholder=\"Last name\"\n            required\n          />\n        </Box>\n      </div>\n\n      <div>\n        <label htmlFor=\"school\">School Name:</label>\n        <input\n          type=\"text\"\n          name=\"school\"\n          id=\"school\"\n          placeholder=\"School name\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"comments\">Comments, Questions, etc.: </label>\n        <textarea\n          name=\"comments\"\n          id=\"comments\"\n          rows=\"4\"\n          placeholder=\"Comments, questions, etc.\"\n        />\n      </div>\n\n      <Box width={1}>\n        <label htmlFor=\"email\">\n          Email:\n          <abbr title=\"required\" aria-label=\"required\">\n            *\n          </abbr>\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          placeholder=\"Your email\"\n          required\n        />\n      </Box>\n\n      <div className=\"form-group\">\n        <Box width={[1, 1 / 2, 4 / 10]} className=\"form-group__box\">\n          <label htmlFor=\"phone\">Phone:</label>\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            id=\"phone\"\n            placeholder=\"(___) ___-____\"\n            pattern=\"[0-9]{3} [0-9]{3} [0-9]{4}\"\n            maxLength=\"12\"\n          />\n        </Box>\n\n        <Box\n          width={[1, 1 / 2, 6 / 10]}\n          className=\"form-group__box form-group__box--select\"\n        >\n          <label htmlFor=\"eventType\">Type of Event:</label>\n          <select name=\"eventType\" id=\"eventType\">\n            <option value={null}>Type of Event</option>\n            <option value=\"event\">Event</option>\n            <option value=\"event\">Event</option>\n            <option value=\"event\">Event</option>\n          </select>\n          <span className=\"carat\">\n            <Icon Name=\"carat\" className=\"ico-carat\" />\n          </span>\n        </Box>\n      </div>\n\n      <div className=\"form-group\">\n        <Box width={[1, 1 / 2, 1 / 2]} className=\"form-group__box\">\n          <label htmlFor=\"city\">City:</label>\n          <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"City\" />\n        </Box>\n\n        <Box\n          width={[1, 1 / 2, 1 / 2]}\n          className=\"form-group__box form-group__box--select\"\n        >\n          <label htmlFor=\"state\">State:</label>\n          <select name=\"state\" id=\"state\">\n            <option value={null}>State</option>\n            <option value=\"state\">State</option>\n            <option value=\"state\">State</option>\n            <option value=\"state\">State</option>\n          </select>\n          <span className=\"carat\">\n            <Icon Name=\"carat\" className=\"ico-carat\" />\n          </span>\n        </Box>\n      </div>\n\n      <div className=\"radio-group\">\n        <span className=\"p-lg form-heading\">\n          How would you like us to respond?\n        </span>\n\n        <label htmlFor=\"email-or-phone\">\n          email\n          <input type=\"radio\" name=\"email-or-phone\" value=\"email\" />\n          <span className=\"checkmark\" />\n        </label>\n\n        <span>OR</span>\n\n        <label htmlFor=\"email-or-phone\">\n          phone\n          <input type=\"radio\" name=\"email-or-phone\" value=\"phone\" />\n          <span className=\"checkmark\" />\n        </label>\n      </div>\n\n      <Btn\n        BgColor={Theme.Color.Nova}\n        TextColor={Theme.Color.White}\n        Label=\"Submit Request\"\n        Destination=\"/\"\n        Size=\"large\"\n      />\n\n      <div className=\"footnote\">\n        <p className=\"p-lg\">{footnote}</p>\n      </div>\n    </fieldset>\n  </Form>\n);\n\nContactForm.defaultProps = {};\n\nexport default ContactForm;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlockStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  position: relative;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: column-reverse;\n  }\n\n  .image,\n  .text {\n    flex: 1;\n  }\n\n  .ico-gear {\n    position: absolute;\n    height: 140%;\n    width: 100%;\n    top: -20%;\n    right: -50%;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      height: 130%;\n      top: -15%;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: calc(${Root.Size} * 3);\n      top: auto;\n      bottom: calc(${Root.Size} * -1.5);\n    }\n\n    svg {\n      height: 100%;\n      width: auto;\n      fill: ${Theme.Color.Nova};\n    }\n  }\n\n  .image {\n    margin-right: calc(${Root.Size} / 4);\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: 50vw;\n      max-height: calc(${Root.Size} * 6);\n      margin-right: 0;\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n    }\n  }\n\n  .text {\n    .container {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      padding: ${Root.Size} calc(${Root.Size} * 1.5);\n      max-width: calc(${Root.Size} * 10);\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        padding: calc(${Root.Size} * 0.5);\n      }\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        max-width: none;\n      }\n\n      .h3 {\n        font-weight: 700;\n        padding-bottom: calc(${Root.Size} / 3.5);\n      }\n\n      p {\n        color: ${Theme.Color.Dino};\n      }\n    }\n  }\n\n  ${props =>\n    props.reversedOrder\n      ? `\n        flex-direction: row-reverse;\n        .container {\n          margin: 0 auto;\n        }\n        .image {\n          margin-right: 0;\n          margin-left: calc(${Root.Size} / 4);\n          @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n            margin-left: 0;\n          }\n        }\n    `\n      : null};\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Image Section Block Component:\n// This is a section for two half width components, one of a rectangular\n// image and the other of a number, headline and text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { ImageWithTextBlockStyles, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlock = ({\n  reversedOrder,\n  Image,\n  Number,\n  Header,\n  Paragraph,\n  children,\n  ButtonText,\n  ButtonDest,\n}) => (\n  <ImageWithTextBlockStyles reversedOrder={reversedOrder}>\n    {children}\n    <div className=\"image\">\n      <ImgMatch src={Image} />\n    </div>\n    <div className=\"text\">\n      <div className=\"container\">\n        <BlockNumber className=\"h1\">{Number}</BlockNumber>\n        <div className=\"h3\">{Header}</div>\n        <p className=\"p-lg\">{Paragraph}</p>\n      </div>\n      {/*(ButtonText && ButtonDest) &&\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      */}\n    </div>\n  </ImageWithTextBlockStyles>\n);\n\nexport default ImageWithTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}