{"version":3,"sources":["webpack:///./src/pages/who-we-are/careers.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/components/library/SubNav/styles.scss.js","webpack:///./src/components/library/SubNav/data.js","webpack:///./src/components/library/SubNav/SubNav.js","webpack:///./src/components/library/Section/TextWithManyImages/styles.scss.js","webpack:///./src/components/library/Section/TextWithManyImages/index.js","webpack:///./src/components/library/Elements/Team/styles.scss.js","webpack:///./src/components/library/Elements/Team/index.js","webpack:///./src/components/library/Section/GiantTextBlock/styles.scss.js","webpack:///./src/components/library/Section/GiantTextBlock/index.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js","webpack:///./src/components/library/Section/CenterSlider/styles.scss.js","webpack:///./src/components/library/Section/CenterSlider/index.js"],"names":["HeroProps","bg","Theme","Color","Sky","color","White","playButton","gear","gearFill","Dino","subNavColor","arrowColor","Nova","ThemeProps","BgColor","PrimaryColor","SecondaryColor","Primary","TertiaryColor","WhoCareersPage","subNav","label","link","active","Label","TextColor","Destination","Background","noPaddingTop","noPaddingBottom","images","SquareFormat","Title","Class","Blush","Eggplant","testimonials","name","quote","title","image","Sunset","wideWidth","headerText","topText","giantText","bottomText","buttonText","buttonDest","Shadow","BorderTop","Clay","blocks","text","legoColor","noPaddingRight","Text","Images","pb","message","to","themeProps","first","last","LegoListStyles","styled","div","Base","Media","Width","Md","Root","Size","LegoList","map","block","index","className","key","ImgMatch","src","Name","Container","Box","props","theme","Site","Nav","Flex","Link","a","Font","Header","Transition","String","data","testNav","route","SubNav","width","px","pr","pl","as","activeClassName","defaultProps","TextWithManyImagesStyle","Lg","TextWithManyImages","TeamStyle","Justify","Sm","Team","members","query","render","allDataJson","edges","node","leadership","person","img","alt","mgr_level","GiantTextBlockStyle","Grid","SiteWidth","BlockNumber","GiantTextBlock","Number","children","Btn","MarqueeStyle","BgLinear","hexToRGB","MarqueeSlider","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Helmet","rel","type","href","ref","h","slider","this","React","Component","Marquee","CenterSliderStyle","p","CenterSliderSlider","fade","CenterSlider","testimonial"],"mappings":"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","file":"component---src-pages-who-we-are-careers-js-d2dad9519203c009517f.js","sourcesContent":["// Careers.js:\n// This is careers portion of the who section of the site.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\nimport ImgMatch from 'components/core/ImgMatch';\nimport Section from 'components/library/Elements/Section';\nimport SplitLinks, { SplitLink } from 'components/library/SplitLinks';\nimport Marquee from 'components/library/Section/Marquee';\nimport TextWithManyImages from 'components/library/Section/TextWithManyImages';\nimport Team from 'components/library/Elements/Team';\nimport CenterSlider from 'components/library/Section/CenterSlider';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport GiantTextBlock from 'components/library/Section/GiantTextBlock';\nimport LegoList from 'components/library/Section/LegoList';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\nimport { Box, Flex } from 'components/library/Elements';\nimport SubNav from 'components/library/SubNav';\nimport SplitHero from 'components/library/Hero/SplitHero';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Data\n// import ImgPlaceholder from './assets/placeholder.jpg';\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.Sky,\n  color: Theme.Color.White,\n  playButton: true,\n  gear: true,\n  gearFill: Theme.Color.Dino,\n  subNavColor: Theme.Color.White,\n  arrowColor: Theme.Color.Nova,\n};\n\nconst ThemeProps = {\n  BgColor: Theme.Color.Sky,\n  PrimaryColor: 'unset',\n  SecondaryColor: Theme.Color.Primary,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst WhoCareersPage = () => {\n  return (\n    <Layout {...ThemeProps}>\n      <SplitHero\n        {...HeroProps}\n        subNav={[\n          { label: 'who', link: '/who-we-are/who' },\n          { label: 'why', link: '/who-we-are/why' },\n          { label: 'how', link: '/who-we-are/how' },\n          { label: 'careers', active: true, link: '/who-we-are/careers' },\n        ]}\n      >\n        <h2>Join a Team of creative problem solvers &amp; creators</h2>\n        <h6>We are passionate specialists in STEM Education.</h6>\n        <Btn\n          Label=\"View Listings\"\n          BgColor={Theme.Color.Dino}\n          TextColor={Theme.Color.White}\n          Destination=\"/\"\n        />\n      </SplitHero>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <Marquee\n          images={[\n            'intro-smiles.jpg',\n            'intro-smiles.jpg',\n            'intro-smiles.jpg',\n            'intro-smiles.jpg',\n            'intro-smiles.jpg',\n            'intro-smiles.jpg',\n            'intro-smiles.jpg',\n          ]}\n          SquareFormat\n        />\n      </BasicSection>\n\n      <BasicSection BgColor={Theme.Color.Background}>\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Our Team\"\n            Class=\"headline\"\n            TextColor={Theme.Color.Blush}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection BgColor={Theme.Color.Background} noPaddingTop>\n        <BasicInner>\n          <Team />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Blush}\n        TextColor={Theme.Color.Eggplant}\n      >\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Testimonials\"\n            Class=\"h2\"\n            TextColor={Theme.Color.Eggplant}\n          />\n          <CenterSlider\n            testimonials={[\n              {\n                name: 'Alisha',\n                quote:\n                  'I like Play-Well’s core belief in personal authenticity. There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'intro-smiles.jpg',\n              },\n              {\n                name: 'Binh',\n                quote:\n                  'There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'intro-smiles.jpg',\n              },\n              {\n                name: 'Kylie',\n                quote:\n                  'Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'intro-smiles.jpg',\n              },\n              {\n                name: 'Matt',\n                quote:\n                  'I like Play-Well’s core belief in personal authenticity. There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'intro-smiles.jpg',\n              },\n              {\n                name: 'Pete',\n                quote:\n                  'There is a serious nature to education that can be overwhelming sometimes, causing students to lose track of their childhood and their ability to truly play. Opportunities for unstructured play are being taken away at an alarming rate, so it’s nice to see companies like Play-Well redirect their focus to this critical component of learning and development. I appreciate Tim Bowen’s assertion that working for a good company results in amazing experiences for students. This philosophy leads to successful organizations with each member truly giving their all and their best. I want to be part of such an organization.',\n                title: 'Recent Applicant',\n                image: 'intro-smiles.jpg',\n              },\n            ]}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Sunset}\n      >\n        <BasicInner wideWidth>\n          <GiantTextBlock\n            headerText=\"Core Values\"\n            topText=\"We believe in a culture of\"\n            giantText=\"Inquisitiveness Self Reliance &amp; Self Confidence\"\n            bottomText=\"in children &amp; in everybody.\"\n            buttonText=\"View Listings\"\n            buttonDest=\"/\"\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection BgColor={Theme.Color.Background} noPaddingTop>\n        <Marquee\n          images={[\n            'random-1.jpg',\n            'random-2.jpg',\n            'random-3.jpg',\n            'random-4.jpg',\n            'random-5.jpg',\n            'random-6.jpg',\n          ]}\n          Shadow\n        />\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Dino}\n        BorderTop={Theme.Color.Clay}\n      >\n        <BasicInner>\n          <LegoList\n            blocks={[\n              {\n                title: 'Creative Collaboration',\n                text:\n                  'A greater sense of understanding and connection between your staff, as they will now know how others play, and in turn, how they work best.',\n                legoColor: 'orange',\n              },\n              {\n                title: 'New Perspectives',\n                text:\n                  'A willingness to tackle problems from a play perspective, embracing failure as part of the process of finding the solution.',\n                legoColor: 'purple',\n              },\n              {\n                title: 'Staff Morale',\n                text:\n                  'A rejuvenated staff who rediscovers what they find fun about their job and their organization.',\n                legoColor: 'blue',\n              },\n            ]}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Blush}\n        TextColor={Theme.Color.Dino}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <BasicInner noPaddingRight>\n          <TextWithManyImages\n            Text=\"We do this in the context of fun-filled engineering and\n              architectural projects, activities that both the children and the\n              instructors enjoy.\"\n            Images={['kids-1.jpg', 'lego-head.png', 'boy-3.png']}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <Section bg={ThemeProps.BgColor} pb={0}>\n        <SplitLinks>\n          <SplitLink\n            title=\"Keep reading.\"\n            message=\"Learn about Our Values &amp; why we do what we do.\"\n            // message={'Keep exploring programs in ' + countyStateString + '.'}\n            to=\"/\"\n            themeProps={ThemeProps}\n            first\n          />\n          <SplitLink\n            title=\"Here ye, here ye.\"\n            message=\"Check out our News &amp; Press page.\"\n            to=\"/\"\n            themeProps={ThemeProps}\n            last\n          />\n        </SplitLinks>\n      </Section>\n    </Layout>\n  );\n};\n\nexport default WhoCareersPage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important;\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({ blocks }) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n      return (\n        <div className=\"item\" key={index}>\n          {block.image && <ImgMatch src={block.image} />}\n          {!block.image && (\n            <Icon\n              Name=\"basicLego\"\n              Color={block.legoColor ? block.legoColor : false}\n            />\n          )}\n          <div className=\"h6\">{block.title}</div>\n          <p>{block.text}</p>\n        </div>\n      );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubNav Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// Might want to move this out to where it is used so the button can\n// be re-used without specific positioning.\nexport const Container = styled(Box)`\n  margin: 0 auto;\n  max-width: ${props => props.theme.Root.Site.Width};\n  position: absolute;\n  top: calc(${props => props.theme.Root.Size} * -1.5);\n`;\n\nexport const Nav = styled(Flex)`\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nNav.Link = styled.a`\n  color: ${props => props.theme.Color.Nova};\n  cursor: pointer;\n  font-family: ${props => props.theme.Font.Header};\n  font-size: 1.5rem;\n  transition: ${props => props.theme.Base.Transition.String};\n\n  &:hover {\n    opacity: 0.7;\n    text-decoration: none;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Navigation Transformer Component:\n// This is to transform our Navigation data into usable data.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const data = {\n  // Primary Nav\n  testNav: [\n    {\n      route: '/',\n      label: 'Who',\n    },\n    {\n      route: '/',\n      label: 'What',\n    },\n    {\n      route: '/',\n      label: 'Why',\n    },\n    {\n      route: '/',\n      label: 'How',\n    },\n  ],\n};\n","// SubNav Component:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { Container, Nav } from './styles.scss';\n\n// Data\nimport { data } from './data';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SubNav = () => (\n  <Container width={1} px={1}>\n    <Box width={[1, 1, 1, 6 / 10]} pr={[0, 0, 2, 4, 10]} pl={[0, 0, 2, 6, 9]}>\n      <Nav as=\"nav\">\n        {data.testNav.map(link => (\n          <Nav.Link\n            to={link.route}\n            key={link.label}\n            activeClassName=\"subnav--active\"\n          >\n            {link.label}\n          </Nav.Link>\n        ))}\n      </Nav>\n    </Box>\n  </Container>\n);\n\nSubNav.defaultProps = {};\n\nexport default SubNav;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImagesStyle = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n  }\n\n  .text {\n    font-weight: 700;\n    flex: 2;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: ${Root.Size} ${Root.Size} ${Root.Size} 0;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      padding: calc(${Root.Size} / 2) calc(${Root.Size} / 2)\n        calc(${Root.Size} / 2) 0;\n      &.h4 {\n        font-size: 1.75rem;\n      }\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size}) calc(${Root.Size}) calc(${Root.Size}) 0;\n      max-width: calc(${Theme.Base.Size.Lg} * 10);\n    }\n  }\n\n  .images {\n    flex: 3;\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: calc(${Theme.Base.Size.Lg} * 0.75);\n      height: 50vw;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: calc(${Theme.Base.Size.Lg} / 2);\n    }\n\n    > .gatsby-image-wrapper {\n      display: inline-block;\n      padding-top: 66.66%;\n      width: 66.66%;\n      height: 100%;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding-top: 0;\n      }\n\n      > div {\n        position: absolute;\n        padding-bottom: 0 !important;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n    }\n\n    .column {\n      width: 33.33%;\n      padding-top: 66.66%;\n      margin-left: 4px;\n      height: 100%;\n      position: relative;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding-top: 0;\n      }\n\n      .gatsby-image-wrapper {\n        width: 100%;\n        position: absolute !important;\n        top: 0;\n        left: 0;\n        height: calc(50% - 2px);\n\n        &:first-of-type {\n          margin-bottom: 4px;\n        }\n\n        &:last-of-type {\n          margin-top: 4px;\n          top: calc(50% - 2px);\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Many Images Section Component:\n// This is a section for two half width components, one of three square\n// imaged and the other of text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport { TextWithManyImagesStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImages = ({ Images, Text }) => (\n  <TextWithManyImagesStyle>\n    <div className=\"text h4\">{Text}</div>\n    <div className=\"images\">\n      <ImgMatch src={Images[0]} />\n      <div className=\"column\">\n        <ImgMatch src={Images[1]} />\n        <ImgMatch src={Images[2]} />\n      </div>\n    </div>\n  </TextWithManyImagesStyle>\n);\n\nexport default TextWithManyImages;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst TeamStyle = styled.div`\n  .team-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: ${props => (props.Justify ? props.Justify : 'flex-start')};\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: center;\n      padding-top: calc(${Root.Size} / 2);\n    }\n\n    .member {\n      text-align: center;\n      margin-bottom: calc(${Root.Size} / 2);\n      padding-right: calc(${Root.Size} / 8);\n      width: 16.66%;\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        width: 20%;\n      }\n\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        width: 25%;\n      }\n\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        width: 33.33%;\n      }\n\n      p {\n        font-weight: 700;\n        color: ${Theme.Color.Dino};\n        padding-bottom: 0;\n        line-height: 1;\n\n        &:last-of-type {\n          color: ${Theme.Color.Sunset};\n        }\n      }\n\n      .image-container {\n        border-radius: calc(${Root.Size} / 8);\n        margin: 0 calc(${Root.Size} / 12) calc(${Root.Size} / 6)\n          calc(${Root.Size} / 12);\n        width: 100%;\n        height: 0;\n        padding-top: 140%;\n        position: relative;\n\n        img {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          object-position: 50% 50%;\n          object-fit: cover;\n        }\n      }\n\n      .social {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        padding-top: calc(${Root.Size} / 8);\n\n        a {\n          background-color: grey; //TODO\n          border-radius: 50%;\n          display: block;\n          height: calc(${Root.Size} / 2);\n          width: calc(${Root.Size} / 2);\n\n          svg {\n            height: 100%;\n            width: 100%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TeamStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Team Component:\n// This is an element for rows of team members\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Constants\n\n// Styles\nimport TeamStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const Team = ({ members, Justify }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          allDataJson {\n            edges {\n              node {\n                leadership {\n                  bio\n                  id\n                  img\n                  mgr_level\n                  name\n                  title\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <TeamStyle Justify={Justify}>\n          <div className=\"team-container\">\n            {data.allDataJson.edges[1].node &&\n              data.allDataJson.edges[1].node.leadership.map((person, index) => {\n                return (\n                  <div className=\"member\" key={index}>\n                    <div className=\"image-container\">\n                      <img\n                        src={person.img}\n                        alt={'Picture of ' + person.name}\n                      ></img>\n                    </div>\n                    <p>{person.name}</p>\n                    <p>{person.mgr_level}</p>\n                    <div className=\"social\">\n                      {/* (member.socialIcon1 && member.socialLink1) &&\n                          <a href={member.socialLink1} aria-label={member.socialIcon1}>\n                            <svg>{member.socialIcon1}</svg>\n                          </a>\n                        }\n                        { (member.socialIcon2 && member.socialLink2) &&\n                          <a href={member.socialLink2} aria-label={member.socialIcon2}>\n                            <svg>{member.socialIcon2}</svg>\n                          </a>\n                        }\n                        { (member.socialIcon2 && member.socialLink2) &&\n                          <a href={member.socialLink2} aria-label={member.socialIcon2}>\n                            <svg>{member.socialIcon2}</svg>\n                          </a>\n                        */}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </TeamStyle>\n      )}\n    />\n  );\n};\n\nexport default Team;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlockStyle = styled.div`\n  text-align: center;\n  font-weight: 700;\n  margin: 0 auto;\n  position: relative;\n  max-width: calc(${Root.Size} * 15);\n  @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n    max-width: calc(${Root.Size} * 12);\n  }\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    max-width: calc(${Root.Size} * 11);\n  }\n\n  .h1-alt {\n    font-size: 5rem;\n  }\n\n  .headline {\n    color: ${Theme.Color.Eggplant};\n    padding: calc(${Root.Size} / 4) 0;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 6rem;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n    }\n  }\n\n  ~ .absolute-image {\n    position: absolute;\n    top: calc(${Root.Size} * -4.5);\n    width: 20%;\n    left: calc(${Root.Size} * -1);\n    height: auto;\n    transform: rotate(260deg);\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      left: calc(${Root.Size} * 0.5);\n    }\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      top: calc(${Root.Size} * -2.5);\n    }\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      display: none;\n    }\n  }\n\n  .btn .btn-inner {\n    margin-top: calc(${Root.Size} / 3);\n  }\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Giant Text Block Component:\n// This is a section for giant text sandwiched by smaller text, an optional button and an optional number\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { GiantTextBlockStyle, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlock = ({\n  giantText,\n  topText,\n  bottomText,\n  buttonText,\n  buttonDest,\n  headerText,\n  Number,\n  className,\n  children,\n}) => (\n  <GiantTextBlockStyle className={className}>\n    {children}\n    {Number && <BlockNumber className=\"h1\">{Number}</BlockNumber>}\n    {headerText && <BlockNumber className=\"h1-alt\">{headerText}</BlockNumber>}\n    {topText && <div className=\"h4\">{topText}</div>}\n    {giantText && <div className=\"headline txt-clr-eggplant\">{giantText}</div>}\n    {bottomText && <div className=\"h4\">{bottomText}</div>}\n    {buttonText && buttonDest && (\n      <Btn\n        Label={buttonText}\n        BgColor={Theme.Color.Dino}\n        TextColor={Theme.Color.White}\n        Destination={buttonDest}\n      />\n    )}\n  </GiantTextBlockStyle>\n);\n\nexport default GiantTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props =>\n    props.BgLinear\n      ? `\n    background: linear-gradient( to top, ` +\n        props.BgLinear +\n        ` 75%, ${Theme.Color.Background} 75% );\n  `\n      : null};\n\n  .slick-slider {\n    ${props =>\n      props.Shadow\n        ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(\n          Theme.Color.Eggplant,\n          0.2\n        )});\n      }\n    `\n        : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props =>\n          props.SquareFormat\n            ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        `\n            : `\n          padding-top: 140%;\n        `};\n\n        img {\n          ${props =>\n            props.SquareFormat\n              ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          `\n              : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Md +\n            (Base.Media.Width.Lg - Base.Media.Width.Md) / 2,\n          settings: {\n            slidesToShow: 3,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          },\n        },\n        {\n          breakpoint:\n            Base.Media.Width.Sm +\n            (Base.Media.Width.Md - Base.Media.Width.Sm) / 2,\n          settings: {\n            slidesToShow: 2,\n          },\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle SquareFormat={SquareFormat} Shadow={Shadow} BgLinear={BgLinear}>\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CenterSliderStyle = styled.div`\n  color: ${p => p.Color};\n\n  .slick-slider {\n    padding: 0 10%;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      padding: 0 ${Root.Size};\n    }\n\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      padding: calc(${Root.Size} * 1.5) 0 0 0;\n    }\n\n    .slick-arrow {\n      position: absolute;\n      top: calc(${Root.Size});\n      left: auto;\n      right: 0;\n      border-radius: 50%;\n      height: calc(${Root.Size} / 1.1);\n      width: calc(${Root.Size} / 1.1);\n      transition-duration: 0.5s;\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        top: calc(${Root.Size} / 4);\n      }\n\n      &:hover {\n        background-color: ${p => hexToRGB(p.Color, 0.1)};\n      }\n\n      &:before {\n        height: calc(${Root.Size} / 4);\n        width: calc(${Root.Size} / 4);\n        border: 1.5px solid ${p => p.Color};\n        content: '';\n        position: absolute;\n        top: calc(${Root.Size} / 3.5);\n        left: calc(${Root.Size} / 2.5);\n        transform: rotate(45deg);\n      }\n\n      &.slick-prev {\n        left: 0;\n        right: auto;\n        &:before {\n          border-right-color: transparent;\n          border-top-color: transparent;\n        }\n      }\n\n      &.slick-next {\n        &:before {\n          left: calc(${Root.Size} / 4.5);\n          border-left-color: transparent;\n          border-bottom-color: transparent;\n        }\n      }\n    }\n\n    .item {\n      text-align: center;\n\n      div.p-lg {\n        font-weight: 700;\n        padding-top: calc(${Root.Size} / 1.5);\n      }\n\n      p {\n        padding-bottom: 0;\n      }\n\n      .quote {\n        position: relative;\n        padding: calc(${Root.Size} / 3);\n\n        &:before,\n        &:after {\n          position: absolute;\n          font-size: 3.25rem;\n          font-family: 'Brown';\n        }\n\n        &:before {\n          left: 0;\n          top: calc(${Root.Size} / -4);\n          content: '”';\n        }\n\n        &:after {\n          content: '“';\n          right: 0;\n          bottom: calc(${Root.Size} / -1.5);\n        }\n      }\n    }\n  }\n`;\n\nexport default CenterSliderStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Center.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport CenterSliderStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass CenterSliderSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 1000,\n      autoplay: false,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      fade: true,\n      variableWidth: false,\n      infinite: true,\n      arrows: true,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg + 'px',\n          settings: {\n            slidesToShow: 3,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst CenterSlider = ({ testimonials, Color }) => (\n  <CenterSliderStyle Color={Color}>\n    <CenterSliderSlider>\n      {testimonials.map((testimonial, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <p className=\"p-lg quote\">{testimonial.quote}</p>\n            <div className=\"p-lg\">{testimonial.name}</div>\n            <p>{testimonial.title}</p>\n          </div>\n        );\n      })}\n    </CenterSliderSlider>\n  </CenterSliderStyle>\n);\n\nCenterSlider.defaultProps = {\n  Color: Theme.Color.Primary,\n};\n\nexport default CenterSlider;\n"],"sourceRoot":""}