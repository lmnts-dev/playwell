{"version":3,"sources":["webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/Block.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/templates/Location/styles.scss.js","webpack:///./src/components/library/Accordion/styles.scss.js","webpack:///./src/components/library/Accordion/Accordion.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/Spacer/styles.scss.js","webpack:///./src/components/library/Spacer/Spacer.js","webpack:///./src/components/library/Spacer/Centered/styles.scss.js","webpack:///./src/components/library/Spacer/Centered/Centered.js","webpack:///./src/sections/LocationHero/styles.scss.js","webpack:///./src/sections/LocationHero/LocationHero.js","webpack:///./src/sections/LocationCoordinators/styles.scss.js","webpack:///./src/sections/LocationCoordinators/LocationCoordinators.js","webpack:///./src/sections/LocationSplitSection/LocationSplitSection.js","webpack:///./src/sections/LocationPrograms/LocationPrograms.js","webpack:///./src/sections/Quote/styles.scss.js","webpack:///./src/sections/LocationEvents/styles.scss.js","webpack:///./src/sections/Quote/Quote.js","webpack:///./src/sections/LocationIntro/styles.scss.js","webpack:///./src/sections/LocationIntro/LocationIntro.js","webpack:///./src/sections/LocationPlayZone/styles.scss.js","webpack:///./src/sections/LocationPlayZone/LocationPlayZone.js","webpack:///./src/templates/Location/index.js"],"names":["BlockStyle","styled","div","props","Flex","flex","BgColor","TextColor","AlignItems","Style","css","JustifyContent","BgTint","Width","maxWidth","Theme","Base","Grid","SiteWidth","Padding","Root","Size","Block","children","className","BgMatch","BgQuery","BgAlt","ImgMatch","src","AltText","ImgQuery","LegoListStyles","Media","Md","LegoList","blocks","map","block","index","key","image","Name","Color","legoColor","title","text","Line","span","Primary","Scroll","Box","Gutter","Right","Left","White","Positioner","Indent","X","Nova","Lg","Decorator","Nav","AccordionContainer","Inner","Icon","p","chevronColor","Accordion","button","color","colorActive","Content","borderColor","Radius","useState","setActive","setActiveState","setHeight","setHeightState","setRotate","setRotateState","content","useRef","onClick","current","scrollHeight","as","fontWeight","fontSize","ref","style","maxHeight","defaultProps","hexToRGB","Dino","Sunlight","SplitSectionStyle","Site","SplitSection","Container","indent","Sm","Spacer","Centered","Hero","Background","Tags","ul","Deepsea","Rem","Sunset","Heading","h2","LocationHero","cities","countyName","pageContext","programsSlug","isCounty","slugify","parentState","name","toLowerCase","cost_code_name","isCostCode","width","px","includes","mr","mb","display","Btn","Destination","Label","Blush","Title","Article","Info","Figure","figure","Details","Contact","LocationCoordinators","countyState","Section","textAlign","flexWrap","pr","pb","managers","manager","node","id","state","href","email","LocationSplitSection","Nightsky","LocationPrograms","mt","QuoteContainer","Top","Quote","Text","Intro","ReadingWidth","LocationIntro","bg","pt","Overflow","Image","LocationPlayZone","ThemeProps","PrimaryColor","SecondaryColor","TertiaryColor","LocationDetail","Layout","fullWidth"],"mappings":"8KAmHeA,EAtGWC,IAAOC,IAAV,6EAAGD,CAAH,mTAEH,SAAAE,GAAK,OAAKA,EAAMC,KAAOD,EAAME,KAAO,YAGpD,SAAAF,GAAK,OAAKA,EAAMG,QAAU,eAAiBH,EAAMG,QAAU,IAAM,QACjE,SAAAH,GAAK,OAAKA,EAAMI,UAAY,UAAYJ,EAAMI,UAAY,IAAM,QAIhE,SAAAJ,GAAK,OACLA,EAAMK,WAAa,gBAAkBL,EAAMK,WAAa,IAAM,QAG9D,SAAAL,GAAK,MACU,YAAfA,EAAMM,OACNC,cADA,oOAkCE,SAAAP,GAAK,OAAKA,EAAMQ,eAAiB,eAAiB,QAClD,SAAAR,GAAK,OACLA,EAAMQ,eACF,oBAAsBR,EAAMQ,eAAiB,IAC7C,QAgBJ,SAAAR,GAAK,OAAKA,EAAMS,OAAS,YAAcT,EAAMS,OAAS,IAAM,QAQ9D,SAAAT,GAAK,OAAKA,EAAMU,MAAQ,UAA0B,IAAdV,EAAMU,MAAc,KAAO,cACpD,SAAAV,GAAK,OAChBA,EAAMW,SACF,QAAUC,IAAMC,KAAKC,KAAKC,UAAY,MAAQf,EAAMW,SAAW,IAC/DC,IAAMC,KAAKC,KAAKC,aAGpB,SAAAf,GAAK,OACLA,EAAMgB,QACF,qBAAuBC,IAAKC,KAAO,MAAQlB,EAAMgB,QAAQ,GAAK,KAC9D,QACJ,SAAAhB,GAAK,OACLA,EAAMgB,QACF,uBAAyBC,IAAKC,KAAO,MAAQlB,EAAMgB,QAAQ,GAAK,KAChE,QACJ,SAAAhB,GAAK,OACLA,EAAMgB,QACF,wBAA0BC,IAAKC,KAAO,MAAQlB,EAAMgB,QAAQ,GAAK,KACjE,QACJ,SAAAhB,GAAK,OACLA,EAAMgB,QACF,sBAAwBC,IAAKC,KAAO,MAAQlB,EAAMgB,QAAQ,GAAK,KAC/D,QC1COG,IArDD,SAAC,GAAD,IACZC,EADY,EACZA,SACAC,EAFY,EAEZA,UACAf,EAHY,EAGZA,MACAK,EAJY,EAIZA,SACAD,EALY,EAKZA,MACAM,EANY,EAMZA,QACAX,EAPY,EAOZA,WACAiB,EARY,EAQZA,QACAC,EATY,EASZA,QACAC,EAVY,EAUZA,MACAf,EAXY,EAWZA,OACAN,EAZY,EAYZA,QACAC,EAbY,EAaZA,UACAI,EAdY,EAcZA,eACAP,EAfY,EAeZA,KAfY,OAiBZ,kBAAC,EAAD,CACEoB,UAAWA,EAAYA,EAAY,SAAW,QAC9CX,MAAOA,EACPC,SAAUA,EACVL,MAAOA,EACPU,QAASA,EACTX,WAAYA,IAA0B,EACtCG,eAAgBA,IAAkC,EAClDC,OAAQA,EACRN,QAASA,EACTC,UAAWA,EACXH,KAAMA,GAGLmB,EAAW,yBAAKC,UAAU,iBAAiBD,GAAkB,KAG7DE,EACC,yBAAKD,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAACI,EAAA,EAAD,CAAUC,IAAKJ,EAASK,QAASH,MAGnC,KAGHD,EACC,yBAAKF,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAACO,EAAA,EAAD,CAAUF,IAAKH,EAASI,QAASH,MAGnC,Q,4ICEOK,EAlDQ/B,IAAOC,IAAV,iFAAGD,CAAH,glBAIGe,IAAKiB,MAAMpB,MAAMqB,GAAK,KAEvBd,IAAKC,KAQFL,IAAKiB,MAAMpB,MAAMqB,GAAK,KAEnBd,IAAKC,KAcTD,IAAKC,KAUDD,IAAKC,KAKXD,IAAKC,MCvBZc,IApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACtB,kBAAC,EAAD,KACGA,EAAOC,KAAI,SAACC,EAAOC,GAClB,OACE,yBAAKf,UAAU,OAAOgB,IAAKD,GACxBD,EAAMG,OAAS,kBAACb,EAAA,EAAD,CAAUC,IAAKS,EAAMG,SACnCH,EAAMG,OACN,kBAAC,IAAD,CACEC,KAAK,YACLC,QAAOL,EAAMM,WAAYN,EAAMM,YAGnC,yBAAKpB,UAAU,MAAMc,EAAMO,OAC3B,2BAAIP,EAAMQ,a,kCCjCpB,6IAmBsB7C,IAAOG,KAAV,yEAAGH,CAAH,+CAKZ8C,KAAO9C,IAAO+C,KAArB,uEAAc/C,CAAd,8FAK4Bc,IAAM4B,MAAMM,SAIjC,IAAMC,EAASjD,IAAOkD,KAAV,yEAAGlD,CAAH,oPAMJc,IAAMC,KAAKC,KAAKC,UAEZE,IAAKH,KAAKmC,OAAOC,MAClBjC,IAAKH,KAAKmC,OAAOE,KAKtBvC,IAAM4B,MAAMY,MAICxC,IAAMK,KAAKC,MAIrC6B,EAAOM,WAAavD,IAAOC,IAA3B,6EAAoBD,CAApB,yFAKkBmB,IAAKH,KAAKwC,OAAOC,GAGnCR,EAAOH,KAAO9C,IAAOC,IAArB,uEAAcD,CAAd,ubAaac,IAAM4B,MAAMgB,KAMT5C,IAAMC,KAAKK,KAAKuC,GAKxB7C,IAAM4B,MAAMgB,MASb,IAAME,EAAY5D,IAAOkD,KAAV,4EAAGlD,CAAH,0qBAMNc,IAAMK,KAAK0C,IAAIzC,KAAUN,IAAMK,KAAKC,KAGlCN,IAAMK,KAAK0C,IAAIzC,KAAUN,IAAMK,KAAKC,KAI3BL,IAAKiB,MAAMpB,MAAMqB,GAAK,KAKtBlB,IAAKiB,MAAMpB,MAAM+C,GAAK,KAO/B7C,IAAMK,KAAK0C,IAAIzC,KAAUN,IAAMK,KAAKC,KAI3BL,IAAKiB,MAAMpB,MAAMqB,GAAK,KAKtBlB,IAAKiB,MAAMpB,MAAM+C,GAAK,KAY/B7C,IAAMK,KAAK0C,IAAIzC,KAAUN,IAAMK,KAAKC,KAI3BL,IAAKiB,MAAMpB,MAAMqB,GAAK,KAKtBlB,IAAKiB,MAAMpB,MAAM+C,GAAK,KAUtB5C,IAAKiB,MAAMpB,MAAMqB,GAAK,KAKtBlB,IAAKiB,MAAMpB,MAAM+C,GAAK,O,4IC/IpCG,EAAqB9D,IAAOC,IAAV,iFAAGD,CAAH,iBAI/B8D,EAAmBC,MAAQ/D,IAAOC,IAAlC,oEAA2BD,CAA3B,0EASA8D,EAAmBE,KAAOhE,IAAOgE,KAAjC,mEAA0BhE,CAA1B,oEAKY,SAAAiE,GAAC,OAAIA,EAAEC,gBAInBJ,EAAmBK,UAAYnE,IAAOoE,OAAtC,wEAA+BpE,CAA/B,uSAGW,SAAAiE,GAAC,OAAIA,EAAEI,QAKAlD,IAAKC,KAAkBD,IAAKC,KAGvBL,IAAKiB,MAAMpB,MAAMqB,GAAK,KACzBd,IAAKC,KAAkBD,IAAKC,MAQnC,SAAA6C,GAAC,OAAIA,EAAEK,eAIpBR,EAAmBS,QAAUvE,IAAOkD,KAApC,sEAA6BlD,CAA7B,kFAG6B,SAAAiE,GAAC,OAAIA,EAAEO,eAGpCV,EAAmBS,QAAQR,MAAQ/D,IAAOC,IAA1C,oEAAmCD,CAAnC,6DACwBmB,IAAKsD,OACLtD,IAAKC,MCpD7B,IAAM+C,EAAY,SAAC,GAOZ,IANL7C,EAMI,EANJA,SACAsB,EAKI,EALJA,MACAsB,EAII,EAJJA,aACAG,EAGI,EAHJA,MACAG,EAEI,EAFJA,YACAF,EACI,EADJA,YACI,EAEgCI,mBAAS,IAAtCC,EAFH,KAEcC,EAFd,OAGgCF,mBAAS,OAAtCG,EAHH,KAGcC,EAHd,OAIgCJ,mBAAS,kBAAtCK,EAJH,KAIcC,EAJd,KAOEC,EAAUC,iBAAO,MAavB,OACE,kBAACpB,EAAD,KACE,kBAACA,EAAmBC,MAApB,KACE,kBAACD,EAAmBK,UAApB,CACE5C,UAAS,GAAKoD,EACdQ,QAfR,WACEP,EAA6B,KAAdD,EAAmB,SAAW,IAC7CG,EACgB,WAAdH,EAAyB,MAAWM,EAAQG,QAAQC,aAApD,MAEFL,EACgB,WAAdL,EAAyB,iBAAmB,0BAUxCN,MAAOA,EACPC,YAAaA,GAEb,kBAAC,IAAD,CAAMgB,GAAG,OAAOC,WAAY,IAAKC,SAAS,UACvC5C,GAEH,kBAACkB,EAAmBE,KAApB,CACEvB,KAAK,QACLlB,UAAS,GAAKwD,EACdb,aAAcA,KAGlB,kBAACJ,EAAmBS,QAApB,CACEkB,IAAKR,EACLS,MAAO,CAAEC,UAAU,GAAId,GACvBL,YAAaA,GAEb,kBAACV,EAAmBS,QAAQR,MAA5B,KACGzC,OAQb6C,EAAUyB,aAAe,CACvB1B,aAAcpD,IAAM4B,MAAMgB,KAC1BW,MAAOwB,YAAS/E,IAAM4B,MAAMoD,KAAM,IAClCxB,YAAaxD,IAAM4B,MAAMoD,KACzBtB,YAAaqB,YAAS/E,IAAM4B,MAAMqD,SAAU,KAG/B5B,O,wGC5ET6B,EAAoBhG,IAAOC,IAAV,gFAAGD,CAAH,0BAKvBgG,EAAkBjC,MAAQ/D,IAAOC,IAAjC,oEAA0BD,CAA1B,wlBAEoB,SAAAE,GAAK,OAAKA,EAAMC,KAAOD,EAAMC,KAAO,QAKjCY,IAAKiB,MAAMpB,MAAMqB,GAAK,KAOlBd,IAAKC,KAYLL,IAAKiB,MAAMpB,MAAMqB,GAAK,MAChC,SAAA/B,GAAK,OACZA,EAAMC,KACF,eAAiBgB,IAAKH,KAAKmC,OAAOE,KAAO,QACzC,eAAiBlC,IAAKH,KAAKmC,OAAOE,KAAO,WAI7C,SAAAnD,GAAK,OACLA,EAAMC,KACF,KACA,sBACAgB,IAAKH,KAAKmC,OAAOE,KACjB,MACAlC,IAAKC,KACL,MASaL,IAAKiB,MAAMpB,MAAMqB,GAAK,MAChC,SAAA/B,GAAK,OACZA,EAAMC,KACF,eAAiBgB,IAAKH,KAAKmC,OAAOE,KAAO,QACzC,eAAiBlC,IAAKH,KAAKmC,OAAOE,KAAO,WAI7C,SAAAnD,GAAK,OACLA,EAAMC,KACF,KACA,sBACAgB,IAAKH,KAAKmC,OAAOE,KACjB,MACAlC,IAAKC,KACL,MAKUD,IAAK8E,KAAKrF,OAsBnBoF,QCtFAE,IANM,SAAC,GAAD,IAAG5E,EAAH,EAAGA,SAAUnB,EAAb,EAAaA,KAAb,OACnB,kBAAC,EAAD,KACE,kBAAC,EAAkB4D,MAAnB,CAAyB5D,KAAMA,GAAOmB,M,gICJ7B6E,EAAYnG,IAAOC,IAAV,2EAAGD,CAAH,0RAMRc,IAAMK,KAAKC,KAEFL,IAAKiB,MAAMpB,MAAMqB,GAAK,MACzB,SAAA/B,GAAK,OAAKA,EAAMkG,OAAN,QAAuBjF,IAAKC,KAA5B,QAA0C,MAGjDL,IAAKiB,MAAMpB,MAAM+C,GAAK,MACzB,SAAAzD,GAAK,OAAKA,EAAMkG,OAAN,QAAuBjF,IAAKC,KAA5B,UAA4C,MAI7DN,IAAM4B,MAAMoD,KAIChF,IAAMK,KAAKC,MAIrC+E,EAAUpC,MAAQ/D,IAAOkD,KAAzB,uEAAkBlD,CAAlB,gTAEec,IAAMC,KAAKC,KAAKC,UAKZE,IAAKH,KAAKmC,OAAOC,MAClBjC,IAAKH,KAAKmC,OAAOE,KAEZtC,IAAKiB,MAAMpB,MAAMqB,GAAK,KACnBd,IAAKH,KAAKmC,OAAOC,MAAWjC,IAAKC,KAClCD,IAAKH,KAAKmC,OAAOC,MAAWjC,IAAKC,KAGnCL,IAAKiB,MAAMpB,MAAM+C,GAAK,KACnBxC,IAAKH,KAAKmC,OAAOC,MAAWjC,IAAKC,KAClCD,IAAKH,KAAKmC,OAAOC,MAAWjC,IAAKC,MAI1D+E,EAAU5C,WAAavD,IAAOC,IAA9B,4EAAuBD,CAAvB,uJAMuBc,IAAMC,KAAKC,KAAKC,UAGhBF,IAAKiB,MAAMpB,MAAMyF,GAAK,MAK7CF,EAAUrD,KAAO9C,IAAOC,IAAxB,sEAAiBD,CAAjB,2dAKuBc,IAAMC,KAAKC,KAAKC,UAW1BH,IAAM4B,MAAMgB,KAMT5C,IAAMC,KAAKK,KAAKuC,GAKxB7C,IAAM4B,MAAMgB,MCzFpB,IAAM4C,EAAS,SAAC,GAAD,IAAGhF,EAAH,EAAGA,SAAU8E,EAAb,EAAaA,OAAb,OACb,kBAACD,EAAD,CAAWC,OAAQA,GACjB,kBAACD,EAAUpC,MAAX,KACE,kBAACoC,EAAU5C,WAAX,KACE,8BAAOjC,GACP,kBAAC6E,EAAUrD,KAAX,UAMRwD,EAAOV,aAAe,GAEPU,O,oHCXFH,EAAYnG,IAAOG,KAAV,4EAAGH,CAAH,+CAKtBmG,EAAUrD,KAAO9C,IAAOC,IAAxB,uEAAiBD,CAAjB,4TAWgBc,IAAMC,KAAKK,KAAKuC,GAKxB7C,IAAM4B,MAAMM,SClBLuD,IANE,kBACf,kBAACJ,EAAD,KACE,kBAACA,EAAUrD,KAAX,S,2PCCS0D,EAAOxG,IAAOkD,KAAV,uEAAGlD,CAAH,qIACDc,IAAM4B,MAAM+D,WACN3F,IAAMK,KAAK0C,IAAIzC,KAAUN,IAAMK,KAAKC,KACjCN,IAAMK,KAAKC,MAMpCoF,EAAKzC,MAAQ/D,IAAOkD,KAApB,wEAAalD,CAAb,4IAEec,IAAMC,KAAKC,KAAKC,UAGZE,IAAKH,KAAKmC,OAAOC,MAClBjC,IAAKH,KAAKmC,OAAOE,KAGZtC,IAAKiB,MAAMpB,MAAMqB,GAAK,MAI7CuE,EAAKE,KAAO1G,IAAO2G,GAAnB,uEAAY3G,CAAZ,oXAIwBc,IAAMK,KAAKC,KAGtBN,IAAM4B,MAAMkE,QAEE9F,IAAMK,KAAKC,KAGhBN,IAAMK,KAAK0F,IACP/F,IAAMK,KAAK0F,IAEZ9F,IAAKiB,MAAMpB,MAAM+C,GAAK,KAOhC7C,IAAM4B,MAAMoE,OACJhG,IAAMK,KAAKC,KAWnBN,IAAM4B,MAAMM,SAK3BwD,EAAKO,QAAU/G,IAAOgH,GAAtB,0EAAehH,CAAf,+BACWc,IAAM4B,MAAMM,QAGVlC,IAAM4B,MAAMgB,M,4BC6CVuD,EApGM,SAAC,GAA4B,EAA1BC,OAA2B,IAE7BC,EAFUC,EAAkB,EAAlBA,YA4BxBC,EACoB,GAAxBD,EAAYE,SACRC,YAAQH,EAAYI,YAAYC,KAAKC,eACrC,IACAH,YAAQH,EAAYO,eAAeD,eACnC,IACAH,YAAQH,EAAYK,KAAKC,eACC,GAA1BN,EAAYQ,WACZL,YAAQH,EAAYI,YAAYC,KAAKC,eACrC,IACAH,YAAQH,EAAYO,eAAeD,eACnCH,YAAQH,EAAYK,KAAKC,eAE/B,OACE,kBAAClB,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKjF,UAAU,wCACb,kBAACI,EAAA,EAAD,CAAUC,IAAI,gBAAgBC,QAAQ,WAGxC,yBAAKN,UAAU,2CACb,kBAACI,EAAA,EAAD,CAAUC,IAAI,gBAAgBC,QAAQ,YAG1C,kBAAC2E,EAAKzC,MAAN,KAoBE,kBAAC,IAAD,CAAK8D,MAAO,EAAGC,GAAI3G,IAAKH,KAAKwC,OAAOC,GAClC,kBAAC+C,EAAKO,QAAN,wBAEE,6BAFF,kBAGiB,8BAhEJ,GAAfK,EAC0B,GAAxBA,EAAYE,WAXAH,EAaAC,EAAYK,MAZfC,cAAcK,SAAS,UAC7BZ,EAEAA,EAAa,WASgB,KAAOC,EAAYI,YAAYC,KAE9B,GAA1BL,EAAYQ,WACdR,EAAYO,eAAiB,KAAOP,EAAYI,YAAYC,KAE5DL,EAAYK,KAGd,qBAuDH,kBAAC,IAAD,CAAKO,GAAI,EAAGC,GAAI,CAAC,EAAG,GAAIC,QAAQ,gBAC9B,kBAACC,EAAA,EAAD,CACEC,YAAa,aAAef,EAC5BgB,MAAM,gBACNhI,QAASS,IAAM4B,MAAMgB,KACrBpD,UAAWQ,IAAM4B,MAAMY,SAG3B,kBAAC,IAAD,CAAK4E,QAAQ,gBACX,kBAACC,EAAA,EAAD,CACEC,YAAa,cAAgBf,EAAe,gBAC5CgB,MAAM,kBACNhI,QAASS,IAAM4B,MAAM4F,MACrBhI,UAAWQ,IAAM4B,MAAMM,e,YCrGxBuF,EAAQvI,IAAOkD,KAAV,wEAAGlD,CAAH,qGAELc,IAAM4B,MAAMoD,KAGA/E,IAAKiB,MAAMpB,MAAMyF,GAAK,KAE7BvF,IAAMK,KAAK0C,IAAIzC,KAAUN,IAAMK,KAAKC,MAKzCoH,EAAUxI,IAAOC,IAAV,0EAAGD,CAAH,8KACImB,IAAKsD,OAIb3D,IAAM4B,MAAMY,MACVnC,IAAKC,KAGAL,IAAKiB,MAAMpB,MAAMyF,GAAK,KACzBlF,IAAKC,MAIzBoH,EAAQC,KAAOzI,IAAOC,IAAtB,uEAAeD,CAAf,oHAEuBmB,IAAKC,KAGLL,IAAKiB,MAAMpB,MAAMyF,GAAK,KACpBlF,IAAKC,MAK9BoH,EAAQE,OAAS1I,IAAO2I,OAAxB,yEAAiB3I,CAAjB,0KAKuBe,IAAKiB,MAAMpB,MAAMyF,GAAK,KAMnBlF,IAAKsD,QAO/B+D,EAAQC,KAAKG,QAAU5I,IAAOC,IAA9B,0EAAuBD,CAAvB,wJACWc,IAAM4B,MAAMgB,KAGCvC,IAAKC,KAKhBN,IAAM4B,MAAMoD,KACD3E,IAAKC,MAI7BoH,EAAQC,KAAKhG,KAAOzC,IAAOC,IAA3B,uEAAoBD,CAApB,uIACWc,IAAM4B,MAAMkE,QAIFzF,IAAKC,KAGHL,IAAKiB,MAAMpB,MAAMyF,GAAK,MAK7CmC,EAAQC,KAAKI,QAAU7I,IAAOC,IAA9B,0EAAuBD,CAAvB,qVAMWc,IAAM4B,MAAMgB,KAEFvC,IAAKC,KAGHL,IAAKiB,MAAMpB,MAAMyF,GAAK,KAKnBlF,IAAKC,KAONL,IAAKiB,MAAMpB,MAAMyF,GAAK,KAKhCvF,IAAM4B,MAAMgB,MCvG3B,IA+DeoF,EA/Dc,SAAC,GAAqB,IAAnB1B,EAAkB,EAAlBA,YAExB2B,EAAc3B,EAAYE,SAC5BF,EAAYK,KAAO,KAAOL,EAAYI,YAAYC,KAClDL,EAAYK,KAEhB,OACE,kBAACuB,EAAA,EAAD,CAASC,UAAU,QAEjB,kBAAC,IAAD,CAAMC,SAAS,QACb,kBAACX,EAAD,CACEV,MAAO,CAAC,EAAG,EAAG,GAAO,IACrBsB,GAAI,CAAC,EAAG,EAAG,EAAG,yBACdC,GAAI,eAEJ,0BAAM7H,UAAU,MAAhB,mBAAsCwH,IAExC,kBAAC,IAAD,CAAKlB,MAAO,CAAC,EAAG,EAAG,GAAO,KACvBT,EAAYiC,SAASjH,KAAI,SAAAkH,GAAO,OAC/B,kBAACnF,EAAA,EAAD,CACE5B,IAAK+G,EAAQC,KAAKC,GAClB5G,MAAO0G,EAAQC,KAAK5B,gBAEpB,kBAACa,EAAD,KACE,kBAACA,EAAQE,OAAT,KACE,kBAAC/G,EAAA,EAAD,CACEC,IAAI,kBACJC,QAAQ,wCAGZ,kBAAC2G,EAAQC,KAAT,KACE,kBAAC,IAAD,CAAMS,SAAS,QACb,kBAACV,EAAQC,KAAKG,QAAd,KACGU,EAAQC,KAAKE,OAGhB,kBAACjB,EAAQC,KAAKhG,KAAd,CAAmB+C,SAAS,UACzB8D,EAAQC,KAAKD,SAEhB,kBAACd,EAAQC,KAAKI,QAAd,KACE,8BACE,uBAAGa,KAAM,UAAYJ,EAAQC,KAAKI,OAC/BL,EAAQC,KAAKI,oB,oCCwBzBC,EA/Dc,kBAC3B,oCACE,kBAAC1D,EAAA,EAAD,CAAc/F,KAAK,OACjB,kBAACkB,EAAA,EAAD,CACEb,MAAM,WACNH,QAASS,IAAM4B,MAAMY,MACrB9B,QAAQ,qBACRE,MAAM,sBACNd,MAAO,GACPF,eAAe,WAEjB,kBAACW,EAAA,EAAD,CACEH,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBN,MAAO,GACPP,QAASS,IAAM4B,MAAMY,MACrBhD,UAAWQ,IAAM4B,MAAMmH,UAEvB,kBAAC,IAAD,CAAMvE,GAAG,KAAKjB,MAAM,UAApB,kBAGA,kBAAC,IAAD,CAAMiB,GAAG,KAAKjB,MAAM,UAApB,yBAEQ,IACR,kBAAC,IAAD,CAAMiB,GAAG,IAAI/D,UAAU,OAAO8C,MAAM,UAApC,kNASJ,kBAAC6B,EAAA,EAAD,CAAc/F,KAAK,eACjB,kBAACkB,EAAA,EAAD,CACEb,MAAM,WACNH,QAASS,IAAM4B,MAAMY,MACrB9B,QAAQ,oBACRE,MAAM,sBACNd,MAAO,KAET,kBAACS,EAAA,EAAD,CACEH,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBN,MAAO,GACPP,QAASS,IAAM4B,MAAMY,MACrBhD,UAAWQ,IAAM4B,MAAMmH,UAEvB,kBAAC,IAAD,CAAMvE,GAAG,KAAKjB,MAAM,UAApB,sBAGA,kBAAC,IAAD,CAAMiB,GAAG,KAAKjB,MAAM,UAApB,2CAEQ,IACR,kBAAC,IAAD,CAAMiB,GAAG,IAAI/D,UAAU,OAAO8C,MAAM,UAApC,oNCCOyF,EApDU,kBACvB,oCACE,kBAAC5D,EAAA,EAAD,CAAc/F,KAAK,OACjB,kBAACkB,EAAA,EAAD,CACEH,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBN,MAAO,GACPP,QAASS,IAAM4B,MAAMM,QACrB1C,UAAWQ,IAAM4B,MAAMY,OAEvB,kBAAC,IAAD,CAAMgC,GAAG,OAAOE,SAAU,CAAC,EAAG,EAAG,GAAID,WAAY,IAAK0C,GAAI,GAA1D,oBAGA,kBAAC,IAAD,CAAM3C,GAAG,MAAT,2BAA6C,IAC7C,kBAAC,IAAD,CAAMA,GAAG,IAAIE,SAAU,CAAC,EAAG,EAAG,GAAIuE,GAAI,CAAC,EAAG,EAAG,GAAI9B,GAAI,GAArD,4LAYF,kBAAC5G,EAAA,EAAD,CACEH,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBN,MAAO,GACPP,QAASS,IAAM4B,MAAMoE,OACrBxG,UAAWQ,IAAM4B,MAAMY,OAEvB,kBAAC,IAAD,CAAMgC,GAAG,OAAOE,SAAU,CAAC,EAAG,EAAG,GAAID,WAAY,IAAK0C,GAAI,GAA1D,kBAGA,kBAAC,IAAD,CAAM3C,GAAG,MAAT,yBAA2C,IAC3C,kBAAC,IAAD,CAAMA,GAAG,IAAIE,SAAU,CAAC,EAAG,EAAG,GAAIuE,GAAI,CAAC,EAAG,EAAG,GAAI9B,GAAI,GAArD,oN,YC1CK+B,GCCShK,IAAOkD,KAAV,yEAAGlD,CAAH,mGAGHc,IAAM4B,MAAM+D,WACFZ,YAAS/E,IAAM4B,MAAMgB,KAAM,IAC/BvC,IAAKH,KAAKmC,OAAO8G,KDNTjK,IAAOgJ,KAAV,iFAAGhJ,CAAH,OAE3BgK,EAAeE,MAAQlK,IAAOmK,KAA9B,wEAAuBnK,CAAvB,oVAMac,IAAM4B,MAAMM,QAMAjC,IAAKiB,MAAMpB,MAAMqB,GAAK,KAQlCnB,IAAM4B,MAAMM,QAMAjC,IAAKiB,MAAMpB,MAAMqB,GAAK,ME5B/C,IAAMiI,EAAQ,SAAC,GAAyB,IAAvB7F,EAAsB,EAAtBA,MAAO/C,EAAe,EAAfA,SAEtB,OACE,kBAAC0I,EAAD,KACE,kBAAC,IAAD,CAAKlC,GAAI,CAAC,MAAO,MAAO,MAAO,QAC7B,kBAACkC,EAAeE,MAAhB,CAAsB3I,UAAU,KAAK8C,MAAOA,GACzC/C,MAOX4I,EAAMtE,aAAe,CACnBvB,MAAO,UAGM6F,QCpBFE,EAAQpK,IAAOgJ,KAAV,wEAAGhJ,CAAH,MAElBoK,EAAMrG,MAAQ/D,IAAOG,KAArB,wEAAcH,CAAd,sEAIec,IAAMC,KAAKC,KAAKqJ,cCP/B,IAuBeC,EAvBO,SAAC,GAAqB,IAAnBlD,EAAkB,EAAlBA,YACjB2B,EAAc3B,EAAYE,SAC5BF,EAAYK,KAAO,KAAOL,EAAYI,YAAYC,KAAO,KACzDL,EAAYK,KAAO,KAEvB,OACE,kBAAC2C,EAAD,CAAOG,GAAG,QAAQtB,UAAU,UAC1B,kBAACmB,EAAMrG,MAAP,CAAayG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAIpB,GAAI,CAAC,EAAG,EAAG,EAAG,IAC3C,kBAAC,IAAD,CAAM9D,GAAG,IAAIjB,MAAM,OAAO9C,UAAU,QACjCwH,EADH,kDAGA,kBAAC,IAAD,CAAMzD,GAAG,IAAIjB,MAAM,SAAS9C,UAAU,QAAtC,uUCVK4E,EAAYnG,IAAOgJ,KAAV,4EAAGhJ,CAAH,wBAItBmG,EAAUsE,SAAWzK,IAAOC,IAA5B,2EAAqBD,CAArB,sBAIAmG,EAAUuE,MAAQ1K,IAAOC,IAAzB,wEAAkBD,CAAlB,yFCHA,IA0Be2K,EA1BU,kBACvB,kBAACxE,EAAD,CAAW8C,UAAU,OAAOuB,GAAI,CAAC,EAAG,EAAG,GAAI,IAAKpE,QAAM,GACpD,kBAACD,EAAUuE,MAAX,KACE,kBAAC/I,EAAA,EAAD,CAAUC,IAAI,kBAAkBC,QAAQ,WAE1C,kBAAC,IAAD,CAAKgG,MAAO,CAAC,EAAG,GAAQ,GAAO,KAC7B,kBAAC,IAAD,CAAMtG,UAAU,KAAK+D,GAAG,OAAOjB,MAAM,SAASkB,WAAY,IAAK0C,GAAI,GAAnE,kBAGA,kBAAC,IAAD,CAAM3C,GAAG,KAAKjB,MAAM,UAApB,uCAGA,kBAAC,IAAD,CAAMiB,GAAG,IAAIjB,MAAM,SAASmB,SAAU,CAAC,EAAG,EAAG,GAAIuE,GAAI,CAAC,EAAG,EAAG,GAAI9B,GAAI,GAApE,mHCIA2C,EAAa,CACjBvK,QAASS,IAAM4B,MAAM+D,WACrBoE,aAAc/J,IAAM4B,MAAMoD,KAC1BgF,eAAgBhK,IAAM4B,MAAMM,QAC5B+H,cAAejK,IAAM4B,MAAMM,S,oHA0FdgI,UAtFQ,SAAC,GAAqB,IAAnB5D,EAAkB,EAAlBA,YAMxB,OACE,kBAAC6D,EAAA,EAAWL,EACV,kBAAC,EAAD,CAAcxD,YAAaA,IAE3B,kBAAC4B,EAAA,EAAD,CAASwB,GAAI,EAAGpB,GAAI,EAAG8B,WAAS,GAC9B,kBAACvJ,EAAA,EAAD,CACEC,IAAI,qBACJC,QAAQ,qCAIZ,kBAAC,IAAD,MAEA,kBAAC,EAAD,CAAeuF,YAAaA,IAC5B,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAsBA,YAAaA,EAAaoC,GAAG,iBAInD,kBAACR,EAAA,EAAD,CAASuB,GAAG,SACV,kBAACrI,EAAA,EAAD,CACEC,OAAQ,CACN,CACES,MAAO,yBACPC,KACE,8IACFF,UAAW,UAEb,CACEC,MAAO,mBACPC,KACE,8HACFF,UAAW,UAEb,CACEC,MAAO,eACPC,KACE,iGACFF,UAAW,YAMnB,kBAAC,EAAD,CAAO0B,MAAM,UAAb,sJAMA,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAOd,WAAR,KACE,sCACA,kBAAC,IAAOT,KAAR,QAIJ,yBAKE,yBAAKvB,UAAU,4CACb,kBAACI,EAAA,EAAD,CAAUC,IAAI,kBAAkBC,QAAQ,YAI5C,kBAAC,EAAD","file":"component---src-templates-location-index-js-a50c30fdde39ffcbfb0f.js","sourcesContent":["// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n  ${props => (props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;')}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ');'\n      : null}\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ');'\n      : null}\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important;\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({ blocks }) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n      return (\n        <div className=\"item\" key={index}>\n          {block.image && <ImgMatch src={block.image} />}\n          {!block.image && (\n            <Icon\n              Name=\"basicLego\"\n              Color={block.legoColor ? block.legoColor : false}\n            />\n          )}\n          <div className=\"h6\">{block.title}</div>\n          <p>{block.text}</p>\n        </div>\n      );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Location Detail Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Spacer = styled(Flex)`\n  position: relative;\n  justify-content: center;\n`;\n\nSpacer.Line = styled.span`\n  width: 0;\n  height: 100px;\n  position: absolute;\n  bottom: -50px;\n  border-left: 1px dashed ${Theme.Color.Primary};\n  z-index: 9;\n`;\n\nexport const Scroll = styled(Box)`\n  align-self: flex-end;\n  text-align: left;\n  position: relative;\n  width: 100%;\n  height: 0;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  margin: 0 auto;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n  /* top: calc(${Theme.Root.Size} * -2); */\n  z-index: 9;\n\n  span {\n    color: ${Theme.Color.White};\n    font-size: 1rem;\n    font-weight: bold;\n    display: block;\n    margin-bottom: calc(${Theme.Root.Size} * 0.1);\n  }\n`;\n\nScroll.Positioner = styled.div`\n  width: fit-content;\n  text-align: center;\n  position: relative;\n  bottom: 100px;\n  padding-left: ${Root.Grid.Indent.X};\n`;\n\nScroll.Line = styled.div`\n  display: block;\n  width: 0;\n  height: 160px;\n  margin: 0 auto;\n\n  &:after {\n    content: '\\\\2023';\n    position: absolute;\n    bottom: 0;\n    left: calc(50% - 9px);\n    transform: rotate(90deg) translateY(18%);\n    transform-origin: 0% 100%;\n    color: ${Theme.Color.Nova};\n    font-size: 31px;\n  }\n\n  &:before {\n    position: absolute;\n    top: calc(${Theme.Base.Size.Lg} / 3);\n    bottom: 0;\n    width: 1px;\n    content: '';\n    background-image: linear-gradient(\n      ${Theme.Color.Nova} 40%,\n      rgba(255, 255, 255, 0) 0%\n    );\n    background-position: right;\n    background-size: 1px 10px;\n    background-repeat: repeat-y;\n  }\n`;\n\nexport const Decorator = styled(Box)`\n  /* overflow: hidden; */\n  z-index: 9;\n\n  .decorator__hero {\n    position: absolute;\n    top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1);\n\n    &--top {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1);\n      right: -100px;\n      width: 140px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        right: -120px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        right: -170px;\n        width: 340px;\n      }\n    }\n\n    &--bottom {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 3.3);\n      right: -40px;\n      width: 120px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        right: -70px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        right: -30px;\n        width: 310px;\n      }\n    }\n  }\n\n  .decorator__footer {\n    position: absolute;\n    /* top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1); */\n\n    &--top {\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * -2.5);\n      left: -95px;\n      width: 140px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        left: -120px;\n        width: 200px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n        left: -25px;\n        width: 180px;\n      }\n    }\n\n    &--bottom {\n      left: 50%;\n      width: 400px;\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n\n        width: 400px;\n      }\n\n      @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n\n        width: 400px;\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Accordion /> Styles:\n// Accordion component styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\nimport { Icon } from 'components/library/Icons';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AccordionContainer = styled.div`\n  width: 100%;\n`;\n\nAccordionContainer.Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .rotate {\n    transform: rotate(90deg);\n  }\n`;\n\nAccordionContainer.Icon = styled(Icon)`\n  margin-left: auto;\n  transition: transform 0.3s ease;\n\n  svg {\n    fill: ${p => p.chevronColor};\n  }\n`;\n\nAccordionContainer.Accordion = styled.button`\n  align-items: center;\n  background: transparent;\n  color: ${p => p.color};\n  cursor: pointer;\n  display: flex;\n  border: none;\n  outline: none;\n  padding: calc(${Root.Size} / 3) calc(${Root.Size} / 4);\n  transition: background-color 0.6s ease;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    padding: calc(${Root.Size} / 2) calc(${Root.Size} / 3);\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &.active {\n    color: ${p => p.colorActive};\n  }\n`;\n\nAccordionContainer.Content = styled(Box)`\n  overflow: hidden;\n  transition: max-height 0.6s ease;\n  border-bottom: 1px solid ${p => p.borderColor};\n`;\n\nAccordionContainer.Content.Inner = styled.div`\n  border-radius: calc(${Root.Radius} / 3);\n  margin-bottom: calc(${Root.Size} / 3);\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Accordion /> component:\n// Accordion with empty children for custom laouts\n// todo: style props for border, text,\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState, useRef } from 'react';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\n\n// Styles\nimport { AccordionContainer } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Accordion = ({\n  children,\n  title,\n  chevronColor,\n  color,\n  borderColor,\n  colorActive,\n}) => {\n  // Accordion hooks\n  const [setActive, setActiveState] = useState('');\n  const [setHeight, setHeightState] = useState('0px');\n  const [setRotate, setRotateState] = useState('accordion-icon');\n\n  // Reference the accordion content height\n  const content = useRef(null);\n\n  // Toggle classes / height\n  function toggleAccordion() {\n    setActiveState(setActive === '' ? 'active' : '');\n    setHeightState(\n      setActive === 'active' ? '0px' : `${content.current.scrollHeight}px`\n    );\n    setRotateState(\n      setActive === 'active' ? 'accordion-icon' : 'accordion-icon rotate'\n    );\n  }\n\n  return (\n    <AccordionContainer>\n      <AccordionContainer.Inner>\n        <AccordionContainer.Accordion\n          className={`${setActive}`}\n          onClick={toggleAccordion}\n          color={color}\n          colorActive={colorActive}\n        >\n          <Text as=\"span\" fontWeight={500} fontSize=\"1.6rem\">\n            {title}\n          </Text>\n          <AccordionContainer.Icon\n            Name=\"carat\"\n            className={`${setRotate}`}\n            chevronColor={chevronColor}\n          />\n        </AccordionContainer.Accordion>\n        <AccordionContainer.Content\n          ref={content}\n          style={{ maxHeight: `${setHeight}` }}\n          borderColor={borderColor}\n        >\n          <AccordionContainer.Content.Inner>\n            {children}\n          </AccordionContainer.Content.Inner>\n        </AccordionContainer.Content>\n      </AccordionContainer.Inner>\n    </AccordionContainer>\n  );\n};\n\nAccordion.defaultProps = {\n  chevronColor: Theme.Color.Nova,\n  color: hexToRGB(Theme.Color.Dino, 0.7),\n  colorActive: Theme.Color.Dino,\n  borderColor: hexToRGB(Theme.Color.Sunlight, 0.5),\n};\n\nexport default Accordion;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  flex-wrap: wrap;\n  justify-content: center;\n  position: relative;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-wrap: nowrap;\n  }\n\n  .h1,\n  .h2 {\n    font-weight: 600;\n    padding-bottom: calc(${Root.Size} / 3.5);\n  }\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      width: 100%;\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        width: ${props =>\n          props.Flex\n            ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n            : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n        /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n        ${props =>\n          props.Flex\n            ? null\n            : 'padding-left: calc(' +\n              Root.Grid.Gutter.Left +\n              ' + ' +\n              Root.Size +\n              ')'}\n      }\n    }\n\n    &:last-child {\n      width: 100%;\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        width: ${props =>\n          props.Flex\n            ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n            : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n        /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n        ${props =>\n          props.Flex\n            ? null\n            : 'padding-left: calc(' +\n              Root.Grid.Gutter.Left +\n              ' + ' +\n              Root.Size +\n              ')'}\n      }\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 100%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Spacer Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled.div`\n  align-self: flex-end;\n  text-align: left;\n  position: relative;\n  width: 100%;\n  height: 0;\n  top: calc(${Theme.Root.Size} * -2);\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-left: ${props => (props.indent ? `calc(${Root.Size} * 1)` : '0')};\n  }\n\n  @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n    padding-left: ${props => (props.indent ? `calc(${Root.Size} * 2.5)` : '0')};\n  }\n\n  span {\n    color: ${Theme.Color.Dino};\n    font-size: 1rem;\n    font-weight: 700 !important;\n    display: block;\n    margin-bottom: calc(${Theme.Root.Size} * 0.1);\n  }\n`;\n\nContainer.Inner = styled(Box)`\n  width: 100%;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  /* height: 0; */\n  margin: 0 auto;\n  overflow-x: visible;\n  position: relative;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-right: calc(${Root.Grid.Gutter.Right} + ${Root.Size} * 0.25);\n    padding-left: calc(${Root.Grid.Gutter.Right} + ${Root.Size} * 0.25);\n  }\n\n  @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n    padding-right: calc(${Root.Grid.Gutter.Right} + ${Root.Size} * 1);\n    padding-left: calc(${Root.Grid.Gutter.Right} + ${Root.Size} * 1);\n  }\n`;\n\nContainer.Positioner = styled.div`\n  width: fit-content;\n  text-align: center;\n  position: relative;\n  bottom: 160px;\n  z-index: 9;\n  @media (max-width: ${Theme.Base.Grid.SiteWidth}) {\n    bottom: 10vw;\n  }\n  @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n    bottom: 0;\n  }\n`;\n\nContainer.Line = styled.div`\n  display: block;\n  width: 0;\n  height: 160px;\n  margin: 0 auto;\n  @media (max-width: ${Theme.Base.Grid.SiteWidth}) {\n    height: 10vw;\n  }\n\n  &:after {\n    content: '\\\\2023';\n    position: absolute;\n    bottom: 0;\n    left: calc(50% - 9px);\n    transform: rotate(90deg) translateY(18%);\n    transform-origin: 0% 100%;\n    color: ${Theme.Color.Nova};\n    font-size: 31px;\n  }\n\n  &:before {\n    position: absolute;\n    top: calc(${Theme.Base.Size.Lg} / 3);\n    bottom: 0;\n    width: 1px;\n    content: '';\n    background-image: linear-gradient(\n      ${Theme.Color.Nova} 40%,\n      rgba(255, 255, 255, 0) 0%\n    );\n    background-position: right;\n    background-size: 1px 10px;\n    background-repeat: repeat-y;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Spacer /> Component:\n// Vertical dashed spacer\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Spacer = ({ children, indent }) => (\n  <Container indent={indent}>\n    <Container.Inner>\n      <Container.Positioner>\n        <span>{children}</span>\n        <Container.Line />\n      </Container.Positioner>\n    </Container.Inner>\n  </Container>\n);\n\nSpacer.defaultProps = {};\n\nexport default Spacer;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SpacerCentered Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled(Flex)`\n  position: relative;\n  justify-content: center;\n`;\n\nContainer.Line = styled.div`\n  display: block;\n  margin: 0 auto;\n  position: absolute;\n  bottom: -50px;\n  width: 0;\n  height: 120px;\n  z-index: 9;\n\n  &:before {\n    position: absolute;\n    top: calc(${Theme.Base.Size.Lg} / 3);\n    bottom: 0;\n    width: 1px;\n    content: '';\n    background-image: linear-gradient(\n      ${Theme.Color.Primary} 40%,\n      rgba(255, 255, 255, 0) 0%\n    );\n    background-position: right;\n    background-size: 1px 10px;\n    background-repeat: repeat-y;\n  }\n\n  /* &:after {\n    content: '\\\\2023';\n    position: absolute;\n    bottom: 0;\n    left: calc(50% - 9px);\n    transform: rotate(90deg) translateY(18%);\n    transform-origin: 0% 100%;\n    color: ${Theme.Color.Nova};\n    font-size: 31px;\n  } */\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <SpacerCentered /> Component:\n// Vertical centered dashed spacer\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Centered = () => (\n  <Container>\n    <Container.Line />\n  </Container>\n);\n\nexport default Centered;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationHero /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Hero = styled(Box)`\n  background: ${Theme.Color.Background};\n  padding-top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 2);\n  padding-bottom: calc(${Theme.Root.Size} * 1.5);\n  text-align: left;\n  overflow: hidden;\n  position: relative;\n`;\n\nHero.Inner = styled(Box)`\n  width: 100%;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n  margin: 0 auto;\n  position: relative;\n  padding-right: ${Root.Grid.Gutter.Right};\n  padding-left: ${Root.Grid.Gutter.Left};\n  overflow-x: visible;\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n  }\n`;\n\nHero.Tags = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: calc(${Theme.Root.Size} / 8);\n\n  li {\n    color: ${Theme.Color.Deepsea};\n    text-transform: uppercase;\n    letter-spacing: calc(${Theme.Root.Size} * 0.05);\n    font-weight: 500;\n    font-size: 0.8rem;\n    padding: 0 calc(${Theme.Root.Rem} * 0);\n    margin-bottom: calc(${Theme.Root.Rem} * 0.8);\n\n    @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 0.9rem;\n      /* padding: 0 calc(${Theme.Root.Rem} * 0); */\n    }\n\n    &:after {\n      content: '—';\n      color: ${Theme.Color.Sunset};\n      margin: 0 calc(${Theme.Root.Size} / 6);\n    }\n\n    &:last-child {\n      \n      &:after {\n        content: '';\n      }\n    }\n\n    a {\n      color: ${Theme.Color.Primary};\n    }\n  }\n`;\n\nHero.Heading = styled.h2`\n  color: ${Theme.Color.Primary};\n\n  span {\n    color: ${Theme.Color.Nova};\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Location Hero section:\n// Location detail template coordinator accordion\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\n\n// Styles\nimport { Hero } from './styles.scss';\nimport { Decorator } from '../../templates/Location/styles.scss';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationHero = ({ cities, pageContext }) => {\n  // Check our County names if they contain 'County'\n  const countyClean = countyName => {\n    if (countyName.toLowerCase().includes('county')) {\n      return countyName;\n    } else {\n      return countyName + ' County';\n    }\n  };\n\n  // Create page name\n  const contextualPageName = () => {\n    if (pageContext != false) {\n      if (pageContext.isCounty == true) {\n        return (\n          countyClean(pageContext.name) + ', ' + pageContext.parentState.name\n        );\n      } else if (pageContext.isCostCode == true) {\n        return pageContext.cost_code_name + ', ' + pageContext.parentState.name;\n      } else {\n        return pageContext.name;\n      }\n    } else {\n      return 'a place near you';\n    }\n  };\n\n  // Create slugs\n  const programsSlug =\n    pageContext.isCounty == true\n      ? slugify(pageContext.parentState.name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.cost_code_name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.name.toLowerCase())\n      : pageContext.isCostCode == true\n      ? slugify(pageContext.parentState.name.toLowerCase()) +\n        '/' +\n        slugify(pageContext.cost_code_name.toLowerCase())\n      : slugify(pageContext.name.toLowerCase());\n\n  return (\n    <Hero>\n      <Decorator>\n        <div className=\"decorator__hero decorator__hero--top\">\n          <ImgMatch src=\"cloud-big.png\" AltText=\"Cloud\" />\n        </div>\n\n        <div className=\"decorator__hero decorator__hero--bottom\">\n          <ImgMatch src=\"cloud-big.png\" AltText=\"Cloud\" />\n        </div>\n      </Decorator>\n      <Hero.Inner>\n        {/* <Box width={1} px={Root.Grid.Indent.X}>\n          <Hero.Tags>\n            <li>\n              <Link to={'/'}>Robotics</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Intro to STEM</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Gaming</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Advanced Engineering</Link>\n            </li>\n            <li>\n              <Link to={'/'}>Engineering Themes</Link>\n            </li>\n          </Hero.Tags>\n        </Box> */}\n        <Box width={1} px={Root.Grid.Indent.X}>\n          <Hero.Heading>\n            STEM Education &amp;\n            <br />\n            Engineering in <span>{contextualPageName()}</span>\n          </Hero.Heading>\n          <Box mr={1} mb={[1, 0]} display=\"inline-block\">\n            <Btn\n              Destination={'/programs/' + programsSlug}\n              Label=\"View Programs\"\n              BgColor={Theme.Color.Nova}\n              TextColor={Theme.Color.White}\n            />\n          </Box>\n          <Box display=\"inline-block\">\n            <Btn\n              Destination={'/locations/' + programsSlug + '#coordinators'}\n              Label=\"Contact Manager\"\n              BgColor={Theme.Color.Blush}\n              TextColor={Theme.Color.Primary}\n            />\n          </Box>\n        </Box>\n      </Hero.Inner>\n    </Hero>\n  );\n};\n\nexport default LocationHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Location Coordinator Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Title = styled(Box)`\n  span {\n    color: ${Theme.Color.Dino};\n    font-weight: 600;\n\n    @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n      position: sticky;\n      top: calc(${Theme.Root.Nav.Size} + ${Theme.Root.Size} * 1);\n    }\n  }\n`;\n\nexport const Article = styled.div`\n  border-radius: calc(${Root.Radius} / 2);\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  background: ${Theme.Color.White};\n  padding: calc(${Root.Size} / 2);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    padding: calc(${Root.Size} / 3);\n  }\n`;\n\nArticle.Info = styled.div`\n  display: flex;\n  padding-left: calc(${Root.Size} / 2);\n  width: 75%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    padding-left: calc(${Root.Size} / 3);\n    width: 85%;\n  }\n`;\n\nArticle.Figure = styled.figure`\n  margin: 0;\n  width: 25%;\n  height: 25%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    width: 15%;\n    height: 15%;\n  }\n\n  .gatsby-image-wrapper {\n    border-radius: calc(${Root.Radius} * 6);\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nArticle.Info.Details = styled.div`\n  color: ${Theme.Color.Nova};\n  display: block;\n  font-weight: 500;\n  margin-bottom: calc(${Root.Size} / 4);\n  width: 100%;\n  text-transform: capitalize;\n\n  span {\n    color: ${Theme.Color.Dino};\n    margin-left: calc(${Root.Size} / 2);\n  }\n`;\n\nArticle.Info.Name = styled.div`\n  color: ${Theme.Color.Deepsea};\n  display: block;\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin-top: calc(${Root.Size} / 1);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    margin-top: 0;\n  }\n`;\n\nArticle.Info.Contact = styled.div`\n  align-self: flex-end;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${Theme.Color.Nova};\n  font-weight: 500;\n  margin-top: calc(${Root.Size} / 1);\n  width: 100%;\n\n  @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n    flex-direction: row;\n  }\n\n  span {\n    margin-bottom: calc(${Root.Size} / 3);\n    display: block;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    @media (min-width: ${Base.Media.Width.Sm + 'px'}) {\n      margin-bottom: 0;\n    }\n\n    a {\n      color: ${Theme.Color.Nova};\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationCoordinators /> section:\n// Location detail template coordinator accordion\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\nimport Accordion from 'components/library/Accordion';\n\n// Styles\nimport { Title, Article } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationCoordinators = ({ pageContext }) => {\n  // County / State conditional\n  const countyState = pageContext.isCounty\n    ? pageContext.name + ', ' + pageContext.parentState.name\n    : pageContext.name;\n\n  return (\n    <Section textAlign=\"left\">\n      {/* todo: make styled components */}\n      <Flex flexWrap=\"wrap\">\n        <Title\n          width={[1, 1, 1 / 2, 4 / 10]}\n          pr={[0, 0, 0, 'calc(var(--Size) * 2)']}\n          pb={'var(--Size)'}\n        >\n          <span className=\"h2\">Coordinators in {countyState}</span>\n        </Title>\n        <Box width={[1, 1, 1 / 2, 6 / 10]}>\n          {pageContext.managers.map(manager => (\n            <Accordion\n              key={manager.node.id}\n              title={manager.node.cost_code_name}\n            >\n              <Article>\n                <Article.Figure>\n                  <ImgMatch\n                    src=\"avatar-yoda.jpg\"\n                    AltText=\"PlayWell program state coordinator\"\n                  />\n                </Article.Figure>\n                <Article.Info>\n                  <Flex flexWrap=\"wrap\">\n                    <Article.Info.Details>\n                      {manager.node.state}\n                      {/* <span>{manager.node.cost_code}</span> */}\n                    </Article.Info.Details>\n                    <Article.Info.Name fontSize=\"1.6rem\">\n                      {manager.node.manager}\n                    </Article.Info.Name>\n                    <Article.Info.Contact>\n                      <span>\n                        <a href={'mailto:' + manager.node.email}>\n                          {manager.node.email}\n                        </a>\n                      </span>\n                      {/* <span>\n                        <a href={'tel:' + manager.node.cell_number}>{manager.node.cell_number}</a>\n                      </span>\n                      <span>\n                        <a href=\"/\">More</a>\n                      </span> */}\n                    </Article.Info.Contact>\n                  </Flex>\n                </Article.Info>\n              </Article>\n            </Accordion>\n          ))}\n        </Box>\n      </Flex>\n    </Section>\n  );\n};\n\nexport default LocationCoordinators;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// LocationSplitSections.js:\n// Location detail page split sections\n// todo: clean up, typography\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst LocationSplitSection = () => (\n  <>\n    <SplitSection Flex=\"row\">\n      <Block\n        Style=\"centered\"\n        BgColor={Theme.Color.White}\n        BgMatch=\"do-it-yourself.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        Width={0.5}\n        JustifyContent=\"center\"\n      />\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <Text as=\"h6\" color=\"Galaxy\">\n          Do it yourself\n        </Text>\n        <Text as=\"h2\" color=\"Sunset\">\n          Host Your Own Program\n        </Text>{' '}\n        <Text as=\"p\" className=\"p-lg\" color=\"Galaxy\">\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n      </Block>\n    </SplitSection>\n\n    <SplitSection Flex=\"row-reverse\">\n      <Block\n        Style=\"centered\"\n        BgColor={Theme.Color.White}\n        BgMatch=\"power-of-play.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        Width={0.5}\n      />\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <Text as=\"h6\" color=\"Galaxy\">\n          Playing since 1997\n        </Text>\n        <Text as=\"h2\" color=\"Sunset\">\n          Creativity, confidence &amp; collaboration.\n        </Text>{' '}\n        <Text as=\"p\" className=\"p-lg\" color=\"Galaxy\">\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n      </Block>\n    </SplitSection>\n  </>\n);\n\nexport default LocationSplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// LocationSplitSections.js:\n// Location detail page split sections\n// todo: clean up <components />, typography\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React, { useState } from 'react';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst LocationPrograms = () => (\n  <>\n    <SplitSection Flex=\"row\">\n      <Block\n        Padding={[2, 2, 2, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.Primary}\n        TextColor={Theme.Color.White}\n      >\n        <Text as=\"span\" fontSize={[1, 2, 2]} fontWeight={700} mb={1}>\n          Playing anywhere\n        </Text>\n        <Text as=\"h2\">Find a program near you</Text>{' '}\n        <Text as=\"p\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n          Our assessments measured three goals including: student's knowledge of\n          STEM terms or concepts, ability to generalize information, and\n          increasing positve feeling towards STEM subjects.\n        </Text>\n        {/* <Btn\n          Label=\"Explore Programs\"\n          Destination=\"/menu\"\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n        /> */}\n      </Block>\n      <Block\n        Padding={[4, 2, 4, 2]}\n        Width={0.5}\n        BgColor={Theme.Color.Sunset}\n        TextColor={Theme.Color.White}\n      >\n        <Text as=\"span\" fontSize={[1, 2, 2]} fontWeight={700} mb={1}>\n          Do it yourself\n        </Text>\n        <Text as=\"h2\">Host Your Own Program</Text>{' '}\n        <Text as=\"p\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n          Through LEGO® inspired classes sparking “Aha!” moments, we help kids\n          grasp fundamental principles of engineering and physics. The\n          experience boosts their confidence, creativity and ability to\n          collaborate.\n        </Text>\n        {/* <Btn\n          Label=\"Learn How\"\n          Destination=\"/menu\"\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n        /> */}\n      </Block>\n    </SplitSection>\n  </>\n);\n\nexport default LocationPrograms;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Quote styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const QuoteContainer = styled(Section)``;\n\nQuoteContainer.Quote = styled(Text)`\n  position: relative;\n  font-weight: 600;\n\n  &:before {\n    content: '\"';\n    color: ${Theme.Color.Primary};\n    font-size: 3rem;\n    position: absolute;\n    top: -40px;\n    left: -10px;\n\n    @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n      left: -20px;\n    }\n  }\n\n  &:after {\n    content: '\"';\n    color: ${Theme.Color.Primary};\n    font-size: 3rem;\n    position: absolute;\n    bottom: -60px;\n    right: -10px;\n\n    @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n      right: -20px;\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LocationEvents styles:\n// Location template events section styling\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Events = styled(Box)`\n  display: flex;\n  flex-wrap: wrap;\n  background: ${Theme.Color.Background};\n  border-top: 1px solid ${hexToRGB(Theme.Color.Nova, 0.3)};\n  padding-top: calc(${Root.Grid.Gutter.Top} * 4);\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <Quote /> section:\n// Full width quote section\n// todo: break quote down into a component\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\n\n// Styles\nimport { QuoteContainer } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Quote = ({ color, children }) => {\n  // Render page\n  return (\n    <QuoteContainer>\n      <Box px={['10%', '14%', '16%', '20%']}>\n        <QuoteContainer.Quote className=\"h2\" color={color}>\n          {children}\n        </QuoteContainer.Quote>\n      </Box>\n    </QuoteContainer>\n  );\n};\n\nQuote.defaultProps = {\n  color: 'Sunset',\n};\n\nexport default Quote;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationIntro /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Intro = styled(Section)``;\n\nIntro.Inner = styled(Flex)`\n  flex-direction: column;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  max-width: ${Theme.Base.Grid.ReadingWidth};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationIntro /> section:\n// Location detail template introduction\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Text } from 'components/library/Elements';\n\n// Styles\nimport { Intro } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationIntro = ({ pageContext }) => {\n  const countyState = pageContext.isCounty\n    ? pageContext.name + ', ' + pageContext.parentState.name + \"'s\"\n    : pageContext.name + \"'s\";\n\n  return (\n    <Intro bg=\"Cream\" textAlign=\"center\">\n      <Intro.Inner pt={[2, 2, 4, 4]} pb={[1, 1, 2, 2]}>\n        <Text as=\"p\" color=\"Nova\" className=\"lead\">\n          {countyState} Leading STEM Education &amp; Engineering Programs\n        </Text>\n        <Text as=\"p\" color=\"Galaxy\" className=\"lead\">\n          Ut vehicula dictum tristique. Cras at sem nec risus sollicitudin\n          varius. Proin ultrices metus arcu, ut lacinia libero ornare eget.\n          Morbi orci mi, scelerisque a justo quis, euismod sollicitudin dui.\n          Duis convallis magna eget eleifend tempor. Ut non lobortis metus.\n          Donec sit amet vulputate risus. Vivamus et lacinia ante.\n        </Text>\n      </Intro.Inner>\n    </Intro>\n  );\n};\n\nexport default LocationIntro;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <LocationPlayCenter /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const Container = styled(Section)`\n  position: relative;\n`;\n\nContainer.Overflow = styled.div`\n  overflow: hidden;\n`;\n\nContainer.Image = styled.div`\n  width: 547px;\n  overflow: hidden;\n  position: absolute;\n  right: 0;\n  top: -300px;\n\n  .img {\n    width: 587px;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <LocationPlayCenter /> section:\n// Location detail template Play Center callout\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\nimport Btn from 'components/library/Btn';\nimport Section from 'components/library/Elements/Section';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport { Container } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationPlayZone = () => (\n  <Container textAlign=\"left\" pt={[8, 8, 12, 12]} indent>\n    <Container.Image>\n      <ImgMatch src=\"lego-ladder.png\" AltText=\"Cloud\" />\n    </Container.Image>\n    <Box width={[1, 6 / 10, 1 / 2, 4 / 10]}>\n      <Text className=\"h6\" as=\"span\" color=\"Galaxy\" fontWeight={700} mb={1}>\n        Do it yourself\n      </Text>\n      <Text as=\"h2\" color=\"Sunset\">\n        Build Your Own World of Opportunity\n      </Text>\n      <Text as=\"p\" color=\"Galaxy\" fontSize={[0, 1, 1]} mt={[1, 1, 0]} mb={1}>\n        Bring your kid over or bring out your inner kid with some of our online\n        activities to feed your imagination.\n      </Text>\n      {/* <Btn\n        Label=\"Play Zone\"\n        Destination=\"/menu\"\n        BgColor={Theme.Color.Primary}\n        TextColor={Theme.Color.White}\n      /> */}\n    </Box>\n  </Container>\n);\n\nexport default LocationPlayZone;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Location detail template:\n// This is the data template for the Locations Detail page\n// todo: Use <Spacer in place of <Scroll && add props to <Spacer\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport ImgMatch from 'components/core/ImgMatch';\nimport Section from 'components/library/Elements/Section';\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport SpacerCentered from 'components/library/Spacer/Centered';\nimport Spacer from 'components/library/Spacer';\nimport LegoList from 'components/library/Section/LegoList';\n\n// Sections\nimport LocationHero from 'sections/LocationHero';\nimport LocationCoordinators from 'sections/LocationCoordinators';\nimport LocationSplitSection from 'sections/LocationSplitSection';\nimport LocationPrograms from 'sections/LocationPrograms';\nimport LocationEvents from 'sections/LocationEvents';\nimport Quote from 'sections/Quote';\nimport LocationIntro from 'sections/LocationIntro';\nimport LocationPlayZone from 'sections/LocationPlayZone';\n\n// Styles\nimport { Hero, Intro, Scroll, Decorator } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Props\nconst ThemeProps = {\n  BgColor: Theme.Color.Background,\n  PrimaryColor: Theme.Color.Dino,\n  SecondaryColor: Theme.Color.Primary,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Render Page\nconst LocationDetail = ({ pageContext }) => {\n  // For Debugging Purposes only\n  // console.log(pageContext);\n  // console.log(pageContext.managers.manager);\n\n  // Build Page\n  return (\n    <Layout {...ThemeProps}>\n      <LocationHero pageContext={pageContext} />\n\n      <Section pt={0} pb={0} fullWidth>\n        <ImgMatch\n          src=\"locations-hero.jpg\"\n          AltText=\"STEM Education &amp; Engineering in\"\n        />\n      </Section>\n\n      <SpacerCentered />\n\n      <LocationIntro pageContext={pageContext} />\n      <LocationSplitSection />\n      <LocationCoordinators pageContext={pageContext} id=\"coordinators\" />\n\n      {/* <LocationEvents /> */}\n\n      <Section bg=\"White\">\n        <LegoList\n          blocks={[\n            {\n              title: 'Creative Collaboration',\n              text:\n                'A greater sense of understanding and connection between your staff, as they will now know how others play, and in turn, how they work best.',\n              legoColor: 'orange',\n            },\n            {\n              title: 'New Perspectives',\n              text:\n                'A willingness to tackle problems from a play perspective, embracing failure as part of the process of finding the solution.',\n              legoColor: 'purple',\n            },\n            {\n              title: 'Staff Morale',\n              text:\n                'A rejuvenated staff who rediscovers what they find fun about their job and their organization.',\n              legoColor: 'blue',\n            },\n          ]}\n        />\n      </Section>\n\n      <Quote color=\"Sunset\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla viverra\n        enim sed magna vestibulum, nec imperdiet orci egestas. Sed in magna\n        sapien.\n      </Quote>\n\n      <LocationPrograms />\n\n      <Scroll>\n        <Scroll.Positioner>\n          <span>Play</span>\n          <Scroll.Line />\n        </Scroll.Positioner>\n      </Scroll>\n\n      <Decorator\n        css={css`\n          position: relative;\n        `}\n      >\n        <div className=\"decorator__footer decorator__footer--top\">\n          <ImgMatch src=\"cloud-small.png\" AltText=\"Cloud\" />\n        </div>\n      </Decorator>\n\n      <LocationPlayZone />\n\n      {/* <Decorator>\n      <div className=\"decorator__footer decorator__footer--bottom\">\n        <ImgMatch src=\"volcano.png\" AltText=\"Cloud\" />\n      </div>\n    </Decorator> */}\n    </Layout>\n  );\n};\n\nexport default LocationDetail;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}