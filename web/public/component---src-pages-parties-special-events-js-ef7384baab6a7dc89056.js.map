{"version":3,"sources":["webpack:///./src/sections/SpecialEventsSplitLinks/SpecialEventsSplitLinks.js","webpack:///./src/pages/parties/special-events.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js","webpack:///./src/components/library/SubNav/styles.scss.js","webpack:///./src/components/library/SubNav/data.js","webpack:///./src/components/library/SubNav/SubNav.js","webpack:///./src/components/library/Section/GiantTextBlock/styles.scss.js","webpack:///./src/components/library/Section/GiantTextBlock/index.js","webpack:///./src/components/library/SplitLinks/styles.scss.js","webpack:///./src/components/library/SplitLinks/SplitLinks.js","webpack:///./src/components/library/Section/ImageWithTextBlock/styles.scss.js","webpack:///./src/components/library/Section/ImageWithTextBlock/index.js"],"names":["HostProgramSplitLinks","pageContext","themeProps","stateName","countyName","costCodeName","Section","bg","BgColor","SplitLinks","title","message","to","first","last","HeroProps","Theme","Color","Ocean","color","White","playButton","playButtonBg","Nova","gear","gearFill","Dino","subNavColor","ThemeProps","PrimaryColor","SecondaryColor","TertiaryColor","Primary","WhoWhyPage","Layout","SplitHero","subNav","label","link","active","pr","Btn","Label","TextColor","BasicSection","CenteredTitle","Title","Class","PaddingBottom","Root","Size","Sunset","noPaddingTop","noPaddingBottom","noPaddingLeft","noPaddingRight","ImageWithTextBlock","Image","Header","Paragraph","reversedOrder","Background","Marquee","images","SquareFormat","Shadow","SpecialEventsSplitLinks","LegoListStyles","styled","div","Base","Media","Width","Md","LegoList","blocks","map","block","index","className","key","image","ImgMatch","src","Name","legoColor","text","MarqueeStyle","props","BgLinear","hexToRGB","Eggplant","MarqueeSlider","render","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Lg","Sm","Helmet","rel","type","href","ref","h","slider","this","children","React","Component","Container","Box","theme","Site","Nav","Flex","Link","a","Font","Transition","String","data","testNav","route","SubNav","width","px","pl","as","activeClassName","defaultProps","GiantTextBlockStyle","Grid","SiteWidth","BlockNumber","Blush","GiantTextBlock","giantText","topText","bottomText","buttonText","buttonDest","headerText","Number","Destination","CourseFooter","Explore","LinkContainer","p","borderColor","arrowColor","SplitLink","fontWeight","lineHeight","ImageWithTextBlockStyles","ButtonText","ButtonDest"],"mappings":"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","file":"component---src-pages-parties-special-events-js-ef7384baab6a7dc89056.js","sourcesContent":["// <CourseSplitLinks /> section:\n// todo: whats new link slug\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Section from 'components/library/Elements/Section';\nimport SplitLinks, { SplitLink } from 'components/library/SplitLinks';\n\n// Helpers\nimport slugify from 'helpers/slugify';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst HostProgramSplitLinks = ({\n  pageContext,\n  themeProps,\n  stateName,\n  countyName,\n  costCodeName,\n}) => {\n  // // Build our slugified strings for pretty URLs.\n  // let stateSlug = slugify(stateName);\n  // let countySlug = slugify(countyName);\n  // let costCodeSlug = slugify(costCodeName);\n  // let programSlug = slugify(pageContext.course_type_name);\n\n  // // Our pretty URL\n  // let programsLink = `/programs/${stateSlug}/${costCodeSlug}/${countySlug}`;\n  // let locationLink = `/locations/${stateSlug}/${costCodeSlug}/${countySlug}`;\n\n  // // Check our County names if they contain 'County'\n  // const countyClean = countyName => {\n  //   if (\n  //     countyName.toLowerCase().includes('county') ||\n  //     countyName.toLowerCase().includes('district')\n  //   ) {\n  //     return countyName;\n  //   } else {\n  //     return countyName + ' County';\n  //   }\n  // };\n\n  // const countyStateString = costCodeName\n  //   ? costCodeName + ', ' + pageContext.locationMeta.state.name\n  //   : stateName;\n\n  return (\n    <Section bg={themeProps.BgColor}>\n      <SplitLinks>\n        <SplitLink\n          title=\"Adults need purposeful play too\"\n          message=\"View our team building opportunities\"\n          // message={'Keep exploring programs in ' + countyStateString + '.'}\n          to=\"/\"\n          themeProps={themeProps}\n          first\n        />\n        <SplitLink\n          title=\"Want to plan birthday?\"\n          message=\"Learn about our birthday parties\"\n          to=\"/\"\n          themeProps={themeProps}\n          last\n        />\n      </SplitLinks>\n    </Section>\n  );\n};\n\nexport default HostProgramSplitLinks;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// special-events.js:\n// This is the birthday parties page of parties\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\nimport ImgMatch from 'components/core/ImgMatch';\nimport Marquee from 'components/library/Section/Marquee';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport GiantTextBlock from 'components/library/Section/GiantTextBlock';\nimport LegoList from 'components/library/Section/LegoList';\nimport ImageWithTextBlock from 'components/library/Section/ImageWithTextBlock';\nimport { FooterAngleSlice } from 'components/library/BackgroundSlice/FooterAngleSlice';\nimport { FooterCurveSlice } from 'components/library/BackgroundSlice/FooterCurveSlice';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\nimport { Box, Flex } from 'components/library/Elements';\nimport SubNav from 'components/library/SubNav';\nimport SplitHero from 'components/library/Hero/SplitHero';\n\n// Sections\nimport SpecialEventsSplitLinks from 'sections/SpecialEventsSplitLinks';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Data\n// import ImgPlaceholder from './assets/placeholder.jpg';\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.Ocean,\n  color: Theme.Color.White,\n  playButton: true,\n  playButtonBg: Theme.Color.Nova,\n  gear: true,\n  gearFill: Theme.Color.Dino,\n  subNavColor: Theme.Color.White,\n};\n\nconst ThemeProps = {\n  BgColor: Theme.Color.Ocean,\n  PrimaryColor: Theme.Color.White,\n  SecondaryColor: Theme.Color.Dino,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Render Page\nconst WhoWhyPage = () => {\n  return (\n    <Layout {...ThemeProps}>\n      <SplitHero\n        {...HeroProps}\n        subNav={[\n          { label: 'birthday parties', link: '/parties/birthday-parties' },\n          { label: 'special events', active: true, link: '/parties/special-events' },\n        ]}\n      >\n        <Box pr={[4, 8, 14]}>\n          <h2>Helping Kids and Adults Understand Through Play</h2>\n          <h6>\n            For the past 10 years, we have introduced play into Fortune 500\n            Companies Take Your Kids to Work Days.\n          </h6>\n          <Btn\n            Label=\"Request a Special Event\"\n            BgColor={Theme.Color.Nova}\n            TextColor={Theme.Color.White}\n          />\n        </Box>\n      </SplitHero>\n\n      <BasicSection BgColor={Theme.Color.White}>\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Special Events\"\n            Class=\"headline\"\n            PaddingBottom={`calc(${Root.Size} / 3.5)`}\n          ></CenteredTitle>\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Sunset}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <BasicInner noPaddingLeft noPaddingRight noPaddingBottom>\n          <ImageWithTextBlock\n            Image=\"kids-adult-playing.jpg\"\n            Header=\"Play at work\"\n            Paragraph=\"We have run our LEGO-Inspired STEM Activations for companies around the country, giving kids a chance to experience a fun-filled day at their parents' workplace.\"\n          />\n          <ImageWithTextBlock\n            reversedOrder\n            Image=\"kids-lego-boxes.jpg\"\n            Header=\"Engineers at heart\"\n            Paragraph=\"We are play engineers at heart, so we love helping kids to understand through play what their parents do at work, or enabling families to build something out of LEGO® materials that they once thought impossible.\"\n          ></ImageWithTextBlock>\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Sunset}\n      >\n        <BasicInner>\n          <CenteredTitle\n            Title=\"Our Special Events Partners\"\n            Class=\"h3\"\n            TextColor={Theme.Color.Sunset}\n          />\n        </BasicInner>\n        <Marquee\n          images={[\n            'visa.png',\n            'microsoft.png',\n            'clorox.png',\n            'google.png',\n            'pixar.jpeg',\n          ]}\n          SquareFormat\n          Shadow\n        />\n      </BasicSection>\n\n      <SpecialEventsSplitLinks themeProps={ThemeProps} />\n    </Layout>\n  );\n};\n\nexport default WhoWhyPage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({\n  blocks,\n}) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            {block.image && <ImgMatch src={block.image} />}\n            {!block.image && <Icon Name=\"basicLego\" Color={ block.legoColor ? block.legoColor : false } />}\n            <div className=\"h6\">{block.title}</div>\n            <p>{block.text}</p>\n          </div>\n        );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props => props.BgLinear ? `\n    background: linear-gradient( to top, ` + props.BgLinear + ` 75%, ${Theme.Color.Background} 75% );\n  `\n  : null};\n\n  .slick-slider {\n    ${props => props.Shadow ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      }\n    `\n    : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props => props.SquareFormat ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        ` : `\n          padding-top: 140%;\n        `};\n        \n\n        img {\n          ${props => props.SquareFormat ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          ` : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          }\n        },\n        {\n          breakpoint: (Base.Media.Width.Md + ((Base.Media.Width.Lg - Base.Media.Width.Md) / 2)),\n          settings: {\n            slidesToShow: 3,\n          }\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          }\n        },\n        {\n          breakpoint: (Base.Media.Width.Sm + ((Base.Media.Width.Md - Base.Media.Width.Sm) / 2)),\n          settings: {\n            slidesToShow: 2,\n          }\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          }\n        }\n      ]\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle\n    SquareFormat={SquareFormat}\n    Shadow={Shadow}\n    BgLinear={BgLinear}\n  >\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;","// SubNav Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// Might want to move this out to where it is used so the button can\n// be re-used without specific positioning.\nexport const Container = styled(Box)`\n  margin: 0 auto;\n  max-width: ${props => props.theme.Root.Site.Width};\n  position: absolute;\n  top: calc(${props => props.theme.Root.Size} * -1.5);\n`;\n\nexport const Nav = styled(Flex)`\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nNav.Link = styled.a`\n  color: ${props => props.theme.Color.Nova};\n  cursor: pointer;\n  font-family: ${props => props.theme.Font.Header};\n  font-size: 1.5rem;\n  transition: ${props => props.theme.Base.Transition.String};\n\n  &:hover {\n    opacity: 0.7;\n    text-decoration: none;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Navigation Transformer Component:\n// This is to transform our Navigation data into usable data.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const data = {\n  // Primary Nav\n  testNav: [\n    {\n      route: '/',\n      label: 'Who',\n    },\n    {\n      route: '/',\n      label: 'What',\n    },\n    {\n      route: '/',\n      label: 'Why',\n    },\n    {\n      route: '/',\n      label: 'How',\n    },\n  ],\n};\n","// SubNav Component:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { Container, Nav } from './styles.scss';\n\n// Data\nimport { data } from './data';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SubNav = () => (\n  <Container width={1} px={1}>\n    <Box width={[1, 1, 1, 6 / 10]} pr={[0, 0, 2, 4, 10]} pl={[0, 0, 2, 6, 9]}>\n      <Nav as=\"nav\">\n        {data.testNav.map(link => (\n          <Nav.Link\n            to={link.route}\n            key={link.label}\n            activeClassName=\"subnav--active\"\n          >\n            {link.label}\n          </Nav.Link>\n        ))}\n      </Nav>\n    </Box>\n  </Container>\n);\n\nSubNav.defaultProps = {};\n\nexport default SubNav;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlockStyle = styled.div`\n  text-align: center;\n  font-weight: 700;\n  margin: 0 auto;\n  position: relative;\n  max-width: calc(${Root.Size} * 15);\n  @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n    max-width: calc(${Root.Size} * 12);\n  }\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    max-width: calc(${Root.Size} * 11);\n  }\n\n  .h1-alt {\n    font-size: 5rem;\n  }\n\n  .headline {\n    color: ${Theme.Color.Eggplant};\n    padding: calc(${Root.Size} / 4) 0;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 6rem;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n    }\n  }\n\n  ~ .absolute-image {\n    position: absolute;\n    top: calc(${Root.Size} * -4.5);\n    width: 20%;\n    left: calc(${Root.Size} * -1);\n    height: auto;\n    transform: rotate(260deg);\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      left: calc(${Root.Size} * 0.5);\n    }\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      top: calc(${Root.Size} * -2.5);\n    }\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      display: none;\n    }\n  }\n\n  .btn .btn-inner {\n    margin-top: calc(${Root.Size} / 3);\n  }\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Giant Text Block Component:\n// This is a section for giant text sandwiched by smaller text, an optional button and an optional number\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { GiantTextBlockStyle, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlock = ({\n  giantText,\n  topText,\n  bottomText,\n  buttonText,\n  buttonDest,\n  headerText,\n  Number,\n  className,\n  children\n}) => (\n  <GiantTextBlockStyle className={className}>\n    {children}\n    { Number && <BlockNumber className=\"h1\">{Number}</BlockNumber> }\n    { headerText && <BlockNumber className=\"h1-alt\">{headerText}</BlockNumber> }\n    { topText && <div className=\"h4\">{topText}</div> }\n    { giantText && \n      <div className=\"headline txt-clr-eggplant\">\n        {giantText}\n      </div>\n    }\n    { bottomText && <div className=\"h4\">{bottomText}</div> }\n    { (buttonText && buttonDest) &&\n      <Btn\n        Label={buttonText}\n        BgColor={Theme.Color.Dino}\n        TextColor={Theme.Color.White}\n        Destination={buttonDest}\n      />\n    }\n  </GiantTextBlockStyle>\n);\n\nexport default GiantTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SplitLinks /> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex, Text } from 'components/library/Elements';\nimport Section from 'components/library/Elements/Section';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const CourseFooter = styled(Flex)`\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-align: left;\n`;\n\nCourseFooter.Explore = styled(Flex)`\n  text-align: left;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nexport const LinkContainer = styled(Flex)`\n  align-items: center;\n  flex-direction: row;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  border-right: none;\n  border-bottom: 1px dashed ${p => p.borderColor};\n  padding: calc(${Root.Size} * 0.7) calc(${Root.Size} / 2) calc(${Root.Size});\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: row;\n    justify-content: flex-end;\n    border-right: 1px dashed ${p => p.borderColor};\n    border-bottom: none;\n    padding: 0 calc(${Root.Size} * 1.5);\n  }\n\n  @media (min-width: ${Base.Media.Width.Lg + 'px'}) {\n    padding: 0 calc(${Root.Size} * 2);\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  .arrow {\n    background: rgba(0, 0, 0, 0);\n\n    span {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      width: calc(${Root.Size} * 1);\n      height: calc(${Root.Size} * 2);\n\n      @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n        justify-content: ${p =>\n        p.first ? 'flex-start' : p.last ? 'flex-end' : 'center'};\n      }\n    }\n  }\n\n  svg {\n    transition: ${Theme.Base.Transition.String};\n    transform: rotate(180deg) translateX(0);\n    stroke: ${p => p.arrowColor};\n  }\n\n  &:hover {\n    svg {\n      transform: rotate(180deg) translateX(-40%);\n    }\n  }\n\n  &:active {\n  }\n\n  @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n    svg {\n      transform: rotate(0deg) translateX(0);\n    }\n\n    &:hover {\n      svg {\n        transform: rotate(0deg) translateX(-40%);\n      }\n    }\n  }\n\n  &:last-child {\n    border-right: none;\n    border-bottom: none;\n    flex-direction: row;\n    justify-content: space-between;\n\n    @media (min-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: flex-start;\n    }\n\n    svg {\n      transform: rotate(180deg) translateX(0);\n    }\n\n    &:hover {\n      svg {\n        transform: rotate(180deg) translateX(-40%);\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// <SplitLinks /> component:\n// Pre-footer animated arrow split links\n// todo: naming, stroke color prop\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Components\nimport { Box, Text } from 'components/library/Elements';\nimport { Icon } from 'components/library/Icons';\n\n// Styles\nimport { CourseFooter, LinkContainer } from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SplitLink = ({ title, message, first, last, to, themeProps }) => (\n  <LinkContainer\n    width={[1, 1, 1 / 2]}\n    first={first}\n    last={last}\n    borderColor={themeProps.TertiaryColor}\n    arrowColor={themeProps.TertiaryColor}\n  >\n    {first && (\n      <div className=\"arrow\">\n        <Icon Name=\"nextArrow\" />\n      </div>\n    )}\n    <Link to={to}>\n      <Text\n        as=\"span\"\n        className=\"h6\"\n        fontWeight=\"600\"\n        lineHeight={[1.5]}\n        color={themeProps.SecondaryColor}\n      >\n        {title}\n      </Text>\n      <Text\n        as=\"span\"\n        className=\"h4\"\n        fontWeight=\"600\"\n        lineHeight={[1.2, 1.4]}\n        color={themeProps.TertiaryColor}\n      >\n        {message}\n      </Text>\n    </Link>\n    {last && (\n      <div className=\"arrow\">\n        <Icon Name=\"nextArrow\" />\n      </div>\n    )}\n  </LinkContainer>\n);\n\nconst SplitLinks = ({ children }) => (\n  <CourseFooter>\n    <CourseFooter.Explore as=\"article\" width={1}>\n      {children}\n    </CourseFooter.Explore>\n  </CourseFooter>\n);\n\nSplitLink.defaultProps = {\n  title: 'Keep exploring',\n  message: 'Keep exploring our programs.',\n};\n\nexport default SplitLinks;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlockStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  position: relative;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: column-reverse;\n  }\n\n  .image,\n  .text {\n    flex: 1;\n  }\n\n  .ico-gear {\n    position: absolute;\n    height: 140%;\n    width: 100%;\n    top: -20%;\n    right: -50%;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      height: 130%;\n      top: -15%;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: calc(${Root.Size} * 3);\n      top: auto;\n      bottom: calc(${Root.Size} * -1.5);\n    }\n\n    svg {\n      height: 100%;\n      width: auto;\n      fill: ${Theme.Color.Nova};\n    }\n  }\n\n  .image {\n    margin-right: calc(${Root.Size} / 4);\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: 50vw;\n      max-height: calc(${Root.Size} * 6);\n      margin-right: 0;\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n    }\n  }\n\n  .text {\n    .container {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      padding: ${Root.Size} calc(${Root.Size} * 1.5);\n      max-width: calc(${Root.Size} * 10);\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        padding: calc(${Root.Size} * 0.5);\n      }\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        max-width: none;\n      }\n\n      .h3 {\n        font-weight: 700;\n        padding-bottom: calc(${Root.Size} / 3.5);\n      }\n\n      p {\n        color: ${Theme.Color.Dino};\n      }\n    }\n  }\n\n  ${props =>\n    props.reversedOrder\n      ? `\n        flex-direction: row-reverse;\n        .container {\n          margin: 0 auto;\n        }\n        .image {\n          margin-right: 0;\n          margin-left: calc(${Root.Size} / 4);\n          @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n            margin-left: 0;\n          }\n        }\n    `\n      : null};\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Image Section Block Component:\n// This is a section for two half width components, one of a rectangular\n// image and the other of a number, headline and text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { ImageWithTextBlockStyles, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlock = ({\n  reversedOrder,\n  Image,\n  Number,\n  Header,\n  Paragraph,\n  children,\n  ButtonText,\n  ButtonDest\n}) => (\n  <ImageWithTextBlockStyles reversedOrder={reversedOrder}>\n    {children}\n    <div className=\"image\">\n      <ImgMatch src={Image} />\n    </div>\n    <div className=\"text\">\n      <div className=\"container\">\n        <BlockNumber className=\"h1\">{Number}</BlockNumber>\n        <div className=\"h3\">{Header}</div>\n        <p className=\"p-lg\">{Paragraph}</p>\n      </div>\n      {/*(ButtonText && ButtonDest) &&\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      */}\n    </div>\n  </ImageWithTextBlockStyles>\n);\n\nexport default ImageWithTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}