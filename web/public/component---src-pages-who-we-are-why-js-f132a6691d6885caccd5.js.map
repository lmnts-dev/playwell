{"version":3,"sources":["webpack:///./src/components/library/Section/TextOverImage/styles.scss.js","webpack:///./src/components/library/Section/TextOverImage/index.js","webpack:///./src/pages/who-we-are/why.js","webpack:///./src/components/library/Section/LegoList/styles.scss.js","webpack:///./src/components/library/Section/LegoList/index.js","webpack:///./src/components/library/Section/Marquee/styles.scss.js","webpack:///./src/components/library/Section/Marquee/index.js","webpack:///./src/components/library/SubNav/styles.scss.js","webpack:///./src/components/library/SubNav/data.js","webpack:///./src/components/library/SubNav/SubNav.js","webpack:///./src/components/library/Section/GiantTextBlock/styles.scss.js","webpack:///./src/components/library/Section/GiantTextBlock/index.js","webpack:///./src/components/library/Section/TextWithManyImages/styles.scss.js","webpack:///./src/components/library/Section/TextWithManyImages/index.js","webpack:///./src/components/library/Section/ImageWithTextBlock/styles.scss.js","webpack:///./src/components/library/Section/ImageWithTextBlock/index.js"],"names":["TextOverImageStyle","styled","div","Root","Size","Theme","Color","Eggplant","TextOverImage","Image","ButtonText","ButtonDest","Header","className","ImgMatch","src","Btn","Label","BgColor","Sky","TextColor","White","Destination","HeroProps","bg","Cream","color","Primary","playButton","playButtonBg","Ocean","gear","gearFill","Sunset","subNavColor","Nova","arrowColor","ThemeProps","PrimaryColor","SecondaryColor","TertiaryColor","OverflowHidden","GiantTextBlock","GiantText","Base","Media","Width","Sm","WhoWhyPage","Layout","SplitHero","subNav","label","link","active","BasicSection","Background","noPaddingTop","noPaddingBottom","BorderBottomVertical","BorderTopVertical","CenteredTitle","Title","Class","Name","noPaddingLeft","noPaddingRight","ImageWithTextBlock","Number","Paragraph","reversedOrder","wideWidth","topText","giantText","bottomText","BorderMiddle","Marquee","images","Shadow","Dino","LegoList","blocks","title","text","legoColor","Blush","TextWithManyImages","Text","Images","LegoListStyles","Md","map","block","index","key","image","MarqueeStyle","props","BgLinear","hexToRGB","SquareFormat","MarqueeSlider","render","settings","speed","autoplay","autoplaySpeed","centerMode","cssEase","slidesToShow","slidesToScroll","variableWidth","infinite","initialSlide","arrows","buttons","responsive","breakpoint","Lg","Helmet","rel","type","href","ref","h","slider","this","children","React","Component","Container","Box","theme","Site","Nav","Flex","Link","a","Font","Transition","String","data","testNav","route","SubNav","width","px","pr","pl","as","to","activeClassName","defaultProps","GiantTextBlockStyle","Grid","SiteWidth","BlockNumber","buttonText","buttonDest","headerText","TextWithManyImagesStyle","ImageWithTextBlockStyles"],"mappings":"6NAaaA,EAAqBC,IAAOC,IAAV,qFAAGD,CAAH,+dAIbE,IAAKC,KAAoBD,IAAKC,KAI1BD,IAAKC,KAEAD,IAAKC,KAyBNC,IAAMC,MAAMC,UCDvBC,EAxBc,SAAC,GAAD,IAC3BC,EAD2B,EAC3BA,MACAC,EAF2B,EAE3BA,WACAC,EAH2B,EAG3BA,WACAC,EAJ2B,EAI3BA,OAJ2B,OAM3B,kBAACZ,EAAD,KACE,yBAAKa,UAAU,oBACb,kBAACC,EAAA,EAAD,CAAUC,IAAKN,KAEjB,kBAAC,IAAD,KACE,yBAAKI,UAAU,MAAMD,GACnBF,GAAcC,GACd,kBAACK,EAAA,EAAD,CACEC,MAAOP,EACPQ,QAASb,IAAMC,MAAMa,IACrBC,UAAWf,IAAMC,MAAMe,MACvBC,YAAaX,O,0ECEjBY,EAAY,CAChBC,GAAInB,IAAMC,MAAMmB,MAChBC,MAAOrB,IAAMC,MAAMqB,QACnBC,YAAY,EACZC,aAAcxB,IAAMC,MAAMwB,MAC1BC,MAAM,EACNC,SAAU3B,IAAMC,MAAM2B,OACtBC,YAAa7B,IAAMC,MAAM6B,KACzBC,WAAY/B,IAAMC,MAAM6B,MAGpBE,EAAa,CACjBnB,QAASb,IAAMC,MAAMmB,MACrBa,aAAc,QACdC,eAAgBlC,IAAMC,MAAMqB,QAC5Ba,cAAenC,IAAMC,MAAMqB,SAMvBc,EAAiBxC,IAAOC,IAAV,0EAAGD,CAAH,kCAKdyC,EAAiBzC,IAAO0C,KAAV,0EAAG1C,CAAH,oEAGO2C,IAAKC,MAAMC,MAAMC,GAAK,MA6KlCC,UArKI,WACjB,OACE,kBAACC,EAAA,EAAWZ,EACV,kBAACa,EAAA,EAAD,iBACM3B,EADN,CAEE4B,OAAQ,CACN,CAAEC,MAAO,MAAOC,KAAM,mBACtB,CAAED,MAAO,MAAOE,QAAQ,EAAMD,KAAM,mBACpC,CAAED,MAAO,MAAOC,KAAM,mBACtB,CAAED,MAAO,UAAWC,KAAM,0BAG5B,gFACA,iFAGF,kBAACE,EAAA,EAAD,CACErC,QAASb,IAAMC,MAAMkD,WACrBpC,UAAWf,IAAMC,MAAMe,MACvBoC,cAAY,EACZC,iBAAe,EACfC,sBAAoB,GAEpB,kBAAC,EAAD,CACElD,MAAM,eACNG,OAAO,oEACPF,WAAW,YACXC,WAAW,OAIf,kBAAC4C,EAAA,EAAD,CAAcrC,QAASb,IAAMC,MAAMkD,WAAYI,mBAAiB,GAC9D,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAeC,MAAM,aAAaC,MAAM,YACtC,yBAAKlD,UAAU,kBACb,kBAAC,IAAD,CAAMmD,KAAK,UACX,kBAAClD,EAAA,EAAD,CAAUC,IAAI,kBAMtB,kBAAC0B,EAAD,KACE,kBAACc,EAAA,EAAD,CACErC,QAASb,IAAMC,MAAMkD,WACrBpC,UAAWf,IAAMC,MAAM2B,OACvBwB,cAAY,EACZC,iBAAe,GAEf,kBAAC,IAAD,CAAYO,eAAa,EAACC,gBAAc,GACtC,kBAACC,EAAA,EAAD,CACE1D,MAAM,YACNG,OAAO,+BACPwD,OAAO,KACPC,UAAU,uJAIZ,kBAACF,EAAA,EAAD,CACEG,eAAa,EACb7D,MAAM,YACNG,OAAO,iDACPwD,OAAO,KACPC,UAAU,sJAIV,kBAAC,IAAD,CAAML,KAAK,UAEb,kBAACG,EAAA,EAAD,CACE1D,MAAM,cACNG,OAAO,mDACPwD,OAAO,KACPC,UAAU,0JAQlB,kBAAC5B,EAAD,KACE,kBAACc,EAAA,EAAD,CACErC,QAASb,IAAMC,MAAMkD,WACrBpC,UAAWf,IAAMC,MAAM2B,QAEvB,kBAAC,IAAD,CAAYsC,WAAS,GACnB,kBAAC,EAAD,CACE1D,UAAU,YACVuD,OAAO,KACPI,QAAQ,6BACRC,UAAU,kDACVC,WAAW,gCAEb,yBAAK7D,UAAU,kBACb,kBAACC,EAAA,EAAD,CAAUC,IAAI,kBAMtB,kBAACwC,EAAA,EAAD,CAAcrC,QAASb,IAAMC,MAAMkD,WAAYmB,cAAY,GACzD,kBAACC,EAAA,EAAD,CACEC,OAAQ,CACN,eACA,eACA,eACA,eACA,eACA,gBAEFC,QAAM,KAIV,kBAACvB,EAAA,EAAD,CACErC,QAASb,IAAMC,MAAMkD,WACrBpC,UAAWf,IAAMC,MAAMyE,KACvBtB,cAAY,GAEZ,kBAAC,IAAD,KACE,kBAACuB,EAAA,EAAD,CACEC,OAAQ,CACN,CACEC,MAAO,yBACPC,KACE,8IACFC,UAAW,UAEb,CACEF,MAAO,mBACPC,KACE,8HACFC,UAAW,UAEb,CACEF,MAAO,eACPC,KACE,iGACFC,UAAW,aAOrB,kBAAC7B,EAAA,EAAD,CACErC,QAASb,IAAMC,MAAM+E,MACrBjE,UAAWf,IAAMC,MAAMyE,KACvBtB,cAAY,EACZC,iBAAe,GAEf,kBAAC,IAAD,CAAYQ,gBAAc,GACxB,kBAACoB,EAAA,EAAD,CACEC,KAAK,+IAGLC,OAAQ,CAAC,aAAc,gBAAiB,oB,4GCxKrCC,EAlDQxF,IAAOC,IAAV,iFAAGD,CAAH,+kBAIG2C,IAAKC,MAAMC,MAAM4C,GAAK,KAEvBvF,IAAKC,KAQFwC,IAAKC,MAAMC,MAAM4C,GAAK,KAEnBvF,IAAKC,KAcTD,IAAKC,KAUDD,IAAKC,KAKXD,IAAKC,MC1BZ4E,IAjBS,SAAC,GAAD,IACtBC,EADsB,EACtBA,OADsB,OAGtB,kBAAC,EAAD,KACGA,EAAOU,KAAI,SAACC,EAAOC,GAChB,OACE,yBAAKhF,UAAU,OAAOiF,IAAKD,GACxBD,EAAMG,OAAS,kBAACjF,EAAA,EAAD,CAAUC,IAAK6E,EAAMG,SACnCH,EAAMG,OAAS,kBAAC,IAAD,CAAM/B,KAAK,YAAY1D,QAAQsF,EAAMR,WAAYQ,EAAMR,YACxE,yBAAKvE,UAAU,MAAM+E,EAAMV,OAC3B,2BAAIU,EAAMT,a,qJCyCPa,EAjDM/F,IAAOC,IAAV,+EAAGD,CAAH,kLACd,SAAAgG,GAAK,OAAIA,EAAMC,SAAW,8CACeD,EAAMC,SADrB,SACyC7F,IAAMC,MAAMkD,WADrD,cAG1B,QAGE,SAAAyC,GAAK,OAAIA,EAAMnB,OAAN,4CAC0BqB,YAAS9F,IAAMC,MAAMC,SAAU,IADzD,gCAEYqC,IAAKC,MAAMC,MAAM4C,GAAK,mDACNS,YAAS9F,IAAMC,MAAMC,SAAU,IAH3D,oBAMT,OAGgBJ,IAAKC,KACAwC,IAAKC,MAAMC,MAAM4C,GAAK,KAKnBvF,IAAKC,MAEzB,SAAA6F,GAAK,OAAIA,EAAMG,aAAN,iCACW/F,IAAMC,MAAMe,MADvB,mGASP,SAAA4E,GAAK,OAAIA,EAAMG,aAAN,gRAQajG,IAAKC,KARlB,wB,IC7BfiG,E,oBACJ,WAAYJ,GAAO,OAEjB,YAAMA,IAFW,K,0GAKnBK,OAAA,WAAU,IAAD,OAKDC,EAAW,CACfC,MAAO,IACPC,UAAU,EACVC,cAAe,EACfC,YAAY,EACZC,QAAS,SACTC,aAAc,EACdC,eAAgB,EAChBC,eAAe,EACfC,UAAU,EACVC,aAAc,EACdC,QAAQ,EACRC,SAAS,EACTC,WAAY,CACV,CACEC,WAAYzE,IAAKC,MAAMC,MAAMwE,GAC7Bf,SAAU,CACRM,aAAc,MAGlB,CACEQ,WAAazE,IAAKC,MAAMC,MAAM4C,IAAO9C,IAAKC,MAAMC,MAAMwE,GAAK1E,IAAKC,MAAMC,MAAM4C,IAAM,EAClFa,SAAU,CACRM,aAAc,IAGlB,CACEQ,WAAYzE,IAAKC,MAAMC,MAAM4C,GAC7Ba,SAAU,CACRM,aAAc,MAGlB,CACEQ,WAAazE,IAAKC,MAAMC,MAAMC,IAAOH,IAAKC,MAAMC,MAAM4C,GAAK9C,IAAKC,MAAMC,MAAMC,IAAM,EAClFwD,SAAU,CACRM,aAAc,IAGlB,CACEQ,WAAYzE,IAAKC,MAAMC,MAAMC,GAC7BwD,SAAU,CACRM,aAAc,QAMtB,OACE,oCACE,kBAACU,EAAA,OAAD,KACE,0BAAMC,IAAI,aAAaC,KAAK,WAAWC,KAAK,0BAC5C,0BACEF,IAAI,aACJC,KAAK,WACLC,KAAK,iCAGT,kBAAC,IAAD,eAAQC,IAAK,SAAAC,GAAC,OAAK,EAAKC,OAASD,IAAQrB,GACtCuB,KAAK7B,MAAM8B,Y,GArEMC,IAAMC,WA+FnBrD,IAlBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQuB,EAAX,EAAWA,aAActB,EAAzB,EAAyBA,OAAQoB,EAAjC,EAAiCA,SAAjC,OACd,kBAAC,EAAD,CACEE,aAAcA,EACdtB,OAAQA,EACRoB,SAAUA,GAEV,kBAAC,EAAD,KACGrB,EAAOc,KAAI,SAACI,EAAOF,GAClB,OACE,yBAAKhF,UAAU,OAAOiF,IAAKD,GACzB,kBAAC/E,EAAA,EAAD,CAAUC,IAAKgF,Y,qFCjGdmC,EAAYjI,IAAOkI,KAAV,wEAAGlI,CAAH,yEAEP,SAAAgG,GAAK,OAAIA,EAAMmC,MAAMjI,KAAKkI,KAAKvF,SAEhC,SAAAmD,GAAK,OAAIA,EAAMmC,MAAMjI,KAAKC,QAG3BkI,EAAMrI,IAAOsI,KAAV,kEAAGtI,CAAH,mDAKhBqI,EAAIE,KAAOvI,IAAOwI,EAAlB,mEAAWxI,CAAX,yHACW,SAAAgG,GAAK,OAAIA,EAAMmC,MAAM9H,MAAM6B,QAErB,SAAA8D,GAAK,OAAIA,EAAMmC,MAAMM,KAAK9H,UAE3B,SAAAqF,GAAK,OAAIA,EAAMmC,MAAMxF,KAAK+F,WAAWC,UCxB9C,IAAMC,EAAO,CAElBC,QAAS,CACP,CACEC,MAAO,IACP3F,MAAO,OAET,CACE2F,MAAO,IACP3F,MAAO,QAET,CACE2F,MAAO,IACP3F,MAAO,OAET,CACE2F,MAAO,IACP3F,MAAO,SCLP4F,EAAS,kBACb,kBAACd,EAAD,CAAWe,MAAO,EAAGC,GAAI,GACvB,kBAAC,IAAD,CAAKD,MAAO,CAAC,EAAG,EAAG,EAAG,IAASE,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAAKC,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IACpE,kBAACd,EAAD,CAAKe,GAAG,OACLR,EAAKC,QAAQnD,KAAI,SAAAtC,GAAI,OACpB,kBAACiF,EAAIE,KAAL,CACEc,GAAIjG,EAAK0F,MACTjD,IAAKzC,EAAKD,MACVmG,gBAAgB,kBAEflG,EAAKD,cAQlB4F,EAAOQ,aAAe,I,kHCpBTC,EAAsBxJ,IAAOC,IAAV,qFAAGD,CAAH,2nBAKZE,IAAKC,KACFwC,IAAKC,MAAMC,MAAMwE,GAAK,KACvBnH,IAAKC,KAEJwC,IAAKC,MAAMC,MAAM4C,GAAK,KACvBvF,IAAKC,KAQdC,IAAMC,MAAMC,SACLJ,IAAKC,KACAwC,IAAKC,MAAMC,MAAMwE,GAAK,KAGtB1E,IAAKC,MAAMC,MAAM4C,GAAK,KAO/BvF,IAAKC,KAEJD,IAAKC,KAGGC,IAAMuC,KAAK8G,KAAKC,UACtBxJ,IAAKC,KAECwC,IAAKC,MAAMC,MAAMwE,GAAK,KAC7BnH,IAAKC,KAEEwC,IAAKC,MAAMC,MAAMC,GAAK,KAMxB5C,IAAKC,MAIfwJ,EAAc3J,IAAOC,IAAV,6EAAGD,CAAH,+BACbI,IAAMC,MAAM+E,OCjBR3C,IAjCe,SAAC,GAAD,IAC5B+B,EAD4B,EAC5BA,UACAD,EAF4B,EAE5BA,QACAE,EAH4B,EAG5BA,WACAmF,EAJ4B,EAI5BA,WACAC,EAL4B,EAK5BA,WACAC,EAN4B,EAM5BA,WACA3F,EAP4B,EAO5BA,OACAvD,EAR4B,EAQ5BA,UACAkH,EAT4B,EAS5BA,SAT4B,OAW5B,kBAAC0B,EAAD,CAAqB5I,UAAWA,GAC7BkH,EACC3D,GAAU,kBAACwF,EAAD,CAAa/I,UAAU,MAAMuD,GACvC2F,GAAc,kBAACH,EAAD,CAAa/I,UAAU,UAAUkJ,GAC/CvF,GAAW,yBAAK3D,UAAU,MAAM2D,GAChCC,GACA,yBAAK5D,UAAU,6BACZ4D,GAGHC,GAAc,yBAAK7D,UAAU,MAAM6D,GAClCmF,GAAcC,GACf,kBAAC9I,EAAA,EAAD,CACEC,MAAO4I,EACP3I,QAASb,IAAMC,MAAMyE,KACrB3D,UAAWf,IAAMC,MAAMe,MACvBC,YAAawI,O,mGCnCRE,EAA0B/J,IAAOC,IAAV,0FAAGD,CAAH,yiCAGb2C,IAAKC,MAAMC,MAAM4C,GAAK,KAU9BvF,IAAKC,KAAQD,IAAKC,KAAQD,IAAKC,KACrBwC,IAAKC,MAAMC,MAAMwE,GAAK,KACzBnH,IAAKC,KAAkBD,IAAKC,KACnCD,IAAKC,KAKKwC,IAAKC,MAAMC,MAAM4C,GAAK,KACzBvF,IAAKC,KAAcD,IAAKC,KAAcD,IAAKC,KACzCC,IAAMuC,KAAKxC,KAAKkH,GAQf1E,IAAKC,MAAMC,MAAM4C,GAAK,KACpBrF,IAAMuC,KAAKxC,KAAKkH,GAGlB1E,IAAKC,MAAMC,MAAM4C,GAAK,KACpBrF,IAAMuC,KAAKxC,KAAKkH,GAQhB1E,IAAKC,MAAMC,MAAM4C,GAAK,KAoBtB9C,IAAKC,MAAMC,MAAM4C,GAAK,MCvClCJ,IAlBmB,SAAC,GAAD,IAChCE,EADgC,EAChCA,OACAD,EAFgC,EAEhCA,KAFgC,OAIhC,kBAACyE,EAAD,KACE,yBAAKnJ,UAAU,WACZ0E,GAEH,yBAAK1E,UAAU,UACb,kBAACC,EAAA,EAAD,CAAUC,IAAKyE,EAAO,KACtB,yBAAK3E,UAAU,UACb,kBAACC,EAAA,EAAD,CAAUC,IAAKyE,EAAO,KACtB,kBAAC1E,EAAA,EAAD,CAAUC,IAAKyE,EAAO,U,kHCbjByE,EAA2BhK,IAAOC,IAAV,2FAAGD,CAAH,0zBAKd2C,IAAKC,MAAMC,MAAM4C,GAAK,KAepB9C,IAAKC,MAAMC,MAAMwE,GAAK,KAItB1E,IAAKC,MAAMC,MAAM4C,GAAK,KAC1BvF,IAAKC,KAELD,IAAKC,KAMZC,IAAMC,MAAM6B,KAKDhC,IAAKC,KACLwC,IAAKC,MAAMC,MAAM4C,GAAK,KAEtBvF,IAAKC,KAebD,IAAKC,KAAaD,IAAKC,KAChBD,IAAKC,KACFwC,IAAKC,MAAMC,MAAMwE,GAAK,KACzBnH,IAAKC,KAEFwC,IAAKC,MAAMC,MAAM4C,GAAK,KAMlBvF,IAAKC,KAInBC,IAAMC,MAAMyE,MAKzB,SAAAkB,GAAK,OACLA,EAAM3B,cAAN,iLAQ0BnE,IAAKC,KAR/B,wCAS2BwC,IAAKC,MAAMC,MAAM4C,GAAK,mEAK7C,QAGKkE,EAAc3J,IAAOC,IAAV,8EAAGD,CAAH,+BACbI,IAAMC,MAAM+E,OC3DRlB,IAjCmB,SAAC,GAAD,IAChCG,EADgC,EAChCA,cACA7D,EAFgC,EAEhCA,MACA2D,EAHgC,EAGhCA,OACAxD,EAJgC,EAIhCA,OACAyD,EALgC,EAKhCA,UACA0D,EANgC,EAMhCA,SANgC,EAOhCrH,WAPgC,EAQhCC,WARgC,OAUhC,kBAACsJ,EAAD,CAA0B3F,cAAeA,GACtCyD,EACD,yBAAKlH,UAAU,SACb,kBAACC,EAAA,EAAD,CAAUC,IAAKN,KAEjB,yBAAKI,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC+I,EAAD,CAAa/I,UAAU,MAAMuD,GAC7B,yBAAKvD,UAAU,MAAMD,GACrB,uBAAGC,UAAU,QAAQwD","file":"component---src-pages-who-we-are-why-js-f132a6691d6885caccd5.js","sourcesContent":["// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const TextOverImageStyle = styled.div`\n  text-align: center;\n  position: relative;\n  z-index: 1;\n  padding: calc(${Root.Size} * 2) 0 calc(${Root.Size} * 1.5) 0;\n\n  .h3 {\n    font-weight: 700;\n    max-width: calc(${Root.Size} * 10);\n    margin: 0 auto;\n    padding-bottom: calc(${Root.Size} / 4);\n  }\n\n  > div {\n    z-index: 2;\n    position: relative;\n  }\n\n  .background-image {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 1;\n    height: 100%;\n    width: 100%;\n\n    &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: ${Theme.Color.Eggplant};\n      opacity: 0.3;\n      z-index: 2;\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n      z-index: 1;\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text Over Image Section Component:\n// This is a section for centered text on a fullwidth background image that\n// has an overlay over it\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\nimport { BasicInner } from 'components/library/Section/BasicSection';\nimport Btn from 'components/library/Btn';\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { TextOverImageStyle, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const TextOverImage = ({\n  Image,\n  ButtonText,\n  ButtonDest,\n  Header,\n}) => (\n  <TextOverImageStyle>\n    <div className=\"background-image\">\n      <ImgMatch src={Image} />\n    </div>\n    <BasicInner>\n      <div className=\"h3\">{Header}</div>\n      {(ButtonText && ButtonDest) &&\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Sky}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      }\n    </BasicInner>\n  </TextOverImageStyle>\n);\n\nexport default TextOverImage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Why.js:\n// This is why portion of the who section of the site.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { Icon } from 'components/library/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport TextWithManyImages from 'components/library/Section/TextWithManyImages';\nimport Marquee from 'components/library/Section/Marquee';\nimport TextOverImage from 'components/library/Section/TextOverImage';\nimport CenteredTitle from 'components/library/Elements/CenteredTitle';\nimport GiantText from 'components/library/Section/GiantTextBlock';\nimport LegoList from 'components/library/Section/LegoList';\nimport ImageWithTextBlock from 'components/library/Section/ImageWithTextBlock';\nimport { FooterAngleSlice } from 'components/library/BackgroundSlice/FooterAngleSlice';\nimport { FooterCurveSlice } from 'components/library/BackgroundSlice/FooterCurveSlice';\nimport {\n  BasicSection,\n  BasicInner,\n} from 'components/library/Section/BasicSection';\nimport { Box, Flex } from 'components/library/Elements';\nimport SubNav from 'components/library/SubNav';\nimport SplitHero from 'components/library/Hero/SplitHero';\n\n// Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Data\n// import ImgPlaceholder from './assets/placeholder.jpg';\n\n// Props\nconst HeroProps = {\n  bg: Theme.Color.Cream,\n  color: Theme.Color.Primary,\n  playButton: true,\n  playButtonBg: Theme.Color.Ocean,\n  gear: true,\n  gearFill: Theme.Color.Sunset,\n  subNavColor: Theme.Color.Nova,\n  arrowColor: Theme.Color.Nova,\n};\n\nconst ThemeProps = {\n  BgColor: Theme.Color.Cream,\n  PrimaryColor: 'unset',\n  SecondaryColor: Theme.Color.Primary,\n  TertiaryColor: Theme.Color.Primary,\n};\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst OverflowHidden = styled.div`\n  width: 100vw;\n  overflow: hidden;\n`;\n\nconst GiantTextBlock = styled(GiantText)`\n  &.wide-word {\n    .headline {\n      @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n        font-size: 12vw;\n      }\n    }\n  }\n`;\n\n// Render Page\nconst WhoWhyPage = () => {\n  return (\n    <Layout {...ThemeProps}>\n      <SplitHero\n        {...HeroProps}\n        subNav={[\n          { label: 'who', link: '/who-we-are/who' },\n          { label: 'why', active: true, link: '/who-we-are/why' },\n          { label: 'how', link: '/who-we-are/how' },\n          { label: 'careers', link: '/who-we-are/careers' },\n        ]}\n      >\n        <h2>We provide opportunities for creative expression</h2>\n        <h6>We are passionate specialists in STEM Education.</h6>\n      </SplitHero>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.White}\n        noPaddingTop\n        noPaddingBottom\n        BorderBottomVertical\n      >\n        <TextOverImage\n          Image=\"lego-bin.jpg\"\n          Header=\"Combining the elements of fun, challenge, and learning since 1997\"\n          ButtonText=\"Our Story\"\n          ButtonDest=\"/\"\n        />\n      </BasicSection>\n\n      <BasicSection BgColor={Theme.Color.Background} BorderTopVertical>\n        <BasicInner>\n          <CenteredTitle Title=\"Our Values\" Class=\"headline\">\n            <div className=\"absolute-image\">\n              <Icon Name=\"swoop\" />\n              <ImgMatch src=\"gears.png\" />\n            </div>\n          </CenteredTitle>\n        </BasicInner>\n      </BasicSection>\n\n      <OverflowHidden>\n        <BasicSection\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Sunset}\n          noPaddingTop\n          noPaddingBottom\n        >\n          <BasicInner noPaddingLeft noPaddingRight>\n            <ImageWithTextBlock\n              Image=\"boy-2.jpg\"\n              Header=\"Build problem-solving skills\"\n              Number=\"01\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            />\n            <ImageWithTextBlock\n              reversedOrder\n              Image=\"boy-1.jpg\"\n              Header=\"Provide an opportunity for creative expression\"\n              Number=\"06\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            >\n              <Icon Name=\"gear\" />\n            </ImageWithTextBlock>\n            <ImageWithTextBlock\n              Image=\"girls-1.jpg\"\n              Header=\"Foster a greater appreciation of how things work\"\n              Number=\"03\"\n              Paragraph=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Nulla viverra enim sed magna vestibulum, nec imperdiet orci\n                egestas. Sed in magna sapien.\"\n            />\n          </BasicInner>\n        </BasicSection>\n      </OverflowHidden>\n\n      <OverflowHidden>\n        <BasicSection\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Sunset}\n        >\n          <BasicInner wideWidth>\n            <GiantTextBlock\n              className=\"wide-word\"\n              Number=\"04\"\n              topText=\"Encourage the qualities of\"\n              giantText=\"Inquisitiveness Self Reliance &amp; Self Confidence\"\n              bottomText=\"in children &amp; in everybody.\"\n            />\n            <div className=\"absolute-image\">\n              <ImgMatch src=\"gears.png\" />\n            </div>\n          </BasicInner>\n        </BasicSection>\n      </OverflowHidden>\n\n      <BasicSection BgColor={Theme.Color.Background} BorderMiddle>\n        <Marquee\n          images={[\n            'random-1.jpg',\n            'random-2.jpg',\n            'random-3.jpg',\n            'random-4.jpg',\n            'random-5.jpg',\n            'random-6.jpg',\n          ]}\n          Shadow\n        />\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Background}\n        TextColor={Theme.Color.Dino}\n        noPaddingTop\n      >\n        <BasicInner>\n          <LegoList\n            blocks={[\n              {\n                title: 'Creative Collaboration',\n                text:\n                  'A greater sense of understanding and connection between your staff, as they will now know how others play, and in turn, how they work best.',\n                legoColor: 'orange',\n              },\n              {\n                title: 'New Perspectives',\n                text:\n                  'A willingness to tackle problems from a play perspective, embracing failure as part of the process of finding the solution.',\n                legoColor: 'purple',\n              },\n              {\n                title: 'Staff Morale',\n                text:\n                  'A rejuvenated staff who rediscovers what they find fun about their job and their organization.',\n                legoColor: 'blue',\n              },\n            ]}\n          />\n        </BasicInner>\n      </BasicSection>\n\n      <BasicSection\n        BgColor={Theme.Color.Blush}\n        TextColor={Theme.Color.Dino}\n        noPaddingTop\n        noPaddingBottom\n      >\n        <BasicInner noPaddingRight>\n          <TextWithManyImages\n            Text=\"We do this in the context of fun-filled engineering and\n              architectural projects, activities that both the children and the\n              instructors enjoy.\"\n            Images={['kids-1.jpg', 'lego-head.png', 'boy-3.png']}\n          />\n        </BasicInner>\n      </BasicSection>\n    </Layout>\n  );\n};\n\nexport default WhoWhyPage;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\nconst LegoListStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n    max-width: calc(${Root.Size} * 7);\n    margin: 0 auto;\n  }\n\n  .item {\n    text-align: center;\n    margin-right: 5%;\n    flex: 1;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: 0;\n      margin-bottom: calc(${Root.Size} / 2);\n    }\n\n    &:last-of-type {\n      margin-right: 0 !important;\n      margin-bottom: 0 !important;\n    }\n\n    span.ico {\n      width: 50%;\n      height: auto;\n      display: block;\n      margin: 0 auto;\n      padding-left: 10%;\n      max-width: calc(${Root.Size} * 3);\n      svg {\n        width: 100% !important;\n        height: auto !important\n      }\n    }\n\n    .gatsby-image-wrapper {\n      width: 80%;\n      margin: 0 auto;\n      margin-bottom: calc(${Root.Size} / 3);\n    }\n\n    .h6 {\n      font-weight: bold;\n      padding: calc(${Root.Size} / 4) 0;\n    }\n  }\n`;\n\nexport default LegoListStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// LegoList Component:\n// This is a section for three components of lego, headline and text\n// with the option to add custom images to replace the logos\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport LegoListStyles from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const LegoList = ({\n  blocks,\n}) => (\n  <LegoListStyles>\n    {blocks.map((block, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            {block.image && <ImgMatch src={block.image} />}\n            {!block.image && <Icon Name=\"basicLego\" Color={ block.legoColor ? block.legoColor : false } />}\n            <div className=\"h6\">{block.title}</div>\n            <p>{block.text}</p>\n          </div>\n        );\n    })}\n  </LegoListStyles>\n);\n\nexport default LegoList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MarqueeStyle = styled.div`\n  ${props => props.BgLinear ? `\n    background: linear-gradient( to top, ` + props.BgLinear + ` 75%, ${Theme.Color.Background} 75% );\n  `\n  : null};\n\n  .slick-slider {\n    ${props => props.Shadow ? `\n      filter: drop-shadow(0px 8px 34px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        filter: drop-shadow(0px 8px 20px ${hexToRGB(Theme.Color.Eggplant, 0.2)});\n      }\n    `\n    : null};\n\n    .item {\n      padding: calc(${Root.Size} / 6);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding: 1vw;\n      }\n\n      .gatsby-image-wrapper {\n        border-radius: calc(${Root.Size} / 8);\n        height: 0 !important;\n        ${props => props.SquareFormat ? `\n          background-color: ${Theme.Color.White};         \n          padding-top: 100%;\n        ` : `\n          padding-top: 140%;\n        `};\n        \n\n        img {\n          ${props => props.SquareFormat ? `\n            position: relative;\n            width: 80% !important;\n            object-fit: contain !important;\n            height: 80% !important;\n            left: 10% !important;\n            top: 10% !important;\n          ` : `\n            border-radius: calc(${Root.Size} / 8);\n          `};\n        }\n      }\n    }\n  }\n`;\n\nexport default MarqueeStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Marquee.js: using slick\n//\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport MarqueeStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider itself.\nclass MarqueeSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Pass into Slick Settings.\n    const settings = {\n      speed: 5000,\n      autoplay: true,\n      autoplaySpeed: 0,\n      centerMode: true,\n      cssEase: 'linear',\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      variableWidth: false,\n      infinite: true,\n      initialSlide: 1,\n      arrows: false,\n      buttons: false,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Lg,\n          settings: {\n            slidesToShow: 3.5,\n          }\n        },\n        {\n          breakpoint: (Base.Media.Width.Md + ((Base.Media.Width.Lg - Base.Media.Width.Md) / 2)),\n          settings: {\n            slidesToShow: 3,\n          }\n        },\n        {\n          breakpoint: Base.Media.Width.Md,\n          settings: {\n            slidesToShow: 2.5,\n          }\n        },\n        {\n          breakpoint: (Base.Media.Width.Sm + ((Base.Media.Width.Md - Base.Media.Width.Sm) / 2)),\n          settings: {\n            slidesToShow: 2,\n          }\n        },\n        {\n          breakpoint: Base.Media.Width.Sm,\n          settings: {\n            slidesToShow: 1.5,\n          }\n        }\n      ]\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst Marquee = ({ images, SquareFormat, Shadow, BgLinear }) => (\n  <MarqueeStyle\n    SquareFormat={SquareFormat}\n    Shadow={Shadow}\n    BgLinear={BgLinear}\n  >\n    <MarqueeSlider>\n      {images.map((image, index) => {\n        return (\n          <div className=\"item\" key={index}>\n            <ImgMatch src={image} />\n          </div>\n        );\n      })}\n    </MarqueeSlider>\n  </MarqueeStyle>\n);\n\nexport default Marquee;","// SubNav Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// Might want to move this out to where it is used so the button can\n// be re-used without specific positioning.\nexport const Container = styled(Box)`\n  margin: 0 auto;\n  max-width: ${props => props.theme.Root.Site.Width};\n  position: absolute;\n  top: calc(${props => props.theme.Root.Size} * -1.5);\n`;\n\nexport const Nav = styled(Flex)`\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nNav.Link = styled.a`\n  color: ${props => props.theme.Color.Nova};\n  cursor: pointer;\n  font-family: ${props => props.theme.Font.Header};\n  font-size: 1.5rem;\n  transition: ${props => props.theme.Base.Transition.String};\n\n  &:hover {\n    opacity: 0.7;\n    text-decoration: none;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Navigation Transformer Component:\n// This is to transform our Navigation data into usable data.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const data = {\n  // Primary Nav\n  testNav: [\n    {\n      route: '/',\n      label: 'Who',\n    },\n    {\n      route: '/',\n      label: 'What',\n    },\n    {\n      route: '/',\n      label: 'Why',\n    },\n    {\n      route: '/',\n      label: 'How',\n    },\n  ],\n};\n","// SubNav Component:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { Container, Nav } from './styles.scss';\n\n// Data\nimport { data } from './data';\n\n// Components\nimport { Box, Flex } from 'components/library/Elements';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SubNav = () => (\n  <Container width={1} px={1}>\n    <Box width={[1, 1, 1, 6 / 10]} pr={[0, 0, 2, 4, 10]} pl={[0, 0, 2, 6, 9]}>\n      <Nav as=\"nav\">\n        {data.testNav.map(link => (\n          <Nav.Link\n            to={link.route}\n            key={link.label}\n            activeClassName=\"subnav--active\"\n          >\n            {link.label}\n          </Nav.Link>\n        ))}\n      </Nav>\n    </Box>\n  </Container>\n);\n\nSubNav.defaultProps = {};\n\nexport default SubNav;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlockStyle = styled.div`\n  text-align: center;\n  font-weight: 700;\n  margin: 0 auto;\n  position: relative;\n  max-width: calc(${Root.Size} * 15);\n  @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n    max-width: calc(${Root.Size} * 12);\n  }\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    max-width: calc(${Root.Size} * 11);\n  }\n\n  .h1-alt {\n    font-size: 5rem;\n  }\n\n  .headline {\n    color: ${Theme.Color.Eggplant};\n    padding: calc(${Root.Size} / 4) 0;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      font-size: 6rem;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 4rem;\n    }\n  }\n\n  ~ .absolute-image {\n    position: absolute;\n    top: calc(${Root.Size} * -4.5);\n    width: 20%;\n    left: calc(${Root.Size} * -1);\n    height: auto;\n    transform: rotate(260deg);\n    @media (min-width: ${Theme.Base.Grid.SiteWidth}) {\n      left: calc(${Root.Size} * 0.5);\n    }\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      top: calc(${Root.Size} * -2.5);\n    }\n    @media (max-width: ${Base.Media.Width.Sm + 'px'}) {\n      display: none;\n    }\n  }\n\n  .btn .btn-inner {\n    margin-top: calc(${Root.Size} / 3);\n  }\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Giant Text Block Component:\n// This is a section for giant text sandwiched by smaller text, an optional button and an optional number\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { GiantTextBlockStyle, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const GiantTextBlock = ({\n  giantText,\n  topText,\n  bottomText,\n  buttonText,\n  buttonDest,\n  headerText,\n  Number,\n  className,\n  children\n}) => (\n  <GiantTextBlockStyle className={className}>\n    {children}\n    { Number && <BlockNumber className=\"h1\">{Number}</BlockNumber> }\n    { headerText && <BlockNumber className=\"h1-alt\">{headerText}</BlockNumber> }\n    { topText && <div className=\"h4\">{topText}</div> }\n    { giantText && \n      <div className=\"headline txt-clr-eggplant\">\n        {giantText}\n      </div>\n    }\n    { bottomText && <div className=\"h4\">{bottomText}</div> }\n    { (buttonText && buttonDest) &&\n      <Btn\n        Label={buttonText}\n        BgColor={Theme.Color.Dino}\n        TextColor={Theme.Color.White}\n        Destination={buttonDest}\n      />\n    }\n  </GiantTextBlockStyle>\n);\n\nexport default GiantTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImagesStyle = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: block;\n  }\n\n  .text {\n    font-weight: 700;\n    flex: 2;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: ${Root.Size} ${Root.Size} ${Root.Size} 0;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      padding: calc(${Root.Size} / 2) calc(${Root.Size} / 2)\n        calc(${Root.Size} / 2) 0;\n      &.h4 {\n        font-size: 1.75rem;\n      }\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size}) calc(${Root.Size}) calc(${Root.Size}) 0;\n      max-width: calc(${Theme.Base.Size.Lg} * 10);\n    }\n  }\n\n  .images {\n    flex: 3;\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: calc(${Theme.Base.Size.Lg} * .75);\n      height: 50vw;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      margin-right: calc(${Theme.Base.Size.Lg} / 2);\n    }\n\n    > .gatsby-image-wrapper {\n      display: inline-block;\n      padding-top: 66.66%;\n      width: 66.66%;\n      height: 100%;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding-top: 0;\n      }\n\n      > div {\n        position: absolute;\n        padding-bottom: 0 !important;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n    }\n\n    .column {\n      width: 33.33%;\n      padding-top: 66.66%;\n      margin-left: 4px;\n      height: 100%;\n      position: relative;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        padding-top: 0;\n      }\n\n      .gatsby-image-wrapper {\n        width: 100%;\n        position: absolute !important;\n        top: 0;\n        left: 0;\n        height: calc(50% - 2px);\n\n        &:first-of-type {\n          margin-bottom: 4px;\n        }\n\n        &:last-of-type {\n          margin-top: 4px;\n          top: calc(50% - 2px);\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Many Images Section Component:\n// This is a section for two half width components, one of three square\n// imaged and the other of text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\n\n// Constants\n\n// Styles\nimport { TextWithManyImagesStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const TextWithManyImages = ({\n  Images,\n  Text,\n}) => (\n  <TextWithManyImagesStyle>\n    <div className=\"text h4\">\n      {Text}\n    </div>\n    <div className=\"images\">\n      <ImgMatch src={Images[0]} />\n      <div className=\"column\">\n        <ImgMatch src={Images[1]} />\n        <ImgMatch src={Images[2]} />\n      </div>\n    </div>\n  </TextWithManyImagesStyle>\n);\n\nexport default TextWithManyImages;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlockStyles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  position: relative;\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: column-reverse;\n  }\n\n  .image,\n  .text {\n    flex: 1;\n  }\n\n  .ico-gear {\n    position: absolute;\n    height: 140%;\n    width: 100%;\n    top: -20%;\n    right: -50%;\n    @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n      height: 130%;\n      top: -15%;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: calc(${Root.Size} * 3);\n      top: auto;\n      bottom: calc(${Root.Size} * -1.5);\n    }\n\n    svg {\n      height: 100%;\n      width: auto;\n      fill: ${Theme.Color.Nova};\n    }\n  }\n\n  .image {\n    margin-right: calc(${Root.Size} / 4);\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      height: 50vw;\n      max-height: calc(${Root.Size} * 6);\n      margin-right: 0;\n    }\n\n    .gatsby-image-wrapper {\n      height: 100%;\n    }\n  }\n\n  .text {\n    .container {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      padding: ${Root.Size} calc(${Root.Size} * 1.5);\n      max-width: calc(${Root.Size} * 10);\n      @media (max-width: ${Base.Media.Width.Lg + 'px'}) {\n        padding: calc(${Root.Size} * 0.5);\n      }\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        max-width: none;\n      }\n\n      .h3 {\n        font-weight: 700;\n        padding-bottom: calc(${Root.Size} / 3.5);\n      }\n\n      p {\n        color: ${Theme.Color.Dino};\n      }\n    }\n  }\n\n  ${props =>\n    props.reversedOrder\n      ? `\n        flex-direction: row-reverse;\n        .container {\n          margin: 0 auto;\n        }\n        .image {\n          margin-right: 0;\n          margin-left: calc(${Root.Size} / 4);\n          @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n            margin-left: 0;\n          }\n        }\n    `\n      : null};\n`;\n\nexport const BlockNumber = styled.div`\n  color: ${Theme.Color.Blush};\n  font-weight: 700;\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Text With Image Section Block Component:\n// This is a section for two half width components, one of a rectangular\n// image and the other of a number, headline and text\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport { Icon } from 'components/library/Icons';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport { ImageWithTextBlockStyles, BlockNumber } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const ImageWithTextBlock = ({\n  reversedOrder,\n  Image,\n  Number,\n  Header,\n  Paragraph,\n  children,\n  ButtonText,\n  ButtonDest\n}) => (\n  <ImageWithTextBlockStyles reversedOrder={reversedOrder}>\n    {children}\n    <div className=\"image\">\n      <ImgMatch src={Image} />\n    </div>\n    <div className=\"text\">\n      <div className=\"container\">\n        <BlockNumber className=\"h1\">{Number}</BlockNumber>\n        <div className=\"h3\">{Header}</div>\n        <p className=\"p-lg\">{Paragraph}</p>\n      </div>\n      {/*(ButtonText && ButtonDest) &&\n        <Btn\n          Label={ButtonText}\n          BgColor={Theme.Color.Nova}\n          TextColor={Theme.Color.White}\n          Destination={ButtonDest}\n        />\n      */}\n    </div>\n  </ImageWithTextBlockStyles>\n);\n\nexport default ImageWithTextBlock;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}