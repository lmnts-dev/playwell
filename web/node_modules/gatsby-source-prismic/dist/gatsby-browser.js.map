{"version":3,"file":"gatsby-browser.js","sources":["../src/common/constants.js","../src/common/utils.js","../src/common/validatePluginOptions.js","../src/browser/gatsby-browser.js"],"sourcesContent":["export const IS_BROWSER = typeof window !== 'undefined'\n\nexport const GLOBAL_STORE_KEY = '___PRISMIC___'\n\nexport const IMAGE_FIELD_KEYS = [\n  'dimensions',\n  'alt',\n  'copyright',\n  'url',\n  'localFile',\n]\n","export const isFunction = x => !!(x && x.constructor && x.call && x.apply)\n\n// See: lodash.pick\nexport const pick = fields => obj =>\n  Object.keys(obj).reduce((acc, key) => {\n    if (fields.includes(key)) acc[key] = obj[key]\n    return acc\n  }, {})\n\n// See: lodash.omit\nexport const omit = fields => obj =>\n  Object.keys(obj).reduce((acc, key) => {\n    if (!fields.includes(key)) acc[key] = obj[key]\n    return acc\n  }, {})\n\n// Maps an object to a new object with key-value pairs. Mapping function must\n// return a key-value tuple.\nexport const mapObj = fn => async obj => {\n  const entries = Object.entries(obj)\n  const pairs = await Promise.all(entries.map(x => Promise.resolve(fn(x))))\n\n  const result = {}\n\n  for (let i = 0; i < pairs.length; i++) {\n    const [k, v] = pairs[i]\n    result[k] = v\n  }\n\n  return result\n}\n","import {\n  array as yupArray,\n  mixed as yupMixed,\n  object as yupObject,\n  string as yupString,\n} from 'yup'\n\nimport { isFunction } from './utils'\n\nconst baseValidations = {\n  repositoryName: yupString()\n    .strict()\n    .required(),\n  accessToken: yupString()\n    .strict()\n    .required(),\n  linkResolver: yupMixed()\n    .test('is function', '${path} is not a function', isFunction)\n    .default(() => () => () => {}),\n  fetchLinks: yupArray()\n    .of(\n      yupString()\n        .strict()\n        .required(),\n    )\n    .default([]),\n  htmlSerializer: yupMixed()\n    .test('is function', '${path} is not a function', isFunction)\n    .default(() => () => () => {}),\n  schemas: yupObject()\n    .strict()\n    .required(),\n  lang: yupString().default('*'),\n  shouldNormalizeImage: yupMixed()\n    .test('is function', '${path} is not a function', isFunction)\n    .default(() => () => true),\n  plugins: yupArray()\n    .max(0)\n    .default([]),\n  // Default value set in validatePluginOptions below.\n  typePathsFilenamePrefix: yupString().default(`prismic-typepaths---`),\n\n  // Browser-only validations\n  pathResolver: yupMixed().test(\n    'is function',\n    '${path} is not a function',\n    x => typeof x === 'undefined' || isFunction(x),\n  ),\n  schemasDigest: yupString()\n    .strict()\n    .required(),\n}\n\nexport const validatePluginOptions = (\n  pluginOptions,\n  filterValidations = {},\n) => {\n  // Must do this here with access to pluginOptions.\n  if (pluginOptions.repositoryName)\n    baseValidations.typePathsFilenamePrefix = baseValidations.typePathsFilenamePrefix.default(\n      `prismic-typepaths---${pluginOptions.repositoryName &&\n        pluginOptions.repositoryName.toString()}-`,\n    )\n\n  // Filter validations based on the filterValidations param.\n  const filteredValidations = Object.keys(baseValidations).reduce(\n    (acc, key) => {\n      if (filterValidations[key] || !filterValidations.hasOwnProperty(key))\n        acc[key] = baseValidations[key]\n      return acc\n    },\n    {},\n  )\n\n  const schema = yupObject().shape(filteredValidations)\n\n  return schema.validateSync(pluginOptions, { abortEarly: false })\n}\n","import md5 from 'md5'\nimport queryString from 'query-string'\n\nimport { IS_BROWSER, GLOBAL_STORE_KEY } from '../common/constants'\nimport { validatePluginOptions } from '../common/validatePluginOptions'\nimport { omit } from '../common/utils'\n\nexport const onClientEntry = async (_, rawPluginOptions) => {\n  if (!IS_BROWSER) return\n\n  const searchParams = queryString.parse(window.location.search)\n  const isPreviewSession = searchParams.token && searchParams.documentId\n\n  if (isPreviewSession) {\n    const pluginOptions = validatePluginOptions(\n      omit(['schemas', 'plugins'])(rawPluginOptions),\n      { schemas: false, schemasDigest: false },\n    )\n    const schemasDigest = md5(JSON.stringify(rawPluginOptions.schemas))\n\n    window[GLOBAL_STORE_KEY] = window[GLOBAL_STORE_KEY] || {}\n\n    Object.assign(window[GLOBAL_STORE_KEY], {\n      [rawPluginOptions.repositoryName]: {\n        pluginOptions,\n        schemasDigest,\n      },\n    })\n  }\n}\n"],"names":["IS_BROWSER","window","GLOBAL_STORE_KEY","isFunction","x","constructor","call","apply","omit","fields","obj","Object","keys","reduce","acc","key","includes","baseValidations","repositoryName","yupString","strict","required","accessToken","linkResolver","yupMixed","test","default","fetchLinks","yupArray","of","htmlSerializer","schemas","yupObject","lang","shouldNormalizeImage","plugins","max","typePathsFilenamePrefix","pathResolver","schemasDigest","validatePluginOptions","pluginOptions","filterValidations","toString","filteredValidations","hasOwnProperty","schema","shape","validateSync","abortEarly","onClientEntry","_","rawPluginOptions","searchParams","queryString","parse","location","search","isPreviewSession","token","documentId","md5","JSON","stringify","assign"],"mappings":"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"}