var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import availableProps from './availableProps';

var UserAgent = function UserAgent(_ref, _ref2) {
  var ua = _ref2.ua;

  var children = _ref.children,
      returnFullParser = _ref.returnFullParser,
      props = _objectWithoutProperties(_ref, ['children', 'returnFullParser']);

  var validProps = Object.keys(props).filter(function (prop) {
    return availableProps.indexOf(prop) !== -1;
  });
  var ret = validProps.some(function (prop) {
    return ua.uaResults[prop];
  });
  var funcChildren = typeof children === 'function';

  if (validProps.length !== 0) {
    if (funcChildren) {
      return children(ret);
    }
    if (ret) {
      return children;
    }
    return null;
  }
  if (funcChildren) {
    if (returnFullParser) {
      return children(ua.parser);
    }
    return children(ua.uaResults);
  }

  if (process.env.NODE_ENV !== 'production') {
    throw new Error('UserAgent should be used with a function as a child when used without any props');
  }
  return null;
};

if (process.env.NODE_ENV !== 'production') {
  UserAgent.propTypes = _extends({}, availableProps.reduce(function (acc, cur) {
    var _extends2;

    return _extends({}, acc, (_extends2 = {}, _extends2[cur] = PropTypes.bool, _extends2));
  }, {}), {
    returnFullParser: PropTypes.bool
  });
}

UserAgent.defaultProps = {
  returnFullParser: false
};

UserAgent.contextTypes = {
  ua: PropTypes.object
};

export default UserAgent;