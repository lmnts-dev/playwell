import { CompressedGraphMap, PrefetchConfig } from '../declarations';
declare type GuessFn = (params?: Partial<GuessFnParams>) => Predictions;
interface GuessFnParams {
    path: string;
    thresholds: ConnectionEffectiveTypeThresholds;
    connection: ConnectionEffectiveType;
}
declare type Probability = number;
declare type ConnectionEffectiveType = '4g' | '3g' | '2g' | 'slow-2g';
interface ConnectionEffectiveTypeThresholds {
    '4g': Probability;
    '3g': Probability;
    '2g': Probability;
    'slow-2g': Probability;
}
interface Predictions {
    [route: string]: Navigation;
}
export interface Navigation {
    probability: Probability;
    chunk?: string;
}
export interface Navigations {
    [key: string]: Navigation;
}
export declare let guess: GuessFn;
export declare const initialize: (global: any, compressed: number[][][], map: CompressedGraphMap, thresholds: PrefetchConfig) => void;
export {};
