"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _buttonStyle = _interopRequireDefault(require("part:@sanity/components/toggles/button-style"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ToggleButton extends _react.default.Component {
  render() {
    var _this$props = this.props,
        selected = _this$props.selected,
        className = _this$props.className;
    var buttonClasses = "\n      ".concat(selected ? _buttonStyle.default.selected : _buttonStyle.default.unSelected, "\n      ").concat(className, "\n    ");
    return _react.default.createElement(_default.default, _extends({}, this.props, {
      className: buttonClasses,
      kind: "simple"
    }), this.props.children);
  }

}

exports.default = ToggleButton;

_defineProperty(ToggleButton, "propTypes", {
  icon: _propTypes.default.func,
  onClick: _propTypes.default.func.isRequired,
  selected: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  title: _propTypes.default.string
});

_defineProperty(ToggleButton, "defaultProps", {
  className: '',
  disabled: false
});