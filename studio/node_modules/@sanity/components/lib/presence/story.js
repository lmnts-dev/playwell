"use strict";

var _range2 = _interopRequireDefault(require("lodash/range"));

var _react = _interopRequireDefault(require("react"));

var _storybook = require("part:@sanity/storybook");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _PresenceCircles = _interopRequireDefault(require("./PresenceCircles"));

var _PresenceCircle = _interopRequireDefault(require("./PresenceCircle"));

var _chance = _interopRequireDefault(require("chance"));

var _colorHasher = _interopRequireDefault(require("./colorHasher"));

var _PresenceList = _interopRequireDefault(require("./PresenceList"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var chance = new _chance.default();
var markers = (0, _range2.default)(50).map(marker => {
  return {
    type: 'presence',
    identity: chance.geohash({
      length: 9
    }),
    session: chance.guid(),
    color: chance.color(),
    user: {
      displayName: chance.name(),
      imageUrl: "https://placeimg.com/64/64/any?".concat(Math.random() * 1000)
    }
  };
});
(0, _storybook.storiesOf)('Presence').addDecorator(_knobs.withKnobs).add('Circles', () => {
  var showImage = (0, _knobs.boolean)('show image', true, 'test');
  var backgroundColor = (0, _knobs.color)('background color', '#ccc', 'test');
  var newMarkers = markers.map(marker => {
    return _objectSpread({}, marker, {
      user: _objectSpread({}, marker.user, {
        imageUrl: showImage ? marker.user.imageUrl : undefined
      })
    });
  });
  return _react.default.createElement("div", {
    style: {
      padding: '2em',
      backgroundColor,
      position: 'relative'
    }
  }, _react.default.createElement(_PresenceCircles.default, {
    markers: newMarkers.slice(0, (0, _knobs.number)('Number of markers', 10, 'test'))
  }));
}).add('Circle', () => {
  return _react.default.createElement("div", {
    style: {
      fontSize: '2em'
    }
  }, _react.default.createElement(_PresenceCircle.default, {
    text: (0, _knobs.text)('text', 'KG', 'props'),
    title: (0, _knobs.text)('title', undefined, 'props'),
    animateOnHover: (0, _knobs.boolean)('animateOnHover', false, 'props'),
    interactive: (0, _knobs.boolean)('interactive', false, 'props'),
    imageUrl: (0, _knobs.text)('imageUrl', 'https://placeimg.com/64/64', 'props'),
    color: (0, _knobs.color)('color', '#D0021B', 'props')
  }));
}).add('List', () => {
  return _react.default.createElement(_PresenceList.default, {
    markers: markers
  });
}).add('colorHasher', () => {
  var color = (0, _colorHasher.default)((0, _knobs.text)('string'));
  return _react.default.createElement("div", {
    style: {
      position: 'absolute',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      backgroundColor: color
    }
  });
});