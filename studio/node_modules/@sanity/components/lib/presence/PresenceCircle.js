"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactTippy = require("react-tippy");

var _PresenceCircle = _interopRequireDefault(require("./styles/PresenceCircle.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class PresenceCircle extends _react.default.PureComponent {
  render() {
    var _this$props = this.props,
        text = _this$props.text,
        color = _this$props.color,
        title = _this$props.title,
        interactive = _this$props.interactive,
        html = _this$props.html,
        imageUrl = _this$props.imageUrl,
        animateOnHover = _this$props.animateOnHover,
        showTooltip = _this$props.showTooltip;
    var imgStyles = {
      display: 'block',
      backgroundColor: color,
      backgroundImage: imageUrl && "url(".concat(imageUrl, ")")
    };
    return _react.default.createElement(_reactTippy.Tooltip, {
      disabled: !showTooltip || !title && !html,
      title: title,
      html: html,
      interactive: interactive,
      position: "top",
      trigger: "mouseenter",
      animation: "scale",
      arrow: true,
      theme: "light",
      distance: "10",
      duration: 50,
      className: "".concat(_PresenceCircle.default.root, " ").concat(animateOnHover ? _PresenceCircle.default.animateOnHover : ''),
      style: imgStyles
    }, imageUrl ? '' : _react.default.createElement("span", {
      className: _PresenceCircle.default.initials
    }, text));
  }

}

exports.default = PresenceCircle;

_defineProperty(PresenceCircle, "propTypes", {
  color: _propTypes.default.string,
  text: _propTypes.default.string,
  title: _propTypes.default.node,
  html: _propTypes.default.node,
  imageUrl: _propTypes.default.string,
  animateOnHover: _propTypes.default.bool,
  interactive: _propTypes.default.bool,
  showTooltip: _propTypes.default.bool
});

_defineProperty(PresenceCircle, "defaultProps", {
  showTooltip: true
});