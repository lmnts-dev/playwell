"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _AnnotationButtons = _interopRequireDefault(require("./AnnotationButtons"));

var _BlockStyleSelect = _interopRequireDefault(require("./BlockStyleSelect"));

var _DecoratorButtons = _interopRequireDefault(require("./DecoratorButtons"));

var _InsertMenu = _interopRequireDefault(require("./InsertMenu"));

var _ListItemButtons = _interopRequireDefault(require("./ListItemButtons"));

var _PrimaryGroup = _interopRequireDefault(require("./styles/PrimaryGroup.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable complexity */
class PrimaryGroup extends _react.default.PureComponent {
  render() {
    var _this$props = this.props,
        blockContentFeatures = _this$props.blockContentFeatures,
        editor = _this$props.editor,
        editorValue = _this$props.editorValue,
        onFocus = _this$props.onFocus,
        type = _this$props.type,
        userIsWritingText = _this$props.userIsWritingText,
        collapsedGroups = _this$props.collapsedGroups,
        insertItems = _this$props.insertItems,
        isMobile = _this$props.isMobile,
        isPopped = _this$props.isPopped;

    if (!editor) {
      return null;
    }

    return _react.default.createElement("div", {
      className: isPopped ? _PrimaryGroup.default.isPopped : _PrimaryGroup.default.root
    }, _react.default.createElement("div", {
      className: _PrimaryGroup.default.blockStyleGroup
    }, _react.default.createElement(_BlockStyleSelect.default, {
      className: _PrimaryGroup.default.blockStyleSelect,
      blockContentFeatures: blockContentFeatures,
      editor: editor,
      editorValue: editorValue
    })), blockContentFeatures.decorators.length > 0 && _react.default.createElement("div", {
      className: _PrimaryGroup.default.group
    }, _react.default.createElement(_DecoratorButtons.default, {
      collapsed: collapsedGroups.indexOf('decoratorButtons') >= 0,
      blockContentFeatures: blockContentFeatures,
      editor: editor,
      editorValue: editorValue
    })), blockContentFeatures.lists.length > 0 && _react.default.createElement("div", {
      className: _PrimaryGroup.default.group
    }, _react.default.createElement(_ListItemButtons.default, {
      collapsed: collapsedGroups.indexOf('listItemButtons') >= 0,
      blockContentFeatures: blockContentFeatures,
      editor: editor,
      editorValue: editorValue
    })), blockContentFeatures.annotations.length > 0 && _react.default.createElement("div", {
      className: _PrimaryGroup.default.group
    }, _react.default.createElement(_AnnotationButtons.default, {
      collapsed: collapsedGroups.indexOf('annotationButtons') >= 0,
      blockContentFeatures: blockContentFeatures,
      editor: editor,
      editorValue: editorValue,
      onFocus: onFocus,
      userIsWritingText: userIsWritingText
    })), insertItems.length > 0 && _react.default.createElement("div", {
      className: _PrimaryGroup.default.group
    }, _react.default.createElement(_InsertMenu.default, {
      collapsed: isMobile || collapsedGroups.indexOf('insertMenu') >= 0,
      showLabels: blockContentFeatures.types.blockObjects.concat(blockContentFeatures.types.inlineObjects).length < 4,
      blockTypes: blockContentFeatures.types.blockObjects,
      editor: editor,
      editorValue: editorValue,
      inlineTypes: blockContentFeatures.types.inlineObjects,
      onFocus: onFocus,
      type: type
    })));
  }

}

exports.default = PrimaryGroup;