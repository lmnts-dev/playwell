"use strict";

var _range2 = _interopRequireDefault(require("lodash/range"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _widgetStyles = _interopRequireDefault(require("part:@sanity/dashboard/widget-styles"));

var _storybook = require("part:@sanity/storybook");

var _knobs = require("part:@sanity/storybook/addons/knobs");

var _chance = _interopRequireDefault(require("chance"));

var _DashboardLayout = _interopRequireDefault(require("./DashboardLayout"));

var _WidgetGroup = _interopRequireDefault(require("./WidgetGroup.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var chance = new _chance.default();
var para = chance.paragraph({
  sentences: 2
});

class StoryWidget extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      height: 'auto',
      width: 'auto'
    });

    _defineProperty(this, "handleWidthChange", event => {
      this.setState({
        width: event.target.value
      });
    });

    _defineProperty(this, "handleHeightChange", event => {
      this.setState({
        height: event.target.value
      });
    });
  }

  render() {
    return _react.default.createElement("div", {
      "data-width": this.state.width || 'auto',
      "data-height": this.state.height || 'auto'
    }, _react.default.createElement("div", {
      className: _widgetStyles.default.container
    }, _react.default.createElement("div", {
      className: _widgetStyles.default.header
    }, _react.default.createElement("h2", {
      className: _widgetStyles.default.title
    }, this.props.title)), _react.default.createElement("div", {
      style: {
        padding: '0 1rem 1rem'
      }
    }, _react.default.createElement("p", null, para), _react.default.createElement("div", {
      style: {
        dispay: 'flex'
      }
    }, _react.default.createElement("label", null, "Width"), _react.default.createElement("select", {
      onChange: this.handleWidthChange
    }, _react.default.createElement("option", null, "auto"), _react.default.createElement("option", null, "small"), _react.default.createElement("option", null, "medium"), _react.default.createElement("option", null, "large"), _react.default.createElement("option", null, "full"))), _react.default.createElement("div", {
      style: {
        dispay: 'flex'
      }
    }, _react.default.createElement("label", null, "Height"), _react.default.createElement("select", {
      onChange: this.handleHeightChange
    }, _react.default.createElement("option", null, "auto"), _react.default.createElement("option", null, "small"), _react.default.createElement("option", null, "medium"), _react.default.createElement("option", null, "large"), _react.default.createElement("option", null, "full"))))));
  }

}

_defineProperty(StoryWidget, "propTypes", {
  title: _propTypes.default.string.isRequired
});

(0, _storybook.storiesOf)('Dashboard').addDecorator(_knobs.withKnobs).add('Grid', () => {
  var widgets = (0, _range2.default)((0, _knobs.number)('widgets', 7));
  return _react.default.createElement(_DashboardLayout.default, null, _react.default.createElement("div", {
    className: _WidgetGroup.default.root
  }, widgets.map(widget => _react.default.createElement(StoryWidget, {
    key: widget,
    title: "Widget ".concat(widget + 1)
  }))));
});