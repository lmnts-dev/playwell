"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _get2 = _interopRequireDefault(require("lodash/get"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Tutorial = _interopRequireDefault(require("./Tutorial"));

var _SanityTutorials = _interopRequireDefault(require("./SanityTutorials.css"));

var _dataAdapter = _interopRequireDefault(require("./dataAdapter"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var urlBuilder = _dataAdapter.default.urlBuilder,
    getFeed = _dataAdapter.default.getFeed;

function createUrl(slug, type) {
  if (type === 'tutorial') {
    return "https://www.sanity.io/docs/tutorials/".concat(slug.current);
  } else if (type === 'guide') {
    return "https://www.sanity.io/docs/guides/".concat(slug.current);
  }

  return false;
}

class SanityTutorials extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      feedItems: []
    });
  }

  componentDidMount() {
    var templateRepoId = this.props.templateRepoId;
    getFeed(templateRepoId).then(response => {
      this.setState({
        feedItems: response.items
      });
    });
  }

  render() {
    var feedItems = this.state.feedItems;
    var title = 'Learn about Sanity';
    return _react.default.createElement("div", {
      className: _SanityTutorials.default.root
    }, _react.default.createElement("header", {
      className: _SanityTutorials.default.header
    }, _react.default.createElement("h1", {
      className: _SanityTutorials.default.title
    }, title)), _react.default.createElement("ul", {
      className: _SanityTutorials.default.grid
    }, feedItems.map(feedItem => {
      if (!feedItem.title || !feedItem.guideOrTutorial && !feedItem.externalLink) {
        return null;
      }

      var presenter = feedItem.presenter || (0, _get2.default)(feedItem, 'guideOrTutorial.presenter') || {};
      var subtitle = (0, _get2.default)(feedItem, 'category');
      var _feedItem$guideOrTuto = feedItem.guideOrTutorial,
          guideOrTutorial = _feedItem$guideOrTuto === void 0 ? {} : _feedItem$guideOrTuto;
      return _react.default.createElement("li", {
        key: feedItem._id
      }, _react.default.createElement(_Tutorial.default, {
        title: feedItem.title,
        href: createUrl(guideOrTutorial.slug, guideOrTutorial._type) || feedItem.externalLink,
        presenterName: presenter.name,
        presenterSubtitle: subtitle,
        showPlayIcon: feedItem.hasVideo,
        posterURL: urlBuilder.image(feedItem.poster).height(360).url()
      }));
    })));
  }

}

_defineProperty(SanityTutorials, "propTypes", {
  templateRepoId: _propTypes.default.string
});

_defineProperty(SanityTutorials, "defaultProps", {
  templateRepoId: null
});

var _default = SanityTutorials;
exports.default = _default;