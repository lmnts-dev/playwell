"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Delay extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      done: false
    });
  }

  componentDidMount() {
    this.timer = setTimeout(() => {
      this.setState({
        done: true
      });
    }, this.props.ms);
  }

  componentWillUnmount() {
    clearTimeout(this.timer);
  }

  render() {
    var children = this.props.children;

    if (!this.state.done) {
      return null;
    }

    return typeof children === 'function' ? children() : children;
  }

}

exports.default = Delay;
Delay.propTypes = {
  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),
  ms: PropTypes.number.isRequired
};