"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _InspectView = _interopRequireDefault(require("./InspectView"));

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

var _history = _interopRequireDefault(require("part:@sanity/base/datastore/history"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class InspectHistory extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      document: undefined
    });
  }

  componentDidMount() {
    var _this$props$event = this.props.event,
        displayDocumentId = _this$props$event.displayDocumentId,
        rev = _this$props$event.rev;
    this.fetch(displayDocumentId, rev);
  }

  UNSAFE_componentWillReceiveProps(nextProps) {
    if (nextProps.event !== this.props.event) {
      var _nextProps$event = nextProps.event,
          displayDocumentId = _nextProps$event.displayDocumentId,
          rev = _nextProps$event.rev;
      this.fetch(displayDocumentId, rev);
    }
  }

  fetch(id, rev) {
    _history.default.getDocumentAtRevision(id, rev).then(document => {
      this.setState({
        document
      });
    });
  }

  render() {
    if (this.state.document) {
      return _react.default.createElement(_InspectView.default, {
        value: this.state.document,
        onClose: this.props.onClose
      });
    }

    return _react.default.createElement(_spinner.default, null);
  }

}

exports.default = InspectHistory;

_defineProperty(InspectHistory, "propTypes", {
  event: _propTypes.default.object.isRequired,
  onClose: _propTypes.default.func
});