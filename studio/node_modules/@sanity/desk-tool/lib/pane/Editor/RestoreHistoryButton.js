"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactTippy = require("react-tippy");

var _popover = _interopRequireDefault(require("part:@sanity/components/dialogs/popover"));

var _default = _interopRequireDefault(require("part:@sanity/components/buttons/default"));

var _buttonGrid = _interopRequireDefault(require("part:@sanity/components/buttons/button-grid"));

var _Editor = _interopRequireDefault(require("../styles/Editor.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class RestoreHistoryButton extends _react.default.PureComponent {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      showConfirmHistoryRestore: false
    });

    _defineProperty(this, "handleCancelHistoryRestore", () => {
      this.setState({
        showConfirmHistoryRestore: false
      });
    });

    _defineProperty(this, "handleShowHistoryRestore", () => {
      this.setState({
        showConfirmHistoryRestore: true
      });
    });

    _defineProperty(this, "handleConfirmHistoryRestore", () => {
      var onRestore = this.props.onRestore;
      this.setState({
        showConfirmHistoryRestore: false
      });
      onRestore();
    });
  }

  render() {
    var disabled = this.props.disabled;
    var showConfirmHistoryRestore = this.state.showConfirmHistoryRestore;
    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", null, _react.default.createElement(_reactTippy.Tooltip, {
      arrow: true,
      theme: "light",
      disabled: 'ontouchstart' in document.documentElement,
      className: _Editor.default.publishButton,
      html: _react.default.createElement("div", null, "Restore to this version")
    }, _react.default.createElement(_default.default, {
      disabled: disabled,
      onClick: this.handleShowHistoryRestore,
      color: "primary"
    }, "Restore")), _react.default.createElement("div", {
      className: _Editor.default.publishInfoUndoButton
    }, showConfirmHistoryRestore && _react.default.createElement(_popover.default, {
      onClickOutside: this.handleCancelHistoryRestore,
      useOverlay: false,
      hasAnimation: true
    }, _react.default.createElement("div", null, _react.default.createElement("div", {
      className: _Editor.default.popOverText
    }, _react.default.createElement("strong", null, "Are you sure"), " you want to restore this document?"), _react.default.createElement(_buttonGrid.default, null, _react.default.createElement(_default.default, {
      kind: "simple",
      onClick: this.handleCancelHistoryRestore
    }, "Cancel"), _react.default.createElement(_default.default, {
      color: "danger",
      onClick: this.handleConfirmHistoryRestore
    }, "Restore")))))));
  }

}

exports.default = RestoreHistoryButton;

_defineProperty(RestoreHistoryButton, "propTypes", {
  disabled: _propTypes.default.bool.isRequired,
  onRestore: _propTypes.default.func.isRequired
});